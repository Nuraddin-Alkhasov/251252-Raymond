<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:vw="http://inosoft.com/visiwin7">
    <Style x:Key="TB_Reports" TargetType="{x:Type vw:ToggleButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{DynamicResource FP_Gray_Gradient}" />
        <Setter Property="BlinkBrush" Value="{DynamicResource ButtonBlinkBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Content" Value="{Binding Text, RelativeSource={RelativeSource Self}}" />
		
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vw:ToggleButton}">
                    <Grid>
                        <Border x:Name="BtnShadow" Background="Black" CornerRadius="4" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="{DynamicResource ShadowColor}"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <vw:SymbolPresenter HorizontalAlignment="{TemplateBinding SymbolHorizontalAlignment}" Margin="{TemplateBinding SymbolMargin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" SymbolResourceKey="{TemplateBinding SymbolResourceKey}" Symbol="{TemplateBinding Symbol}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding SymbolVerticalAlignment}" />
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedFontBrush}" />
                            <Setter Property="Background" Value="{DynamicResource FP_Red_Gradient}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}" />
                          
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedFontBrush}" />
                            <Setter Property="Background" Value="{DynamicResource FP_Red_Gradient}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}" />
                            <Setter TargetName="BtnShadow" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="BlinkMode" Value="BlinkBrush" />
                                <Condition Property="BlinkState" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{Binding BlinkBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="BlinkMode" Value="Visibility" />
                                <Condition Property="BlinkState" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="BackgroundBorder" Value="Hidden" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Resource dictionary entries should be defined here. -->
	
</ResourceDictionary>