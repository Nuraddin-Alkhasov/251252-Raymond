<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>VisiWin7.View.WPF</name>
  </assembly>
  <members>
    <member name="T:VisiWin.Controls.AcknowledgeAllAlarmsOperationParameter">
      <summary>Beschreibt die über "AcknowledgeAllAlarms" zu quittierenden Alarme eines AlarmList-Steuerelementes zur Weitergabe an das VerificationBehavior.</summary>
    </member>
    <member name="P:VisiWin.Controls.AcknowledgeAllAlarmsOperationParameter.AllAlarms">
      <summary>Gibt eine Liste der über AcknowledgeAllAlarms zu quittierenden Alarme zurück oder legt sie fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.AcknowledgeAllAlarmsOperationParameter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ AcknowledgeAllAlarmsOperationParameter.</summary>
    </member>
    <member name="T:VisiWin.Controls.AcknowledgeCurrentAlarmOperationParameter">
      <summary>Beschreibt den über "AcknowledgeCurrentAlarm" zu quittierenden Alarm eines AlarmLine-Steuerelementes zur Weitergabe an das VerificationBehavior.</summary>
    </member>
    <member name="P:VisiWin.Controls.AcknowledgeCurrentAlarmOperationParameter.SelectedAlarm">
      <summary>Gibt den im Steuerelement zu quittierenden Alarm zurück oder legt ihn fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.AcknowledgeCurrentAlarmOperationParameter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ AcknowledgeCurrentAlarmOperationParameter.</summary>
    </member>
    <member name="T:VisiWin.Controls.AcknowledgeSelectedAlarmsOperationParameter">
      <summary>Beschreibt die über "AcknowledgeSelectedAlarms" zu quittierenden Alarme eines AlarmList-Steuerelementes zur Weitergabe an das VerificationBehavior.</summary>
    </member>
    <member name="P:VisiWin.Controls.AcknowledgeSelectedAlarmsOperationParameter.SelectedAlarms">
      <summary>Gibt die im Steuerelement zu quittierenden Alarme zurück oder legt sie fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.AcknowledgeSelectedAlarmsOperationParameter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ AcknowledgeSelectedAlarmsOperationParameter.</summary>
    </member>
    <member name="T:VisiWin.Controls.AlarmColumn">
      <summary>Kapselt die Informationen einer Spalte in den Alarm-Steuerelementen.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmColumn.AlarmProperty">
      <summary>Beschreibt die Alarminformation, die in dieser Spalte dargestellt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmColumn.CellTemplate">
      <summary>Legt das DataTemplate für die Spalte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmColumn.Width">
      <summary>legt die Breite (in DIP) für die Spalte fest.</summary>
    </member>
    <member name="E:VisiWin.Controls.AlarmColumn.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ AlarmColumn, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmColumn.GetBindingPath(VisiWin.Controls.AlarmProperty)">
      <summary>Gibt einen String zurück, der den Bindungspfad eines DataTemplates zur angegebenen Alarminformation in einem AlarmListItem beschreibt.</summary>
      <returns>Der abgefragte Bindungspfad.</returns>
      <param name="alarmProperty">Ein AlarmProperty-Wert, der die zu bindende Alarminformation angibt.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmColumn.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.AlarmColumn.CellTemplateProperty">
      <summary>Bezeichnet die CellTemplate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmColumn.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ AlarmColumn.</summary>
    </member>
    <member name="T:VisiWin.Controls.AlarmControlBase">
      <summary>Basisklasse für Steuerelemente, die spaltenorientiert die Daten von Alarmen darstellen.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.AlarmFilter">
      <summary>Legt ein Objekt fest, das die zurückgegebenen Alarme anhand von Gruppen, Klassen, Alarmstatus und der Priorität filtert.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.Alarms">
      <summary>Gibt die Liste der im Steuerelement anzuzeigenden Alarme zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.AlarmService">
      <summary>Gibt eine Referenz auf das intern verwendete IAlarmService-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.AlarmSortMode">
      <summary>Legt die Sortierreihenfolge der Alarme in der Alarms-Liste fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.Columns">
      <summary>Legt fest, welche Alarminformationen (Zeitstempel, Texte, Zusatzinformationen) im Steuerelement angezeigt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.CurrentAlarms">
      <summary>Gibt einen Verweis auf das intern verwendete ICurrentAlarms-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.DateTimeMode">
      <summary>Legt fest, ob Datum und/oder Uhrzeit in den Zeitstempelinformationen eines Alarms angezeigt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.DesiredClasses">
      <summary>Angabe der Alarmklassennamen, zu denen aktuell im System anstehende Alarme zurückgegeben werden sollen. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.DesiredGroups">
      <summary>Angabe der Alarmgruppennamen, zu denen aktuell im System anstehende Alarme zurückgegeben werden sollen. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.DesiredStates">
      <summary>Angabe eines oder mehrerer Alarmzustands-Werte. Nimmt ein aktuell im System anstehender Alarm einen der angegebenen Zustände ein, wird er zurückgegeben. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.FormatDate">
      <summary>Legt die Formatierung für das Datum fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.FormatTime">
      <summary>Legt die Formatierung für die Zeit fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.IsAlarmFilterConfiguration">
      <summary>Legt fest oder gibt zurück, dass nacheinander mehrere Werte im verwendeten Alarmfilter-Objekt geändert werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.IsInDesignMode">
      <summary>Gibt zurück, ob die Applikation im Designer geladen ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.MaxPriority">
      <summary>Legt die obere Prioritätsgrenze fest, ab der Alarme ausgefiltert werden. Überschreitet die Priorität eines Alarms den hier angegeben Wert, wird er in der über den Filter spezifizierten Abfrage nicht zurückgegeben. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.MinPriority">
      <summary>Legt die untere Prioritätsgrenze fest, ab der Alarme ausgefiltert werden. Unterschreitet die Priorität eines Alarms den hier angegeben Wert, wird er in der über den Filter spezifizierten Abfrage nicht zurückgegeben. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmControlBase.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.CreateAlarmFilter">
      <summary>Erzeugt aus den Einstellungen der Eigenschaften DesiredClasses, DesiredGroups, DesiredStates, MaxPriority und MinPriority ein Filter-Objekt.</summary>
      <returns>Das erzeugte Filter-Objekt.</returns>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.GetCellTemplate(VisiWin.Controls.AlarmProperty)">
      <summary>Gibt das DataTemplate für die Darstellung der angegebenen Alarminformation zurück.</summary>
      <returns>Das angeforderte DataTemplate.</returns>
      <param name="alarmProperty">Informationstyp der Spalte, für die das Template zurückzugeben ist.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.OnAlarmsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich die aktuell angezeigten Alarminformationen im System ändern. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs, das weitere Informationen enthält. </param>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.OnAlarmsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich die Alarminformationen in der Eigenschaft Alarms ändern.</summary>
      <param name="sender">Objekt, das die Änderung meldet.</param>
      <param name="e">Objekt vom Typ NotifyCollectionChangedEventArgs, das weitere Informationen zur Änderung enthält.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.OnAlarmSortModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Inhalt der AlarmSortMode-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.OnColumnsChanged">
      <summary>Wird aufgerufen, wenn sich der Inhalt der Columns-Eigenschaft ändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.SetAlarmFilter(System.String,System.String,VisiWin.Alarm.AlarmState,System.Int32,System.Int32)">
      <summary>Setzt einen neuen Filter, wobei die Filterwerte als Parameter angegeben werden.</summary>
      <param name="desiredClasses">Angabe der Alarmklassennamen, zu denen aktuell im System anstehende Alarme zurückgegeben werden sollen. (®IAlarmFilter.DesiredClasses)</param>
      <param name="desiredGroups">Angabe der Alarmgruppennamen, zu denen aktuell im System anstehende Alarme zurückgegeben werden sollen. (®IAlarmFilter.DesiredGroups) </param>
      <param name="desiredStates">Angabe eines oder mehrerer Alarmzustands-Werte. Nimmt ein aktuell im System anstehender Alarm einen der angegebenen Zustände ein, wird er zurückgegeben. (®IAlarmFilter.DesiredStates)</param>
      <param name="minPriority">Legt die untere Prioritätsgrenze fest, ab der Alarme ausgefiltert werden. Unterschreitet die Priorität eines Alarms den hier angegeben Wert, wird er in der über den Filter spezifizierten Abfrage nicht zurückgegeben. (®IAlarmFilter.MinPriority) </param>
      <param name="maxPriority">Legt die obere Prioritätsgrenze fest, ab der Alarme ausgefiltert werden. Überschreitet die Priorität eines Alarms den hier angegeben Wert, wird er in der über den Filter spezifizierten Abfrage nicht zurückgegeben. (®IAlarmFilter.MaxPriority)</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.SetAlarmFilter(VisiWin.Alarm.IAlarmFilter)">
      <summary>Setzt einen neuen Filter, wobei die Filterwerte als IAlarmFilter angegeben werden.</summary>
      <param name="alarmfilter">IAlarmFilter (mit IAlarmService.CreateAlarmFilter erzeugt) mit den gewünschten Filtereigenschaften.</param>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.AlarmFilterProperty">
      <summary>Bezeichnet die AlarmFilter-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.AlarmSortModeProperty">
      <summary>Bezeichnet die AlarmSortMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.AlarmsProperty">
      <summary>Bezeichnet die Alarms-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.ColumnsProperty">
      <summary>Bezeichnet die Columns-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.DateTimeModeProperty">
      <summary>Bezeichnet die DateTimeMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.DesiredClassesProperty">
      <summary>Bezeichnet die DesiredClasses-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.DesiredGroupsProperty">
      <summary>Bezeichnet die DesiredGroups-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.DesiredStatesProperty">
      <summary>Bezeichnet die DesiredStates-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.FormatDateProperty">
      <summary>Bezeichnet die FormatDate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.FormatTimeProperty">
      <summary>Bezeichnet die FormatTime-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.IsAlarmFilterConfigurationProperty">
      <summary>Bezeichnet die IsAlarmFilterConfiguration-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.IsInDesignModeProperty">
      <summary>Bezeichnet die IsInDesignMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.MaxPriorityProperty">
      <summary>Bezeichnet die MaxPriority-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.MinPriorityProperty">
      <summary>Bezeichnet die MinPriority-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmControlBase.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmControlBase.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ AlarmControlBase.</summary>
    </member>
    <member name="T:VisiWin.Controls.AlarmLine">
      <summary>Alarmzeile. Zeigt den höchstpriorisierten aktuell im System anstehenden Alarm an. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmLine.AcknowledgeCurrentAlarmCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe der aktuell im Steuerelement angezeigte Alarm quittiert werden kann.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmLine.CountCellTemplate">
      <summary>Legt das ContentTemplate für die Count-Spalte (Anzahl der anstehenden Alarme mit der aktuell höchsten Priorität) fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmLine.CurrentDisplayedAlarm">
      <summary>Gibt das aktuell im Steuerelement angezeigte Alarmobjekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmLine.DisplayMode">
      <summary>Legt fest, ob die Alarminformation spaltenweise oder als fortlaufender Text dargestellt werden. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmLine.HighestAlarmList">
      <summary>Gibt eine Liste der aktuell anstehenden Alarme mit der höchsten Priorität zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmLine.IsHeaderHidden">
      <summary>Legt fest, ob die Spaltenköpfe im Steuerelement angezeigt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmLine.SymbolCellTemplate">
      <summary>Legt das ContentTemplate für die Symbol-Spalte (Symbol der Alarmklasse) fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmLine.ToggleAlarms">
      <summary>Legt fest, ob zyklisch zwischen mehreren anstehenden Alarmen gleicher Priorität gewechselt werden soll.</summary>
    </member>
    <member name="E:VisiWin.Controls.AlarmLine.VerifyOperation">
      <summary>Wird ausgelöst, wenn im Steuerelement eine verifikationsunterstützte Handlung gestartet wurde. </summary>
      <param name="sender">Objekt vom Typ AlarmLine, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VerifyOperationEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmLine.AcknowledgeCurrentAlarm">
      <summary>Quittiert den aktuell im Steuerelement angezeigten Alarm.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmLine.GetCellTemplate(VisiWin.Controls.AlarmProperty)">
      <summary>Gibt das DataTemplate für die Darstellung der angegebenen Alarminformation zurück. </summary>
      <returns>Das angeforderte DataTemplate.</returns>
      <param name="alarmProperty">Informationstyp der Spalte, für die das Template zurückzugeben ist.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmLine.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmLine.OnColumnsChanged">
      <summary>Wird bei Änderungen in der Columns-Eigenschaft aufgerufen.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmLine.OnVerifyOperation(System.String,System.Object)">
      <summary>Wird ausgeführt, wenn der Benutzer eine verifikationsunterstützte Handlung gestartet wurde. Löst das VerifyOperation-Ereignis aus.</summary>
      <returns>true, wenn die Handlung (z.B. über die Benutzerschnittstelle des VerificationBehavior) verifiziert wurde.</returns>
      <param name="operationName">Name der Handlung.</param>
      <param name="operationParameter">Parameter der Handlung.</param>
    </member>
    <member name="F:VisiWin.Controls.AlarmLine.DisplayModeProperty">
      <summary>Bezeichnet die DisplayMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmLine.HighestAlarmListProperty">
      <summary>Bezeichnet die HighestAlarmList-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmLine.IsHeaderHiddenProperty">
      <summary>Bezeichnet die IsHeaderHidden-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmLine.ToggleAlarmsProperty">
      <summary>Bezeichnet die ToggleAlarms-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmLine.VerifyOperationEvent">
      <summary>Bezeichnet das VerifyOperation-Routingereignis.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmLine.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ AlarmLine.</summary>
    </member>
    <member name="T:VisiWin.Controls.AlarmList">
      <summary>Zeigt alle anstehenden Alarme als Tabelle an.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmList.AcknowledgeAllAlarmsCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe alle im Steuerelement dargestellten Alarme quittiert werden können.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmList.AcknowledgeSelectedAlarmsCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe der aktuell im Steuerelement markierte Alarm quittiert werden kann.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmList.CountCellTemplate">
      <summary>Legt das ContentTemplate für die Count-Spalte (Anzahl der anstehenden Alarme mit der aktuell höchsten Priorität) fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmList.SymbolCellTemplate">
      <summary>Legt das ContentTemplate für die Symbol-Spalte (Symbol der Alarmklasse) fest.</summary>
    </member>
    <member name="E:VisiWin.Controls.AlarmList.VerifyOperation">
      <summary>Wird ausgelöst, wenn im Steuerelement eine verifikationsunterstützte Handlung gestartet wurde. </summary>
      <param name="sender">Objekt vom Typ AlarmList, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VerifyOperationEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmList.AcknowledgeAllAlarms">
      <summary>Quittiert alle im Steuerelement dargestellten Alarme.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmList.AcknowledgeSelectedAlarms">
      <summary>Quittiert den aktuell im Steuerelement markierten Alarm.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmList.GetCellTemplate(VisiWin.Controls.AlarmProperty)">
      <summary>Gibt das DataTemplate für die Darstellung der angegebenen Alarminformation zurück. </summary>
      <returns>Das abgefragte DataTemplate.</returns>
      <param name="alarmProperty">Ein AlarmProperty-Wert, der die Alarminformation beschreibt.</param>
    </member>
    <member name="M:VisiWin.Controls.AlarmList.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmList.OnColumnsChanged">
      <summary>Wird bei Änderungen in der Columns-Eigenschaft aufgerufen.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmList.OnVerifyOperation(System.String,System.Object)">
      <summary>Wird ausgeführt, wenn eine verifikationsunterstützte Handlung gestartet wurde.  Löst das VerifyOperation-Ereignis aus.</summary>
      <returns>true, wenn die Handlung erlaubt ist, ansonsten false.</returns>
      <param name="operationName">Name der Handlung.</param>
      <param name="operationParameter">Parameter der Handlung.</param>
    </member>
    <member name="F:VisiWin.Controls.AlarmList.VerifyOperationEvent">
      <summary>Bezeichnet das VerifyOperation-Routingereignis.</summary>
    </member>
    <member name="M:VisiWin.Controls.AlarmList.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ AlarmList.</summary>
    </member>
    <member name="T:VisiWin.Controls.AlarmListItem">
      <summary>Kapselt die Informationen eines Alarms in den Alarm-Steuerelementen.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.AcknowledgeTime">
      <summary>Legt den Zeitstempel des Quittierens fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.AcknowledgeTimeString">
      <summary>Legt den Zeitstempel des Quittierens als formatierte Zeichenkette fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.ActivationCounter">
      <summary>Legt fest, wie oft ein Alarm seit der Auslösung den reaktivierten Zustand eingenommen hat.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.ActivationTime">
      <summary>Legt den Zeitpunkt des Auftretens des Alarms fest (wann das Ereignisbit gesetzt wurde). </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.ActivationTimeString">
      <summary>Legt den Wert der ActivationTime-Eigenschft als formatierte Zeichenkette fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.AlarmItem">
      <summary>Legt das intern verwendete IAlarmItem-Objekt fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.AlarmState">
      <summary>Legt den Zustand des Alarms fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.AlarmStateText">
      <summary>Legt den sprachumschaltbaren Text zum aktiven Zustand des Alarmes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.Class">
      <summary>Legt das IAlarmClass Objekt fest, das mit dem IAlarmItem-Objekt verknüpft ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.DeactivationTime">
      <summary>Legt den Zeitpunkt des Zurücksetzens des Alarms fest (wann der Alarm endgültig quittiert wurde). </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.DeactivationTimeString">
      <summary>Legt den Zeitpunkt des Zurücksetzens des Alarms als formatierte Zeichenkette fest (wann der Alarm endgültig quittiert wurde).</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.Group">
      <summary>Legt einen Verweis auf das Objekt fest, das die Gruppe beschreibt, in der der Alarm projektiert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.ID">
      <summary>Legt die eindeutige numerische Kennung des Alarms aus der Projektdatenbank fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.LocalizableParam1">
      <summary>Legt den projektierten Wert des alphanumerischen Parameters "Parameter1" fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.LocalizableText">
      <summary>Legt die intern verwendete eindeutige Kennung des Indextextes fest, der den sprachumschaltbaren Meldetext beschreibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.Machine">
      <summary>Legt den Rechnernamen fest, auf dem der Alarm quittiert wurde. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.Name">
      <summary>Legt den Namen des Alarms fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.Param1">
      <summary>Legt den Wert des alphanumerischen Parameters "Parameter1" fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.Param2">
      <summary>Gibt den Wert des numerischen Parameters "Parameter2" an. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.Priority">
      <summary>Gibt die Priorität der Alarmdefinition an. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.StateInfo">
      <summary>Legt ein Objekt vom Typ IAlarmStateInfo fest, das die Informationen zur Darstellung des Alarms für den aktuellen Zustand beschreibt. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.Tag">
      <summary>Legt ein frei wählbares Objekt fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.Text">
      <summary>Gibt den Wert des Parameters "Meldetext" in der aktuell in der Applikation eingestellten Sprache zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.AlarmListItem.User">
      <summary>Legt den Anmeldenamen des Benutzers fest, der den Alarm quittiert hat. </summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmListItem.AcknowledgeTimeStringProperty">
      <summary>Bezeichnet die AcknowledgeTimeString-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmListItem.ActivationCounterProperty">
      <summary>Bezeichnet die ActivationCounter-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmListItem.ActivationTimeStringProperty">
      <summary>Bezeichnet die ActivationTimeString-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmListItem.AlarmStateTextProperty">
      <summary>Bezeichnet die AlarmStateText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmListItem.DeactivationTimeStringProperty">
      <summary>Bezeichnet die DeactivationTimeString-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmListItem.UserProperty">
      <summary>Bezeichnet die User-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="T:VisiWin.Controls.Bar">
      <summary>Steuerelement, das einen Prozessvariablenwert als Balkengrafik mit Skala anzeigt.</summary>
    </member>
    <member name="M:VisiWin.Controls.Bar.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angefordete Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.Bar.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Bar.</summary>
    </member>
    <member name="T:VisiWin.Controls.BarBase">
      <summary>Basisimplementierung für ein Steuerelement, das einen Prozessvariablenwert als Balkengrafik mit Skala anzeigt.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BarBackgroundBrush">
      <summary>Legt den Pinsel zum Zeichnen des Balkenhintergrundes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BarBorderBrush">
      <summary>Legt den Pinsel zum Zeichnen des Balkenrahmens fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BarBorderHeight">
      <summary>Gibt die Höhe des Balkenrahmens zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BarBorderThickness">
      <summary>Legt die Breite der Rahmenlinien um den Balken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BarBorderWidth">
      <summary>Gibt die Breite des Balkenrahmens zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BarHeight">
      <summary>Gibt die Höhe des Balkens im Steuerelement zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BarLength">
      <summary>Legt fest, wieviel Platz der Balken der Balkenanzeige im Steuerelement einnimmt.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BarWidth">
      <summary>Gibt die Breite des Balkens im Steuerelement zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BorderHeight">
      <summary>Gibt die Höhe des intern verwendeten Border-Objektes zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.BorderWidth">
      <summary>Gibt die Breite des intern verwendeten Border-Objektes zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.Direction">
      <summary>Legt die Verlaufsrichtung der Balkenanzeige fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.IsLimitsMonoColorEnabled">
      <summary>Legt fest, ob der Balken in den über Limits festgelegten farblichen Bereichen oder einfarbig in der aktuell dem Variablenwert zugeordneten Farbe dargestellt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.PartBar">
      <summary>Gibt eine Referenz auf das Canvas-Objekt zurück, welches das Bar-Control repräsentiert.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.PartLimitsBackgroundGrid">
      <summary>Gibt eine Referenz auf das Gid-Objekt zurück, welches sämtliche Limit-Controls (Background) des Bar-Steuerelement enthält. </summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.PartLimitsStrokeGrid">
      <summary>Gibt eine Referenz auf das Grid-Objekt zurück, welches sämtliche Limit-Controls (Stroke) des Bar-Steuerelement enthält. </summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.PartScale">
      <summary>Gibt eine Referenz auf das Scale-Objekt zurück, welches die Skala des Controls repräsentiert. </summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleAlign">
      <summary>Legt die Einteilung der Skalenwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleBarAlignment">
      <summary>Legt fest, auf welcher Seite der Balkenanzeige die Skala angeordnet wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleDisplay">
      <summary>Legt fest, welche Bestandteile der Skala gezeichnet werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleFormatString">
      <summary>Legt die Formatierung für die Skalenwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleHeight">
      <summary>Gibt die Höhe der Skala zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleLength">
      <summary>Legt fest, wieviel Platz die Skala im Steuerelement einnimmt.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleLimitVisibility">
      <summary>Legt fest, wie die Anzeige der Skalenwerte an den Skalenenden behandelt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleLineWidthMajor">
      <summary>Legt die Breite der Hauptrasterlinien in der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleLineWidthMinor">
      <summary>Legt die Breite der Nebenrasterlinien in der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScalePosition">
      <summary>Legt die Ausrichtung von Skalenbalken und Skalenwerten fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleRulerBaseLine">
      <summary>Legt fest, ob der Skalenbalken (senkrecht zu den Rasterlinien angelegte Linie) gezeichnet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleRulerMajorAlign">
      <summary>Legt die Einteilung der Hauptrasterlinien in der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleRulerMinorAlign">
      <summary>Legt die Einteilung der Nebenrasterlinien in der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleRulerSizeRatio">
      <summary>Legt das Größenverhältnis zwischen Skalenlinien und Skalenwerten fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleValueDirections">
      <summary>Legt fest, ob die Skala auf- oder absteigend beschriftet werden soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ScaleWidth">
      <summary>Gibt die Breite der Skala zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ValueUnitMargin">
      <summary>Legt den äußeren Rand für den Container fest, der die numerische Wertanzeige zusammen mit dem Einheitentext enthält. </summary>
    </member>
    <member name="P:VisiWin.Controls.BarBase.ValueUnitMinWidth">
      <summary>Legt die minimale Größe für den Container fest, der die numerische Wertanzeige zusammen mit dem Einheitentext enthält. </summary>
    </member>
    <member name="M:VisiWin.Controls.BarBase.CreateControlItems">
      <summary>Erzeugt die Zeichenelemente im Steuerelement und fügt sie in den VisualTree ein. </summary>
    </member>
    <member name="M:VisiWin.Controls.BarBase.CreateLimitControl(VisiWin.Controls.Limit)">
      <summary>
      </summary>
      <param name="scaleLimit">
      </param>
    </member>
    <member name="M:VisiWin.Controls.BarBase.CreateLimitControl(VisiWin.Controls.Limit,System.Object)">
      <summary>Erzeugt ein neues Rectangle-Objekt aus dem gegebenen Limit-Objekt. </summary>
      <returns>Liefert ein neues Rectangle-Objekt, oder null, wenn das Limit-Objekt null ist oder der Startwert im Limit-Objekt größer als der Endwert ist.</returns>
      <param name="scaleLimit">Das Limit-Objekt. </param>
      <param name="param">true: Rectangle für den Hintergrund erstellen, false: Rectangle für den Vordergrund erstellen. </param>
    </member>
    <member name="M:VisiWin.Controls.BarBase.IsLimitsBackgroundGridValid">
      <summary>Überprüft, ob das Element 'partLimitsBackgroundGrid' im Template vorhanden ist. </summary>
      <returns>true wenn das Element 'partLimitsBackgroundGrid' nicht null ist. </returns>
    </member>
    <member name="M:VisiWin.Controls.BarBase.IsLimitsStrokeGridValid">
      <summary>Überprüft, ob das Element 'partLimitsStrokeGrid' im Template vorhanden ist. </summary>
      <returns>true, wenn das Element 'partLimitsStrokeGrid' nicht null ist, ansonsten false.</returns>
    </member>
    <member name="M:VisiWin.Controls.BarBase.IsReverse">
      <summary>Gibt true zurück, wenn die Balkenanzeige in umgekehrter Richtung zum gewöhnlichen WPF-Koordinatensystem läuft, die Eigenschaft 'Direction' also den Wert 'Up' oder 'Left' enthält.</summary>
      <returns>True, wenn der Balken in umgekehrter Richtung zum gewöhnlichen WPF-Koordinatensystem läuft, die Eigenschaft 'Direction' also den Wert 'Up' oder 'Left' enthält. </returns>
    </member>
    <member name="M:VisiWin.Controls.BarBase.IsVerticalDirection">
      <summary>Liefert true, wenn die Balkenanzeige vertikal verläuft, die Eigenschaft 'Direction' also den Wert 'Up' oder 'Down' enthält. </summary>
      <returns>True, wenn die Balkenanzeige vertikal verläuft, die Eigenschaft 'Direction' also den Wert 'Up' oder 'Down' enthält. </returns>
    </member>
    <member name="M:VisiWin.Controls.BarBase.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.BarBase.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.BarBase.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.BarBase.UpdateClipping">
      <summary>Aktualisiert das Clipping des PART_LimitGrid-Controls. </summary>
    </member>
    <member name="M:VisiWin.Controls.BarBase.UpdateLimits">
      <summary>Wird aufgerufen, wenn IsLimitsColorMonoEnabled auf true gesetzt ist und ein farbumschlag in den über Limits definierten Bereichen eine Farbumschaltung notwendig wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.BarBase.Value2Pixel(System.Double)">
      <summary>Gibt zum gegebenen Wert den Abstand in Pixels bezogen auf den Wert der Eigenschaft 'Minimum' (= 0 Pixels). </summary>
      <returns>Die Anzahl Pixels bezogen auf den minimalen Wert. </returns>
      <param name="value">Der umzurechnende Wert. </param>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BarBackgroundBrushProperty">
      <summary>Bezeichnet die BarBackgroundBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BarBorderBrushProperty">
      <summary>Bezeichnet die BarBorderBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BarBorderHeightProperty">
      <summary>Bezeichnet die BarBorderHeight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BarBorderThicknessProperty">
      <summary>Bezeichnet die BarBorderThickness-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BarBorderWidthProperty">
      <summary>Bezeichnet die BarBorderWidth-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BarHeightProperty">
      <summary>Bezeichnet die BarHeight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BarLengthProperty">
      <summary>Bezeichnet die BarLength-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BarWidthProperty">
      <summary>Bezeichnet die BarWidth-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BorderHeightProperty">
      <summary>Bezeichnet die BorderHeight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.BorderWidthProperty">
      <summary>Bezeichnet die BorderWidth-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.DirectionProperty">
      <summary>Bezeichnet die Direction-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.IsLimitsMonoColorEnabledProperty">
      <summary>Bezeichnet die IsLimitsMonoColorEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleAlignProperty">
      <summary>Bezeichnet die ScaleAlign-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleBarAlignmentProperty">
      <summary>Bezeichnet die ScaleBarAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleDisplayProperty">
      <summary>Bezeichnet die ScaleDisplay-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleFormatStringProperty">
      <summary>Bezeichnet die ScaleFormatString-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleHeightProperty">
      <summary>Bezeichnet die ScaleHeight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleLengthProperty">
      <summary>Bezeichnet die ScaleLength-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleLimitVisibilityProperty">
      <summary>Bezeichnet die ScaleLimitVisibility-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleLineWidthMajorProperty">
      <summary>Bezeichnet die ScaleLineWidthMajor-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleLineWidthMinorProperty">
      <summary>Bezeichnet die ScaleLineWidthMinor-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScalePositionProperty">
      <summary>Bezeichnet die ScalePosition-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleRulerBaseLineProperty">
      <summary>Bezeichnet die ScaleRulerBaseLine-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleRulerMajorAlignProperty">
      <summary>Bezeichnet die ScaleRulerMajorAlign-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleRulerMinorAlignProperty">
      <summary>Bezeichnet die ScaleRulerMinorAlign-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleRulerSizeRatioProperty">
      <summary>Bezeichnet die ScaleRulerSizeRatio-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleValueDirectionsProperty">
      <summary>Bezeichnet die ScaleValueDirections-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ScaleWidthProperty">
      <summary>Bezeichnet die ScaleWidth-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ValueUnitMarginProperty">
      <summary>Bezeichnet die ValueUnitMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.BarBase.ValueUnitMinWidthProperty">
      <summary>Bezeichnet die ValueUnitMinWidth-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.BarBase.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ BarBase.</summary>
    </member>
    <member name="T:VisiWin.Controls.GraphicalBaseControl">
      <summary>Basisklasse für Steuerelemente, die einen numerischen Variablenwert grafisch anzeigen, den möglichen Wertebereich mithilfe von Bereichsgrenzen unterteilen und als Ausgangswert einen Referenzwert unterstützen. </summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.AutoAlignmentDivisionType">
      <summary>Gibt die Schrittweiten an, die bei der automatischen Neueinteilung der Skala verwendet werden können.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.AutoAlignmentRulerSpacing">
      <summary>Legt den Mindestabstand zwischen den Skalenlinien bei der automatischen Skalierung fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.AutoAlignmentScaleSpacing">
      <summary>Legt den Mindestabstand der Skalenwerte bei der automatischen Skalierung fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.CurrentLimitFill">
      <summary>Legt das Brush-Objekt der Fill-Eigenschaft des Limit-Objektes, in dessen Bereich sich der Variablenwert aktuell befindet. </summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.IsAutoAlignmentEnabled">
      <summary>Legt fest, ob die Skalenteilung und -beschriftung automatisch erstellt werden soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.JustInitialized">
      <summary>Legt fest gibt zurück, ob die ApplyTemplate-Methode zur Zeit ausgeführt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.LabelTextBrush">
      <summary>Legt den Pinsel für die Farbe des beschreibenden Textes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.LabelTextMargin">
      <summary>Legt einen Abstand um den beschreibenden Text zu den restlichen Zeichenelementen im Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.LabelTextVisibility">
      <summary>Legt fest, ob der beschreibende Text angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.Limits">
      <summary>Legt Bereiche fest, die farblich gekennzeichnet den möglichen Wertebereich der Variablen unterteilen.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.ReferenceValue">
      <summary>Legt den Referenzwert fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.ReferenceValueType">
      <summary>Legt fest, ob der in ReferenceValue festgelegte Wert absolut, relativ oder in Prozent interpretiert wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.UnitTextBrush">
      <summary>Legt den Zeichenpinsel für die Textfarbe der Einheitentextanzeige im Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.UnitTextMargin">
      <summary>Legt den äußeren Rand der Einheitentextanzeige im Steuerelement fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.UnitTextVisibility">
      <summary>Legt die Sichtbarkeit der Einheitentextanzeige im Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.ValueTextBrush">
      <summary>Legt den Zeichenpinsel für die Textfarbe der numerischen Wertanzeige im Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.ValueTextMargin">
      <summary>Legt den äußeren Rand der numerischen Wertanzeige im Steuerelement fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.GraphicalBaseControl.ValueTextVisibility">
      <summary>Legt die Sichtbarkeit der numerischen Wertanzeige im Steuerelement fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.AddItem(System.Windows.UIElement,System.Windows.Controls.Panel,System.Boolean,System.Windows.UIElement,System.Int32)">
      <summary>Wird aufgerufen, wenn ein neues visuelles Element in den VisualTree des Steuerelementes eingefügt wird. </summary>
      <param name="newElement">Das hinzuzufügende Objekt.</param>
      <param name="panel">Das Panel, in das das Objekt eingefügt werden soll.</param>
      <param name="setZIndex">true: Der ZIndex des neuen Elements wird auf den ZIndex von relatedElement + zIndexOffset gesetzt.</param>
      <param name="relatedElement">Das Objekt, dessen ZIndex als Basis für den ZIndex des neuen Objekts benutzt werden soll. </param>
      <param name="offsetZIndex">Der Offset des ZIndex des neuen Objekts bezogen auf den ZIndex von relatedElement. </param>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.CreateControlItems">
      <summary>Wird aufgerufen, wenn die Objekte im Steuerelement zu erzeugen und zum VisualTree hinzuzufügen sind.</summary>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.CreateLimitControl(VisiWin.Controls.Limit,System.Object)">
      <summary>Erzeugt aus den übergebenen Vorgaben für einen Bereich ein entsprechendes Steuerelement.</summary>
      <returns>Das angeforderte grafische Objekt oder null, wenn das Limit-Objekt null ist oder der Startwert im Limit-Objekt größer als der Endwert ist. </returns>
      <param name="scaleLimit">Das Limit-Objekt mit Start und Endwert.</param>
      <param name="param">Optionaler Parameter. CreateLimitControls übergibt hier seinen Parameter param. </param>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.CreateLimitControls(System.Windows.Controls.Panel,System.Boolean,System.Windows.UIElement,System.Int32,System.Object)">
      <summary>Wird aufgerufen, wenn die visuellen Elemente aus der Limits-Eigenschaft erzeugt und zum VisualTree hinzugefügt werden müssen. </summary>
      <param name="panel">Das Panel, in das die erzeugten Objekte eingefügt werden sollen. </param>
      <param name="setZIndex">true: Der ZIndex der neuen Elementewird auf den ZIndex von relatedElement + zIndexOffset gesetzt.</param>
      <param name="relatedElement">Das Objekt, dessen ZIndex als Basis für den ZIndex der neuen Objekte benutzt werden soll.</param>
      <param name="offsetZIndex">Der Offset des ZIndex der neuen Objekte bezogen auf den ZIndex von relatedElement.</param>
      <param name="param">Optionaler Parameter. </param>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.GetAbsoluteLimitValue(VisiWin.Controls.Limit,System.Boolean)">
      <summary>Gibt den Wert der Eigenschaft StartValue oder EndValue des gegebenen Limit-Objekts als absoluten Wert zurück. </summary>
      <returns>Der abgefragte Wert.</returns>
      <param name="limit">Das Limit-Objekt dessen Start- oder EndValue Eigenschaft (ggf. umgewandelt) zurückgeliefert werden soll. </param>
      <param name="startValue">true: Die Eigenschaft StartValue wird zurückgegeben, false: die Eigenschaft EndValue wird zurückgegeben.</param>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.GetAbsoluteReferenceValue">
      <summary>Gibt den Wert der Eigenschaft ReferenceValue (ggf. umgewandelt) als absoluten Wert zurück. </summary>
      <returns>Der absolute Wert der Eigenschaft ReferenceValue.</returns>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.GetObservableCommonProperties">
      <summary>Gibt eine Liste der Eigenschaftennamen zurück, bei deren Änderung die Methode CreateControlItems aufgerufen werden muss. </summary>
      <returns>Liste mit den Namen aller zu überwachenden Eigenschaften. </returns>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.OnLimitExceeded(VisiWin.Controls.Limit,VisiWin.Controls.Limit)">
      <summary>Wird aufgerufen, wenn der aktuelle Prozessvariablenwert einen über Limits beschriebenen Bereich betritt oder verlässt.</summary>
      <param name="oldLimit">Bereich, der verlassen wird oder null, wenn kein Bereich für den alten Prozessvariablenwert definiert wurde.</param>
      <param name="newLimit">Bereich, der betreten wird oder null, wenn kein Bereich für den neuen Prozessvariablenwert definiert wurde.</param>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird immer dann aufgerufen, wenn der tatsächliche Wert einer Abhängigkeitseigenschaft eines DependencyObject aktualisiert wurde. Die spezifische Abhängigkeitseigenschaft, die sich geändert hat, wird in den Ereignisdaten angegeben.</summary>
      <param name="e">Ereignisdaten, die den Bezeichner der betroffenen Abhängigkeitseigenschaft, die Eigenschaftenmetadaten des Typs sowie die alten und neuen Werte enthalten. </param>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Wert der verknüpften Prozessvariablen ändert.</summary>
      <param name="e">Weitere Informationen zur Wertänderung.</param>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.RemoveTaggedItems(VisiWin.Controls.TagType,System.Windows.Controls.Panel)">
      <summary>Entfernt Elemente, die als Skalenlinien, Skalenwerte oder Bereiche im Steuerelement gezeichnet wurden.</summary>
      <param name="tagType">Gibt an, welche Elemente gelöscht werden sollen.</param>
      <param name="panel">Gibt den Container an, in dem die zu löschenden Elemente gesucht werden.</param>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.AutoAlignmentDivisionTypeProperty">
      <summary>Bezeichnet die AutoAlignmentDivisionType-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.AutoAlignmentRulerSpacingProperty">
      <summary>Bezeichnet die AutoAlignmentRulerSpacing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.AutoAlignmentScaleSpacingProperty">
      <summary>Bezeichnet die AutoAlignmentScaleSpacing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.CurrentLimitFillProperty">
      <summary>Bezeichnet die CurrentLimitFill-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.IsAutoAlignmentEnabledProperty">
      <summary>Bezeichnet die IsAutoAlignmentEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.LabelTextBrushProperty">
      <summary>Bezeichnet die LabelTextBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.LabelTextMarginProperty">
      <summary>Bezeichnet die LabelTextMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.LabelTextVisibilityProperty">
      <summary>Bezeichnet die LabelTextVisibility-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.LimitsProperty">
      <summary>Bezeichnet die Limits-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.LimitsPropertyKey">
      <summary>Bezeichnet den Schlüssel der Limits-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.ReferenceValueProperty">
      <summary>Bezeichnet die ReferenceValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.ReferenceValueTypeProperty">
      <summary>Bezeichnet die ReferenceValueType-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.UnitTextBrushProperty">
      <summary>Bezeichnet die UnitTextBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.UnitTextMarginProperty">
      <summary>Bezeichnet die UnitTextMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.UnitTextVisibilityProperty">
      <summary>Bezeichnet die UnitTextVisibility-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.ValueTextBrushProperty">
      <summary>Bezeichnet die ValueTextBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.ValueTextMarginProperty">
      <summary>Bezeichnet die ValueTextMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GraphicalBaseControl.ValueTextVisibilityProperty">
      <summary>Bezeichnet die ValueTextVisibility-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.GraphicalBaseControl.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ GraphicalBaseControl.</summary>
    </member>
    <member name="T:VisiWin.Controls.NumericVarOut">
      <summary>Ausgabefeld für einen numerischen Prozessvariablenwert.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.CalculatedFormatString">
      <summary>Gibt die Formatierungszeichenfolge zurück, die sich aus dem Wert der Eigenschaften 'FormatString', 'LocalizedFormatString' und den Einstellungen der von der verknüpften Prozessvariablen verwendeten Einheitenumrechnungen ergibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.FormatString">
      <summary>Legt eine sprachneutrale Formatierungszeichenkette fest, die zur Formatierung des Variablenwertes im Steuerelement verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.IsInSetValueInternal">
      <summary>Gibt zurück, ob die Value-Eigenschaft gerade intern umgesetzt wird. Damit kann unterschieden werden, ob der Wert von außen gesetzt wird oder von intern. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.IsLimitMaxExceeded">
      <summary>Gibt zurück, ob die obere Grenze vom Variablenwert (Eigenschaft LimitMax) überschritten wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.IsLimitMinExceeded">
      <summary>Gibt zurück, ob die untere Grenze vom Variablenwert (Eigenschaft LimitMin) überschritten wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.LimitMax">
      <summary>Gibt den einheitenumgerechneten oberen Grenzwert für die angebundene Prozessvariable an. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.LimitMaxFormatted">
      <summary>Gibt die obere Grenze (Eigenschaft LimitMax) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.LimitMin">
      <summary>Gibt den einheitenumgerechneten unteren Grenzwert für die angebundene Prozessvariable an. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.LimitMinFormatted">
      <summary>Gibt die untere Grenze (Eigenschaft LimitMin) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.LocalizableFormatString">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der zur formatierten Ein-/Ausgabe des Variablenwertes und der Grenzwerte verwendet wird. Für jede Projektsprache kann in dem Text eine individuelle Formatierung beschrieben werden.  </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.LocalizableUnitText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit wird der Text in der aktuellen Projektsprache auf die UnitText-Eigenschaft geschrieben.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.LocalizedFormatString">
      <summary>Gibt einen Verweis auf das intern für die LocalizableFormatString-Eigenschaft verwendete ILocalizedText -Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.LocalizedUnitText">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die UnitText-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.RawLimitMax">
      <summary>Gibt den oberen Grenzwert für die angebundene Prozessvariable ohne Einheitenumrechnung an.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.RawLimitMaxFormatted">
      <summary>Gibt die obere Grenze ohne Einheitenumrechnung (Eigenschaft RawLimitMax) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.RawLimitMin">
      <summary>Gibt den unteren Grenzwert für die angebundene Prozessvariable ohne Einheitenumrechnung an.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.RawLimitMinFormatted">
      <summary>Gibt die untere Grenze ohne Einheitenumrechnung (Eigenschaft RawLimitMin) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.RawValue">
      <summary>Legt den im Steuerelement verknüpften Prozessvariablenwert ohne Einheitenumrechnung fest oder gibt ihn zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.RawValueFormatted">
      <summary>Gibt den aktuellen Variablenwert ohne Einheitenumrechnung (Eigenschaft RawValue) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.UnitText">
      <summary>Gibt einen Einheitentext zur Variablen an, der zusätzlich zum Variablenwert angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.UseRawValue">
      <summary>Legt fest, ob der Wert der Value-Eigenschaft direkt mit der RawValue-Eigenschaft verbunden ist oder ob eine Einheitenumrechnung zwischen den Eigenschaftenwerten erfolgen soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.UseVariableLimits">
      <summary>Legt fest, ob die Grenzwerte aus der Prozessvariablendefinition (Maximalwert/ Minimalwert) verwendet werden sollen.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.UseVariableUnitText">
      <summary>Legt fest, dass in die 'UnitText'-Eigenschaft automatisch der mit der Variablen verknüpfte Einheitentext geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.Value">
      <summary>Gibt den im Steuerelement verknüpften Prozessvariablenwert zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarOut.ValueFormatted">
      <summary>Gibt den aktuellen Variablenwert (Eigenschaft Value) als formatierten Text zurück.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.CoerceLimitMaxFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'LimitMaxFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für LimitMaxFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.CoerceLimitMinFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'LimitMinFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für LimitMinFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.CoerceRawLimitMaxFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'RawLimitMaxFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für RawLimitMaxFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.CoerceRawLimitMinFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'RawLimitMinFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für RawLimitMinFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.CoerceRawValueFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'RawValueFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für RawValueFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.CoerceValueFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'ValueFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für ValueFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss.</summary>
      <returns>Der aus Value ermittelte Wert.</returns>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnCoerceFormatString(System.Object)">
      <summary>Wird aufgerufen, wenn die FormatString-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von FormatString</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnCoerceIsLimitMaxExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsLimitMaxExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsLimitMaxExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnCoerceIsLimitMinExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsLimitMinExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsLimitMinExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnCoerceLimitMax(System.Object)">
      <summary>Wird aufgerufen, wenn die LimitMax-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LimitMax</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnCoerceLimitMin(System.Object)">
      <summary>Wird aufgerufen, wenn die LimitMin-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LimitMin</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnCoerceRawLimitMax(System.Object)">
      <summary>Wird aufgerufen, wenn die RawLimitMax-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von RawLimitMax</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnCoerceRawLimitMin(System.Object)">
      <summary>Wird aufgerufen, wenn die RawLimitMin-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von RawLimitMin</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnCoerceUnitText(System.Object)">
      <summary>Wird aufgerufen, wenn die UnitText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von UnitText</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnFormatStringChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der FormatString-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnLimitMaxChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LimitMax-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnLimitMinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LimitMin-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnLocalizableFormatString_TextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der über LocalizableFormatString festgelegte Formatierungstext z.B. durch die Umschaltung der aktiven Projektsprache ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnLocalizableFormatStringChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableFormatString-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnLocalizableUnitText_TextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der über LocalizableUnitText festgelegte Text z.B. durch die Umschaltung der aktiven Projektsprache ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnLocalizableUnitTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableUnitText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnRawLimitMaxChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RawLimitMax-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnRawLimitMinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RawLimitMin-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnRawValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RawValue-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnUseRawValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseRawValue-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnUseVariableLimitsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableLimits-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnUseVariableUnitTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableUnitText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Value-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnVariableChanged">
      <summary>Wird aufgerufen, wenn die intern verwendete IVariable-Instanz getauscht wurde.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft der zugeordneten Variablen ändert. </summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.SetValueInternal(System.Double,System.Double)">
      <summary>Setzt den Wert und den Rohwert. Das IsInSetValueInternal-Flag wird während des Vorgangs auf true gesetzt.</summary>
      <param name="rawValue">Der Rohwert. </param>
      <param name="value">Der umgerechnete Wert. </param>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.FormatStringProperty">
      <summary>Bezeichnet die FormatString-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.IsLimitMaxExceededProperty">
      <summary>Bezeichnet die IsLimitMaxExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.IsLimitMinExceededProperty">
      <summary>Bezeichnet die IsLimitMinExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.LimitMaxFormattedProperty">
      <summary>Bezeichnet die LimitMaxFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.LimitMaxProperty">
      <summary>Bezeichnet die LimitMax-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.LimitMinFormattedProperty">
      <summary>Bezeichnet die LimitMinFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.LimitMinProperty">
      <summary>Bezeichnet die LimitMin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.LocalizableFormatStringProperty">
      <summary>Bezeichnet die LocalizableFormatString-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.LocalizableUnitTextProperty">
      <summary>Bezeichnet die LocalizableUnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.RawLimitMaxFormattedProperty">
      <summary>Bezeichnet die RawLimitMaxFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.RawLimitMaxProperty">
      <summary>Bezeichnet die RawLimitMax-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.RawLimitMinFormattedProperty">
      <summary>Bezeichnet die RawLimitMinFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.RawLimitMinProperty">
      <summary>Bezeichnet die RawLimitMin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.RawValueFormattedProperty">
      <summary>Bezeichnet die RawValueFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.RawValueProperty">
      <summary>Bezeichnet die RawValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.UnitTextProperty">
      <summary>Bezeichnet die UnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.UseRawValueProperty">
      <summary>Bezeichnet die UseRawValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.UseVariableLimitsProperty">
      <summary>Bezeichnet die UseVariableLimits-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.UseVariableUnitTextProperty">
      <summary>Bezeichnet die UseVariableUnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.ValueFormattedProperty">
      <summary>Bezeichnet die ValueFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarOut.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarOut.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ NumericVarOut.</summary>
    </member>
    <member name="T:VisiWin.Controls.VariableBaseControl">
      <summary>Basisimplementierung für Prozessvariablenein-/ ausgabesteuerelemente.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.Authorization">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben und das Steuerelement sichtbar oder aktiv.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.BlinkService">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn IsBlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.BlinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.CanRecipeEdit">
      <summary>Legt fest, ob der Variablenwert über dieses Steuerelement im Rezeptpuffer bearbeitet werden kann. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.IsAttached">
      <summary>Gibt zurück, ob die Variable beim Variablenkern über AttachVariable angebunden wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.IsAttaching">
      <summary>Gibt zurück ob die in VariableName angegebene Prozessvariable gerade angemeldet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.IsBound">
      <summary>Gibt an, ob das Steuerelement über die VariableName-Eigenschaft mit einer gültigen Prozessvariablen verknüpft ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.IsDeferredActivationEnabled">
      <summary>Legt fest, ob die verzögerte Variablenaktivierung für dieses Steuerelement angeschaltet sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.IsQualityGood">
      <summary>Gibt zurück, ob die Statusinformationen (Quality-Flag) der verknüpften Prozessvariablen eine fehlerfreie Übertragung signalisieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.IsRecipeEditing">
      <summary>Gibt zurück, ob der Wert der Variablen aktuell über den Rezeptpuffer bezogen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.IsVariableValid">
      <summary>Gibt zurück, ob die in VariableName angegebene Prozessvariable gültig ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.LabelText">
      <summary>Gibt einen beschreibenden Text zur verknüpften Variablen an, der zusätzlich zum Wert angezeigt wird (siehe auch Eigenschaften LocalizablelabelText/ UseVariableText).</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.LanguageService">
      <summary>Gibt einen Verweis auf den intern verwendeten LanguageService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.LocalizableLabelText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit überschreibt der ermittelte Text in der aktuellen Projektsprache den Wert der LabelText-Eigenschaft. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.LocalizedLabelText">
      <summary>Gibt einen Verweis auf die intern verwendete LocalizedText-Instanz zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.Symbol">
      <summary>Legt eine Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.SymbolHorizontalAlignment">
      <summary>Legt die horizontale Ausrichtung (links, mitte, rechts) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.SymbolMargin">
      <summary>Legt den Abstand der Grafik zum Rand des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.SymbolResourceKey">
      <summary>Legt über die Angabe eines Ressourcenschlüssels die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.SymbolVerticalAlignment">
      <summary>Legt die vertikale Ausrichtung (oben, mitte, unten) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.TextAlignment">
      <summary>Legt die horizontale Ausrichtung des Textes im Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.UserManagementService">
      <summary>Gibt einen Verweis auf den intern verwendeten UserManagementService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.UseVariableText">
      <summary>Legt fest, dass in die LabelText-Eigenschaft automatisch der mit der Variablen verknüpfte sprachumschaltbare Text in der aktiven Projektsprache geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.Variable">
      <summary>Gibt einen Verweis auf den intern verwendeten Variable-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.VariableComment">
      <summary>Gibt den Kommentar zur verknüpften Prozessvariablen aus der Projektdatenbank zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.VariableName">
      <summary>Legt den Namen der verknüpften Prozessvariablen fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.VariableService">
      <summary>Gibt einen Verweis auf den intern verwendeten VariableService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableBaseControl.VariableText">
      <summary>Gibt den sprachumschaltbaren Text in der aktuellen Projektsprache zurück, der in der Projektdatenbank für die verknüpfte Prozessvariable festgelegt wurde.</summary>
    </member>
    <member name="E:VisiWin.Controls.VariableBaseControl.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert, die eine Reaktion im Steuerelement erfordert.</summary>
      <param name="sender">Objekt vom Typ VariableBaseControl, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.VariableBaseControl.ValueChanged">
      <summary>Wird ausgelöst, sobald sich der Wert der in VariableName zugeordneten Prozessvariablen ändert. </summary>
      <param name="sender">Objekt vom Typ VariableBaseControl, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.VariableBaseControl.VerifyOperation">
      <summary>Wird ausgelöst, wenn im Steuerelement eine verifikationsunterstützte Handlung gestartet wurde.</summary>
      <param name="sender">Objekt vom Typ VariableBaseControl, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VerifyOperationEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.AttachVariable(System.Nullable{System.Boolean})">
      <summary>Meldet die im Steuerelement verwendete Prozessvariable zur Kommunikation an.</summary>
      <param name="useDeferredActivation">Gibt an, ob die verzögerte Variablenaktivierung benutzt werden soll.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.DetachVariable">
      <summary>Meldet die im Steuerelement verwendete Prozessvariable im Variablenkern ab.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss. </summary>
      <returns>Eigenschaftenwert.</returns>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.InitializeBlinkService">
      <summary>Wird ausgeführt, um den BlinkService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.InitializeUserManagementService">
      <summary>Wird aufgerufen, um den UserManagementService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.InitializeVariableService">
      <summary>Wird ausgeführt, um den VariableService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnAuthorizationChanged(VisiWin.UserManagement.AuthorizationEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Freigabestatus (Eigenschaft IsAuthorized) geändert hat.</summary>
      <param name="e">Objekt vom Typ AuthorizationEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnAuthorizationRightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die AuthorizationRight-Eigenschaft geändert hat. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnBlinkCycleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die BlinkCycle-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnBlinkTimerDoBlink(VisiWin.Blink.BlinkEventArgs)">
      <summary>Wird ausgeführt, wenn sich die Blinkphase ändert.</summary>
      <param name="e">Objekt vom Typ BlinkEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCanRecipeEditChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die CanRecipeEdit-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceIsAttached(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAttached-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAttached</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceIsAuthorized(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAuthorized-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAuthorized</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceIsBound(System.Object)">
      <summary>Wird aufgerufen, wenn die IsBound-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsBound</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceIsEnabled(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEnabled-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEnabled</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceIsQualityGood(System.Object)">
      <summary>Wird aufgerufen, wenn die IsQualityGood-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsQualityGood</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceIsRecipeEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsRecipeEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsRecipeEditing</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceIsVariableValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsVariableValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsVariableValid</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceLabelText(System.Object)">
      <summary>Wird aufgerufen, wenn die LabelText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LabelText</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceVariableComment(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableComment-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableComment</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceVariableText(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableText</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnCoerceVisibility(System.Object)">
      <summary>Wird aufgerufen, wenn die Visibility-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Visibility</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnIsBlinkEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die IsBlinkEnabled-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die aktuell im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnLocalizableLabelTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LocalizableLabelText-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnLocalizedLabelTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text des zugehörigen LocalizedText-Objekt ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnPropertyChanged(System.String)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert.</summary>
      <param name="propertyName">Name der geänderten Eigenschaft.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnUnloaded">
      <summary>Wird ausgeführt, wenn das Unloaded-Ereignis ausgeführt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnUseVariableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die UseVariableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die Variablen-Instanz ändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IVariable.IsEditingChanged-Ereignis der Variable ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnVariableNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der VariableName-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft der zugeordneten Variablen ändert. </summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.OnVerifyOperation(System.String,System.Object)">
      <summary>Wird ausgeführt, wenn eine verifikationsunterstützten Handlung gestartet wurde. Löst das VerifyOperation-Ereignis aus.</summary>
      <returns>true, wenn die Handlung (z.B. über die Benutzerschnittstelle des VerificationBehavior) verifiziert wurde.</returns>
      <param name="operationName">Name der Handlung.</param>
      <param name="operationParameter">Parameter der Handlung.</param>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.CanRecipeEditProperty">
      <summary>Bezeichnet die CanRecipeEdit-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.CornerRadiusProperty">
      <summary>Bezeichnet die CornerRadius-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.IsAttachedProperty">
      <summary>Bezeichnet die IsAttached-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.IsBoundProperty">
      <summary>Bezeichnet die IsBound-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.IsDeferredActivationEnabledProperty">
      <summary>Bezeichnet die IsDeferredActivationEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.IsQualityGoodProperty">
      <summary>Bezeichnet die IsQualityGood-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.IsRecipeEditingProperty">
      <summary>Bezeichnet die IsRecipeEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.IsVariableValidProperty">
      <summary>Bezeichnet die IsVariableValid-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.LabelTextProperty">
      <summary>Bezeichnet die LabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.LocalizableLabelTextProperty">
      <summary>Bezeichnet die LocalizableLabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.SymbolHorizontalAlignmentProperty">
      <summary>Bezeichnet die SymbolHorizontalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.SymbolMarginProperty">
      <summary>Bezeichnet die SymbolMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.SymbolResourceKeyProperty">
      <summary>Bezeichnet die SymbolResourceKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.SymbolVerticalAlignmentProperty">
      <summary>Bezeichnet die SymbolVerticalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.TextAlignmentProperty">
      <summary>Bezeichnet die TextAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.UseVariableTextProperty">
      <summary>Bezeichnet die UseVariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.VariableCommentProperty">
      <summary>Bezeichnet die VariableComment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.VariableTextProperty">
      <summary>Bezeichnet die VariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableBaseControl.VerifyOperationEvent">
      <summary>Bezeichnet das VerifyOperation-Routingereignis.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableBaseControl.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ VariableBaseControl.</summary>
    </member>
    <member name="T:VisiWin.Controls.Border">
      <summary>Rand, dessen abgerundete Ecken beim Berechnen/ Abschneiden der Fläche berücksichtigt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.Border.Child">
      <summary>Ruft das untergeordnete Element des Objektes ab oder legt dieses fest. </summary>
    </member>
    <member name="M:VisiWin.Controls.Border.MeasureOverride(System.Windows.Size)">
      <summary>Misst das untergeordnete Element des Objektes, um dessen Anordnen während der Ausführung von ArrangeOverride vorzubereiten. </summary>
      <returns>Die Ziel-Size des Elements. </returns>
      <param name="availableSize">Die obere Beschränkung für Size, die nicht überstiegen werden darf.</param>
    </member>
    <member name="M:VisiWin.Controls.Border.OnApplyChildClip">
      <summary>Berechnet die Clip-Eigenschaft des untergeordneten Child-Elementes aus den Eigenschaften BorderThickness, Cornerradius und der Größe des untergeordneten Objektes neu.</summary>
    </member>
    <member name="M:VisiWin.Controls.Border.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Nimmt beim Überschreiben in einer abgeleiteten Klasse an Renderingvorgängen teil, die durch das Layoutsystem gesteuert werden.Die Renderinganweisungen für dieses Element werden beim Aufrufen dieser Methode nicht direkt verwendet, sondern stattdessen für spätere asynchrone Layout- und Zeichnungsvorgänge beibehalten.</summary>
      <param name="dc">Die Zeichnungsanweisungen für ein bestimmtes Element. Dieser Kontext wird für das Layoutsystem bereitgestellt.</param>
    </member>
    <member name="M:VisiWin.Controls.Border.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Border.</summary>
    </member>
    <member name="T:VisiWin.Controls.BrushState">
      <summary>Beschreibt ein Element einer Zuordnungstabelle, in dem einem Wert oder Wertebereich ein Pinsel zugeordnet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.BrushState.Brush">
      <summary>Legt den Pinsel für diese Zuordnung fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.BrushState.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.BrushState.BrushProperty">
      <summary>Bezeichnet die Brush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.BrushState.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ BrushState.</summary>
    </member>
    <member name="T:VisiWin.Controls.StateBase">
      <summary>Basisklasse für einen Zuordnung in einer Zuordnungstabelle. </summary>
    </member>
    <member name="P:VisiWin.Controls.StateBase.Value">
      <summary>Legt den Vergleichsausdruck für diese Zuordnung fest, mit dem der Eingangswert übereinstimmen muss, damit der dem State zugeordnete Ausgangswert zurückgegeben wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.StateBase.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.StateBase.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.StateBase.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ StateBase.</summary>
    </member>
    <member name="T:VisiWin.Controls.BrushStateCollection">
      <summary>Beschreibt eine Zuordnungstabelle für Pinsel.</summary>
    </member>
    <member name="M:VisiWin.Controls.BrushStateCollection.FirstOrDefaultByBrush(System.Windows.Media.Brush)">
      <summary>Gibt den ersten State zurück, der den übergebenen Pinsel enthält.</summary>
      <returns>Bei erfolgreicher Suche der gefundene State, ansonsten, wenn vorhanden, der Default-State (State ohne Angaben in der Value-Eigenschaft).</returns>
      <param name="brush">Zu suchender Pinsel.</param>
    </member>
    <member name="M:VisiWin.Controls.BrushStateCollection.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ BrushStateCollection.</summary>
    </member>
    <member name="T:VisiWin.Controls.ObservableStateCollection`1">
      <summary>Basisklasse für Zuordnungstabellen.</summary>
    </member>
    <member name="M:VisiWin.Controls.ObservableStateCollection`1.FirstOrDefaultByStateValue(System.Double,VisiWin.Controls.StateMode)">
      <summary>Gibt das erste State-Objekt zurück, das sich über den Vergleich mit der Value-Eigenschaft dem übergebenen Wert zuordnen lässt. Wenn kein State eine Übereinstimmung dem übergebenen Wert zugeordnet ist, wird GetDefaultState aufgerufen.</summary>
      <returns>Das ermittelte Element aus der Tabelle.</returns>
      <param name="stateValue">Wert, zu dem der State gesucht wird.</param>
      <param name="stateMode">Interpretation des Vergleichswertes, siehe Enumeration StateMode.</param>
    </member>
    <member name="M:VisiWin.Controls.ObservableStateCollection`1.GetDefaultState">
      <summary>Gibt den Default-State zurück.</summary>
      <returns>Das erste gefundene Listenobjekt oder null, wenn alle State-Objekte einen Eintrag in der Value-Eigenschaft haben.</returns>
    </member>
    <member name="M:VisiWin.Controls.ObservableStateCollection`1.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ObservableStateCollection&lt;T&gt;.</summary>
    </member>
    <member name="T:VisiWin.Controls.Button">
      <summary>Steuerelement, das eine Schaltfläche darstellt.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.Authorization">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.Button.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit. </summary>
    </member>
    <member name="P:VisiWin.Controls.Button.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.Button.BlinkService">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn IsBlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.BlinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. </summary>
    </member>
    <member name="P:VisiWin.Controls.Button.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.Button.LabelText">
      <summary>Holt oder setzt den Beschreibungstext.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.LanguageService">
      <summary>Gibt einen Verweis auf den intern verwendeten LanguageService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.LocalizableLabelText">
      <summary>Legt den Bezeichner eines sprachumschaltbaren Textes fest, dessen Inhalt zur Laufzeit auf die LabelText-Eigenschaft geschrieben wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.Button.LocalizableText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit wird der Text in der aktuellen Projektsprache auf die Text-Eigenschaft geschrieben.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.LocalizedLabelText">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die LabelText-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.Button.LocalizedText">
      <summary>Gibt eine Referenz auf das ILocalizedText-Objekt zurück, das den in LocalizableText angegebenen Text aus der Sprachumschaltung liest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.Symbol">
      <summary>Legt über eine Ressourcenbindung die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.SymbolHorizontalAlignment">
      <summary>Legt die horizontale Ausrichtung (links, mitte, rechts) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.SymbolMargin">
      <summary>Legt den Abstand der Grafik zum Rand des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.SymbolResourceKey">
      <summary>Legt über die Angabe eines Ressourcenschlüssels die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.SymbolVerticalAlignment">
      <summary>Legt die vertikale Ausrichtung (oben, mitte, unten) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.Text">
      <summary>Legt den auf der Schaltfläche dargestellten Text fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Button.UserManagementService">
      <summary>Gibt einen Verweis auf den intern verwendeten UserManagementService zurück.</summary>
    </member>
    <member name="E:VisiWin.Controls.Button.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ Button, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.Button.VerifyOperation">
      <summary>Wird ausgelöst, wenn im Steuerelement eine verifikationsunterstützte Handlung gestartet wurde.</summary>
      <param name="sender">Objekt vom Typ Button, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VerifyOperationEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.InitializeBlinkService">
      <summary>Wird ausgeführt, um den BlinkService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.Button.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.Button.InitializeLocalizedText">
      <summary>Wird ausgeführt, wenn der LocalizedText initialisiert wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.Button.InitializeUserManagementService">
      <summary>Wird aufgerufen, um den UserManagementService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.Button.OnAuthorizationChanged(VisiWin.UserManagement.AuthorizationEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Freigabestatus (Eigenschaft IsAuthorized) geändert hat.</summary>
      <param name="e">Objekt vom Typ AuthorizationEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnAuthorizationRightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich die AuthorizationRight-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnBlinkCycleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die BlinkCycle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnBlinkTimerDoBlink(VisiWin.Blink.BlinkEventArgs)">
      <summary>Wird zyklisch im Blinktakt aufgerufen, wenn das Steuerelement blinkt.</summary>
      <param name="e">Objekt vom Typ BlinkEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnClick">
      <summary>Löst das Click-Routingereignis aus.</summary>
    </member>
    <member name="M:VisiWin.Controls.Button.OnCoerceIsAuthorized(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAuthorized-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAuthorized</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnCoerceIsEnabled(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEnabled-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEnabled</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnCoerceLabelText(System.Object)">
      <summary>Wird aufgerufen, wenn die LabelText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LabelText</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnCoerceText(System.Object)">
      <summary>Wird aufgerufen, wenn die Text-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Text</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnCoerceVisibility(System.Object)">
      <summary>Wird aufgerufen, wenn die Visibility-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Visibility</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnIsBlinkEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der IsBlinkEnabled-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.Button.OnLocalizableLabelTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableLabelText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnLocalizableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnLocalizedLabelTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text des zugehörigen LocalizedLabelText-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnLocalizedTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedText-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnPropertyChanged(System.String)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert. </summary>
      <param name="propertyName">Name der geänderten Eigenschaft. </param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Button.OnUnloaded">
      <summary>Wird aufgerufen, wenn das Unloaded-Ereignis auftritt. </summary>
    </member>
    <member name="M:VisiWin.Controls.Button.OnVerifyOperation(System.String,System.Object)">
      <summary>Wird ausgeführt, wenn eine verifikationsunterstützte Handlung gestartet wurde. Löst das VerifyOperation-Ereignis aus.</summary>
      <returns>true, wenn die Handlung (z.B. über die Benutzerschnittstelle des VerificationBehavior) verifiziert wurde.</returns>
      <param name="operationName">Name der Handlung.</param>
      <param name="operationParameter">Parameter der Handlung.</param>
    </member>
    <member name="F:VisiWin.Controls.Button.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.CornerRadiusProperty">
      <summary>Bezeichnet die CornerRadius-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.LabelTextProperty">
      <summary>Bezeichnet die LabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.LocalizableLabelTextProperty">
      <summary>Bezeichnet die LocalizableLabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.LocalizableTextProperty">
      <summary>Bezeichnet die LocalizableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.SymbolHorizontalAlignmentProperty">
      <summary>Bezeichnet die SymbolHorizontalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.SymbolMarginProperty">
      <summary>Bezeichnet die SymbolMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.SymbolResourceKeyProperty">
      <summary>Bezeichnet die SymbolResourceKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.SymbolVerticalAlignmentProperty">
      <summary>Bezeichnet die SymbolVerticalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.TextProperty">
      <summary>Bezeichnet die Text-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Button.VerifyOperationEvent">
      <summary>Bezeichnet das VerifyOperation-Routingereignis.</summary>
    </member>
    <member name="M:VisiWin.Controls.Button.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Button.</summary>
    </member>
    <member name="T:VisiWin.Controls.ChangeLanguageAction">
      <summary>Action, die die aktuelle Projektsprache umstellt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ChangeLanguageAction.LCID">
      <summary>Gibt die LCID der Sprache an, zu der gewechselt werden soll. </summary>
    </member>
    <member name="M:VisiWin.Controls.ChangeLanguageAction.Invoke(System.Object)">
      <summary>Führt die Action aus.</summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.ChangeLanguageAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.ChangeLanguageAction.LCIDProperty">
      <summary>Bezeichnet die LCID-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ChangeLanguageAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ChangeLanguageAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.ChartGrid">
      <summary>Steuerelement zum Zeichnen von Rasterlinien in einem Diagramm.</summary>
    </member>
    <member name="P:VisiWin.Controls.ChartGrid.LineBrushMajor">
      <summary>Legt den Pinsel zum Zeichnen der Hauptrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ChartGrid.LineBrushMinor">
      <summary>Legt den Pinsel zum Zeichnen der Nebenrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ChartGrid.LineWidthMajor">
      <summary>Legt die Linienbreite der Hauptrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ChartGrid.LineWidthMinor">
      <summary>Legt die Linienbreite der Nebenrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ChartGrid.ScalePointsX">
      <summary>Legt die Liste von Koordinaten fest, an denen die Rasterlinien die X-Achse schneiden.</summary>
    </member>
    <member name="P:VisiWin.Controls.ChartGrid.ScalePointsY">
      <summary>Legt die Liste von Koordinaten fest, an denen die Rasterlinien die Y-Achse schneiden.</summary>
    </member>
    <member name="E:VisiWin.Controls.ChartGrid.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ ChartGrid, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.ChartGrid.DrawGridLines">
      <summary>Wird aufgerufen, enn die Linien des Rasters zu zeichnen sind.</summary>
    </member>
    <member name="M:VisiWin.Controls.ChartGrid.OnLineBrushMajorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LineBrushMajor-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ChartGrid.OnLineBrushMinorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LineBrushMinor-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ChartGrid.OnLineWidthMajorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LineWidthMajor-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ChartGrid.OnLineWidthMinorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LineWidthMinor-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ChartGrid.OnPropertyChanged(System.String)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert. </summary>
      <param name="propertyName">Name der geänderten Eigenschaft. </param>
    </member>
    <member name="F:VisiWin.Controls.ChartGrid.LineBrushMajorProperty">
      <summary>Bezeichnet die LineBrushMajor-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ChartGrid.LineBrushMinorProperty">
      <summary>Bezeichnet die LineBrushMinor-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ChartGrid.LineWidthMajorProperty">
      <summary>Bezeichnet die LineWidthMajor-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ChartGrid.LineWidthMinorProperty">
      <summary>Bezeichnet die LineWidthMinor-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ChartGrid.ScalePointsXProperty">
      <summary>Bezeichnet die ScalePointsX-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ChartGrid.ScalePointsYProperty">
      <summary>Bezeichnet die ScalePointsY-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ChartGrid.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ChartGrid.</summary>
    </member>
    <member name="T:VisiWin.Controls.CheckBox">
      <summary>Steuerelement, das ein Kontrollkästchen mit Variablenanbindung darstellt.</summary>
    </member>
    <member name="M:VisiWin.Controls.CheckBox.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ CheckBox.</summary>
    </member>
    <member name="T:VisiWin.Controls.ToggleButton">
      <summary>Steuerelement, das eine Schaltfläche mit zwei visuellen Zuständen und Variablenanbindung darstellt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.Authorization">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.BitNumber">
      <summary>Legt das Bit in der angeschlossenen Prozessvariablen fest, das über die Schaltfläche gesetzt oder zurückgesetzt werden soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.BlinkService">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn IsBlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.BlinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.CanRecipeEdit">
      <summary>Legt fest, ob der Variablenwert über dieses Steuerelement im Rezeptpuffer bearbeitet werden kann. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsAttached">
      <summary>Gibt zurück, ob die Variable beim Variablenkern über AttachVariable angebunden wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsAttaching">
      <summary>Gibt zurück ob die in VariableName angegebene Prozessvariable gerade angemeldet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsBound">
      <summary>Gibt an, ob das Steuerelement über die VariableName-Eigenschaft mit einer gültigen Prozessvariablen verknüpft ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsDeferredActivationEnabled">
      <summary>Legt fest, ob die verzögerte Variablenaktivierung für dieses Steuerelement angeschaltet sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsEditControl">
      <summary>Legt fest, ob das Steuerelement den geänderten Variablenwert als Editierkopie puffert oder ob der Wert direkt in den Variablenkern geschrieben wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsEditing">
      <summary>Gibt zurück ob sich die Variable im Editiermodus befindet. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsInSetCheckedStateInternal">
      <summary>Gibt zurück, ob IsChecked gerade intern umgesetzt wird. Damit kann unterschieden werden, ob der Wert von außen gesetzt wird oder von intern. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsQualityGood">
      <summary>Gibt zurück, ob die Statusinformationen (Quality-Flag) der verknüpften Prozessvariablen eine fehlerfreie Übertragung signalisieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsRecipeEditing">
      <summary>Gibt zurück, ob der Wert der Variablen aktuell über den Rezeptpuffer bezogen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.IsVariableValid">
      <summary>Gibt zurück, ob die in VariableName angegebene Prozessvariable gültig ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LabelText">
      <summary>Gibt einen beschreibenden Text zur verknüpften Variablen an, der zusätzlich zum Wert angezeigt wird (siehe auch Eigenschaften LocalizableLabelText/ UseVariableText).</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LanguageService">
      <summary>Gibt einen Verweis auf den intern verwendeten LanguageService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LocalizableLabelText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit überschreibt der ermittelte Text in der aktuellen Projektsprache den Wert der LabelText-Eigenschaft. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LocalizableText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der auf der Schaltfläche dargestellt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LocalizableTextOff">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der auf der Schaltfläche dargestellt wird, wenn das Steuerelement im "Aus"-Zustand (IsChecked= false) ist. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LocalizableTextOn">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der auf der Schaltfläche dargestellt wird, wenn das Steuerelement im "Ein"-Zustand (IsChecked= true) ist. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LocalizedLabelText">
      <summary>Gibt einen Verweis auf die intern verwendete LocalizedText-Instanz zurück, die die Daten für die LocalizableLabelText-Eigenschaft liefert.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LocalizedText">
      <summary>Gibt einen Verweis auf die intern verwendete LocalizedText-Instanz zurück, die die Daten für die LocalizableText-Eigenschaft liefert.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LocalizedTextOff">
      <summary>Gibt einen Verweis auf die intern verwendete LocalizedTextOff-Instanz zurück, die die Daten für die LocalizableTextOff-Eigenschaft liefert.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.LocalizedTextOn">
      <summary>Gibt einen Verweis auf die intern verwendete LocalizedText-Instanz zurück, die die Daten für die LocalizableTextOn-Eigenschaft liefert.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.ResetValueCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe der Wert im Steuerelement zurückgesetzt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.Symbol">
      <summary>Legt über eine Ressourcenbindung die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.SymbolHorizontalAlignment">
      <summary>Legt die horizontale Ausrichtung (links, mitte, rechts) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.SymbolMargin">
      <summary>Legt den Abstand der Grafik zum Rand des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.SymbolOff">
      <summary>Legt den Inhalt des Symbols fest, der in die Symbol-Eigenschaft geschrieben wird, wenn das Steuerelement im "Aus"-Zustand (IsChecked= false) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.SymbolOn">
      <summary>Legt den Inhalt des Symbols fest, der in die Symbol-Eigenschaft geschrieben wird, wenn das Steuerelement im "An"-Zustand (IsChecked= false) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.SymbolResourceKey">
      <summary>Legt über die Angabe eines Ressourcenschlüssels die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.SymbolVerticalAlignment">
      <summary>Legt die vertikale Ausrichtung (oben, mitte, unten) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.Text">
      <summary>Legt den Text für die Schaltfläche fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.TextOff">
      <summary>Legt einen Text fest, der als Beschreibung in die Content-Eigenschaft geschrieben wird, wenn das Steuerelement im "Aus"-Zustand (IsChecked= false) ist. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.TextOn">
      <summary>Legt einen Text fest, der als Beschreibung in die Content-Eigenschaft geschrieben wird, wenn das Steuerelement im "Ein"-Zustand (IsChecked= true) ist. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.UserManagementService">
      <summary>Gibt einen Verweis auf den intern verwendeten UserManagementService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.UseVariableText">
      <summary>Legt fest, dass in die Text-Eigenschaft automatisch der mit der Variablen verknüpfte sprachumschaltbare Text in der aktiven Projektsprache geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.Variable">
      <summary>Gibt einen Verweis auf den intern verwendeten Variable-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.VariableComment">
      <summary>Gibt den Kommentar zur verknüpften Prozessvariablen aus der Projektdatenbank zurück. Die Prozessvariable wird in VariableName festgelegt. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.VariableName">
      <summary>Legt den Namen der verknüpften Prozessvariablen fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.VariableService">
      <summary>Gibt einen Verweis auf das intern verwendete Objekt vom Typ IVariableService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.VariableText">
      <summary>Gibt den sprachumschaltbaren Text in der aktuellen Projektsprache zurück, der in der Projektdatenbank für die Variablendefinition festgelegt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleButton.WriteValueCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe der im Steuerelement bearbeitete Wert in den Variablenkern geschrieben wird.</summary>
    </member>
    <member name="E:VisiWin.Controls.ToggleButton.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ ToggleButton, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.ToggleButton.ValueChanged">
      <summary>Wird ausgelöst, sobald sich der Wert der in VariableName zugeordneten Prozessvariablen ändert. </summary>
      <param name="sender">Objekt vom Typ ToggleButton, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.ToggleButton.VerifyOperation">
      <summary>Wird ausgelöst, wenn im Steuerelement eine verifikationsunterstützte Handlung gestartet wurde.</summary>
      <param name="sender">Objekt vom Typ ToggleButton, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VerifyOperationEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.AttachVariable(System.Nullable{System.Boolean})">
      <summary>Meldet die Variable beim Variablenkern zur Übertragung an. Das Ergebnis der operation wird in der IsAttached-Eigenschaft angezeigt. </summary>
      <param name="useDeferredActivation">Optionale Angabe, ob die Ausführung der Anmeldung über einen Dispatcher (wartet so lange bis ggf. weitere Anmeldeanfragen zeitnah eintreffen) erfolgen soll. Keine Angabe bedeutet: Für useDeferredActivation wird der Wert aus der Projektkonfiguration verwendet (®Optimierung der Variablenan- /abmeldungen). </param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.DetachVariable">
      <summary>Meldet die Variable beim Variablenkern ab. </summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss.</summary>
      <returns>Der aus Value ermittelte Wert.</returns>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.InitializeBlinkService">
      <summary>Wird ausgeführt, um den BlinkService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.InitializeLocalizedText">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedText-Objekt instanziiert werden muss.  </summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.InitializeLocalizedTextOff">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedTextOff-Objekt instanziiert werden muss. </summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.InitializeLocalizedTextOn">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedTextOn-Objekt instanziiert werden muss. </summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.InitializeUserManagementService">
      <summary>Wird aufgerufen, um den UserManagementService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.InitializeVariableService">
      <summary>Wird ausgeführt, wenn der VariableService initialisiert wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnAuthorizationChanged(VisiWin.UserManagement.AuthorizationEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Freigabestatus (Eigenschaft IsAuthorized) geändert hat.</summary>
      <param name="e">Objekt vom Typ AuthorizationEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnAuthorizationRightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der AuthorizationRight-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnBlinkCycleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der BlinkCycle-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnBlinkTimerDoBlink(VisiWin.Blink.BlinkEventArgs)">
      <summary>Wird zyklisch im Blinktakt aufgerufen, wenn das Steuerelement blinkt.</summary>
      <param name="e">Objekt vom Typ BlinkEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCanRecipeEditChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der CanRecipeEdit-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>Überschrieben. Wird aufgerufen, wenn das Steuerelement ein ToggleButton.Checked-Ereignis auslöst</summary>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceIsAttached(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAttached-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAttached</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceIsAuthorized(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAuthorized-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAuthorized</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceIsBound(System.Object)">
      <summary>Wird aufgerufen, wenn die IsBound-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsBound</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceIsEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEditing</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceIsEnabled(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEnabled-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEnabled</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceIsQualityGood(System.Object)">
      <summary>Wird aufgerufen, wenn die IsQualityGood-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsQualityGood</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceIsRecipeEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsRecipeEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsRecipeEditing</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceIsVariableValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsVariableValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsVariableValid</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceLabelText(System.Object)">
      <summary>Wird aufgerufen, wenn die LabelText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LabelText</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceSymbol(System.Object)">
      <summary>Wird aufgerufen, wenn die Symbol-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Symbol</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceText(System.Object)">
      <summary>Wird aufgerufen, wenn die Text-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Text</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceTextOff(System.Object)">
      <summary>Wird aufgerufen, wenn die TextOff-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextOff</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceTextOn(System.Object)">
      <summary>Wird aufgerufen, wenn die TextOn-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextOn</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceVariableComment(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableComment-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableComment</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceVariableText(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableText</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnCoerceVisibility(System.Object)">
      <summary>Wird aufgerufen, wenn die Visibility-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Visibility</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnIsBlinkEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der IsBlinkEnabled-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLocalizableLabelTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableLabelText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLocalizableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLocalizableTextOffChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableTextOff-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLocalizableTextOnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableTextOn-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLocalizedLabelTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text des zugehörigen LocalizedLabelText-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLocalizedTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedText-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLocalizedTextOffChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedTextOff-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnLocalizedTextOnChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedTextOn-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnPropertyChanged(System.String)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert. </summary>
      <param name="propertyName">Name der geänderten Eigenschaft. </param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnSymbolOffChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der SymbolOff-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnSymbolOnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der SymbolOn-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnTextOffChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextOff-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnTextOnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextOn-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>Überschrieben. Wird aufgerufen, wenn das Steuerelement ein Unchecked-Ereignis auslöst. </summary>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnUnloaded">
      <summary>Wird aufgerufen, wenn das Unloaded-Ereignis auftritt. </summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnUseVariableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die intern verwendete IVariable-Instanz (Eigenschaft Variable) ändert. </summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IsEditingChanged-Ereignis in der intern verwendeten Variableninstanz (Eigenschaft Variable) ausgelöst wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnVariableNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Eigenschaft VariableName ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich eine Eigenschaft in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) ändert.</summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.OnVerifyOperation(System.String,System.Object)">
      <summary>Wird ausgeführt, wenn eine verifikationsunterstützten Handlung gestartet wurde. Löst das VerifyOperation-Ereignis aus.</summary>
      <returns>true, wenn die Handlung (z.B. über die Benutzerschnittstelle des VerificationBehavior) verifiziert wurde.</returns>
      <param name="operationName">Name der Handlung.</param>
      <param name="operationParameter">Parameter der Handlung.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.SetIsCheckedInternal(System.Nullable{System.Boolean})">
      <summary>Setzt die IsChecked-Eigenschaft. Das IsInSetIsCheckedInternal-Flag wird während des Vorgangs auf true gesetzt. </summary>
      <param name="isChecked">Zu setzender Wert für IsChecked.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.SetVariableValue(System.Object,System.Boolean)">
      <summary>Setzt den Variablenwert und aktiviert optional den Editiermodus der Variable. </summary>
      <param name="newValue">Neuer Wert der Variablen. </param>
      <param name="keepEditing">Wert, der angibt, ob der Editiermodus gestartet werden soll:True: Der neue Wert wird im Steuerelement übernommen, wird aber erst zum Variablenkern geschickt, wenn StopEdit aufgerufen wird.False: Der neue Wert wird im Steuerelement übernommen und direkt zum Variablenkern geschickt.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.SetVariableValue(System.Int32,System.Boolean,System.Boolean)">
      <summary>Setzt den Variablenwert und aktiviert optional den Editiermodus der Variable. </summary>
      <param name="bitNumber">(0-indizierter) Index des zu setzenden Bits.</param>
      <param name="newValue">Neuer Wert der Variablen. </param>
      <param name="keepEditing">Wert, der angibt, ob der Editiermodus gestartet werden soll:True: Der neue Wert wird im Steuerelement übernommen, wird aber erst zum Variablenkern geschickt, wenn StopEdit aufgerufen wird.False: Der neue Wert wird im Steuerelement übernommen und direkt zum Variablenkern geschickt.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.StartEdit">
      <summary>Startet den Editiermodus.</summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.StopEdit(System.Boolean)">
      <summary>Stoppt den Editiermodus. </summary>
      <param name="transmitEditResult">true: wenn der Wert aus dem Steuerelement in die verknüpfte Prozessvariable geschrieben werden soll. false: wenn der Wert aus dem Steuerelement verworfen und der aktuelle Prozessvariablenwert aus dem Variablenkern in das Steuerelement geschrieben werden soll.</param>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.BitNumberProperty">
      <summary>Bezeichnet die BitNumber-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.CanRecipeEditProperty">
      <summary>Bezeichnet die CanRecipeEdit-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.CornerRadiusProperty">
      <summary>Bezeichnet die CornerRadius-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsAttachedProperty">
      <summary>Bezeichnet die IsAttached-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsBoundProperty">
      <summary>Bezeichnet die IsBound-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsDeferredActivationEnabledProperty">
      <summary>Bezeichnet die IsDeferredActivationEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsEditControlProperty">
      <summary>Bezeichnet die IsEditControl-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsEditingProperty">
      <summary>Bezeichnet die IsEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsQualityGoodProperty">
      <summary>Bezeichnet die IsQualityGood-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsRecipeEditingProperty">
      <summary>Bezeichnet die IsRecipeEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.IsVariableValidProperty">
      <summary>Bezeichnet die IsVariableValid-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.LabelTextProperty">
      <summary>Bezeichnet die LabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.LocalizableLabelTextProperty">
      <summary>Bezeichnet die LocalizableLabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.LocalizableTextOffProperty">
      <summary>Bezeichnet die LocalizableTextOff-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.LocalizableTextOnProperty">
      <summary>Bezeichnet die LocalizableTextOn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.LocalizableTextProperty">
      <summary>Bezeichnet die LocalizableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.ResetValueProperty">
      <summary>Bezeichnet die ResetValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.SymbolHorizontalAlignmentProperty">
      <summary>Bezeichnet die SymbolHorizontalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.SymbolMarginProperty">
      <summary>Bezeichnet die SymbolMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.SymbolOffProperty">
      <summary>Bezeichnet die SymbolOff-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.SymbolOnProperty">
      <summary>Bezeichnet die SymbolOn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.SymbolResourceKeyProperty">
      <summary>Bezeichnet die SymbolResourceKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.SymbolVerticalAlignmentProperty">
      <summary>Bezeichnet die SymbolVerticalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.TextOffProperty">
      <summary>Bezeichnet die TextOff-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.TextOnProperty">
      <summary>Bezeichnet die TextOn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.TextProperty">
      <summary>Bezeichnet die Text-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.UseVariableTextProperty">
      <summary>Bezeichnet die UseVariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.VariableCommentProperty">
      <summary>Bezeichnet die VariableComment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.VariableTextProperty">
      <summary>Bezeichnet die VariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.VerifyOperationEvent">
      <summary>Bezeichnet das VerifyOperation-Routingereignis.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleButton.WriteValueProperty">
      <summary>Bezeichnet die WriteValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleButton.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ToggleButton.</summary>
    </member>
    <member name="T:VisiWin.Controls.CircularScaleBase">
      <summary>Abstrakte Basisklasse zum Erstellen der Skalenteilung und -beschriftung.</summary>
    </member>
    <member name="P:VisiWin.Controls.CircularScaleBase.InTryoutMode">
      <summary>Legt fest, ob der Versuchsmodus zur Plazierung der Skalentext gerade läuft.</summary>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.AddScalePoint(VisiWin.Controls.GaugeBase,System.Double,System.String,VisiWin.Controls.LineType)">
      <summary>Erstellt ein neues ScalePoint-Objekt und fügt dieses der ScalePoints-Liste des übergebenen Steuerelementes hinzu. </summary>
      <param name="control">Das Steuerelement, zu dem der neue Skalenendpunkt hinzugefügt werden soll. </param>
      <param name="value">Der Wert des neuen ScalePoint-Objekts.</param>
      <param name="text">Der Text des neuen ScalePoint-Objekts, oder null, wenn kein Text vorhanden sein soll. </param>
      <param name="lineType">Der Linientyp des neuen SkalePoint-Objekts. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.CalculateBestAlignment(VisiWin.Controls.GaugeBase)">
      <summary>Wird aufgerufen, wenn die automatische Skalenaufteilung berechnet werden soll.</summary>
      <returns>Die berechneten Werte. </returns>
      <param name="control">Das Steuerelement, für das die automatische Skalenaufteilung berechnet werden soll. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.CreateScalePoints(VisiWin.Controls.GaugeBase)">
      <summary>Füllt die Liste GaugeBase.ScalePoints mit den für das übergebene Control nötigen ScalePoint-Objekten. GaugeBase benutzt diese Methode zum Erstellen der Skalenteilung und -beschriftung. </summary>
      <param name="control">Das Steuerelement, für das die Liste erstellt werden soll.</param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.CreateScalePoints(VisiWin.Controls.GaugeBase,VisiWin.Controls.InternalValues,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Methode zum Füllen der Liste GaugeBase.ScalePoints.</summary>
      <returns>true, wenn die Skalenpunkte erfolgreich erstellt werden konnten, false im Fehlerfall (z.B. Maximum kleiner oder gleich Minimum)</returns>
      <param name="control">Referenz des Gauge-Controls, für welches die ScalePoint Objekte erstellt werden soll. </param>
      <param name="internalValues">Beinhaltet das Ergebnis von CalculateAlignment.</param>
      <param name="tryout">true: Die ScalePoint Objekte sollen nur probeweise erstellt werden, um Überschneidungen zu ermitteln, sonst false.</param>
      <param name="noMinValue">true: der Skalentext an der Minimum-Position soll nicht enthalten sein, sonst false.</param>
      <param name="noMaxValue">true: der Skalentext an der Maximum-Position soll nicht enthalten sein, sonst false.</param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.CreateScalePointsTryout(VisiWin.Controls.GaugeBase,System.Double,System.Int32)">
      <summary>Prüft die Skalenwerte auf Überschneidung.</summary>
      <returns>Ergebnis der Prüfung als TryoutResult.</returns>
      <param name="control">Referenz des Gauge-Controls, für welches der Test durchgeführt werden soll. </param>
      <param name="dblScaleAlign">Das Alignment der Skalentexte. </param>
      <param name="localDecPoint">Die Anzahl Nachkommastellen für Skalentexte. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.RoundValue(System.Double,System.Double)">
      <summary>Rundet den übergebenen Wert auf die angegebene Anzahl Nachkommastellen. </summary>
      <returns>Der gerundete Wert. </returns>
      <param name="value">Der zu rundende Wert. </param>
      <param name="numDecPoints">Die Anzahl Nachkommastellen. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.TextAtScaleBorderVisible(VisiWin.Controls.GaugeBase,System.Double,System.Boolean,System.Boolean)">
      <summary>Prüft, ob der angegebene Wert am Skalenende liegt und dort nicht sichtbar ist.</summary>
      <returns>true, wenn value einem der beiden Skalenendpunkten entspricht und für diesen Endpunkt die Visibility-Eigenschaft nicht Never ist oder wenn der Wert kein Skalenende beschreibt.</returns>
      <param name="control">Das Control, für welches entschieden werden soll, ob der Text am Skalenendpunkt sichtbar ist.</param>
      <param name="value">Der zu prüfende Wert. </param>
      <param name="noMinValue">true: der Skalentext an der Minimum-Position soll nicht enthalten sein, sonst false. </param>
      <param name="noMaxValue">true: der Skalentext an der Maximum-Position soll nicht enthalten sein, sonst false. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.Transform2Angle(VisiWin.Controls.GaugeBase,System.Double)">
      <summary>Rechnet den Winkel des Zeigers zum angegebenen Variablenwert aus.</summary>
      <returns>Der Winkel zum übergebenen Wert. </returns>
      <param name="control">Verweis auf das Gauge-Steuerelement, für das die Transformation durchgeführt werden soll. </param>
      <param name="value">Der zu transformierende Wert. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.Transform2Value(VisiWin.Controls.GaugeBase,System.Double)">
      <summary>Rechnet den Variablenwert zum angegebenen Winkel des Zeigers aus.</summary>
      <returns>Den Wert zum übergebenen Winkel. </returns>
      <param name="control">Verweis auf das Gauge-Steuerelement, für das die Transformation durchgeführt werden soll. </param>
      <param name="angle">Der zu transformierende Winkel. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleBase.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ CircularScaleBase.</summary>
    </member>
    <member name="T:VisiWin.Controls.CircularScaleLinear">
      <summary>Klasse zum Erstellen einer linearen Skalenteilung und -beschriftung auf einer bogenförmigen Skala.</summary>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLinear.CalculateBestAlignment(VisiWin.Controls.GaugeBase)">
      <summary>Wird aufgerufen, wenn die automatische Skalenaufteilung berechnet werden soll.</summary>
      <returns>Die berechneten Werte. </returns>
      <param name="control">Das Steuerelement, für das die automatische Skalenaufteilung berechnet werden soll. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLinear.CreateScalePoints(VisiWin.Controls.GaugeBase,VisiWin.Controls.InternalValues,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Erzeugt die Skalenwerte.</summary>
      <returns>True: die Skalenwerte konnten erzeugt werden, ansonsten False.</returns>
      <param name="control">Steuerelement, in dem die Skalenwerte erzeugt werden.</param>
      <param name="internalValues">Liste von zu erzeugenden Skalenwerten aus CalculateBestAlignment.</param>
      <param name="tryout">True: Durch interne Tests werden nur die Skalenwerte erzeugt, die keine Überlappung haben.False: Skalenwerte werden trotz Überlappung gezeichnet.</param>
      <param name="noMinValue">True: Der erste Skalenwert wird nicht gezeichnet.False: Der erste Skalenwert wird gezeichnet.</param>
      <param name="noMaxValue">True: Der letzte Skalenwert wird nicht gezeichnet.False: Der letzte Skalenwert wird gezeichnet.</param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLinear.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLinear.Transform2Angle(VisiWin.Controls.GaugeBase,System.Double)">
      <summary>Rechnet den Winkel des Zeigers zum angegebenen Variablenwert aus.</summary>
      <returns>Der Winkel zum übergebenen Wert. </returns>
      <param name="control">Verweis auf das Gauge-Steuerelement, für das die Transformation durchgeführt werden soll. </param>
      <param name="value">Der zu transformierende Wert. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLinear.Transform2Value(VisiWin.Controls.GaugeBase,System.Double)">
      <summary>Rechnet den Variablenwert zum angegebenen Winkel des Zeigers aus.</summary>
      <returns>Den Wert zum übergebenen Winkel. </returns>
      <param name="control">Verweis auf das Gauge-Steuerelement, für das die Transformation durchgeführt werden soll. </param>
      <param name="angle">Der zu transformierende Winkel. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLinear.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ CircularScaleLinear.</summary>
    </member>
    <member name="T:VisiWin.Controls.CircularScaleLogarithmic">
      <summary>Klasse zum Erstellen einer dekadisch logarithmischen Skalenteilung und -beschriftung auf einer bogenförmigen Skala.</summary>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLogarithmic.CalculateBestAlignment(VisiWin.Controls.GaugeBase)">
      <summary>Wird aufgerufen, wenn die automatische Skalenaufteilung berechnet werden soll.</summary>
      <returns>Die berechneten Werte. </returns>
      <param name="control">Das Steuerelement, für das die automatische Skalenaufteilung berechnet werden soll. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLogarithmic.CreateScalePoints(VisiWin.Controls.GaugeBase,VisiWin.Controls.InternalValues,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Erzeugt die Skalenwerte.</summary>
      <returns>True: die Skalenwerte konnten erzeugt werden, ansonsten False.</returns>
      <param name="control">Steuerelement, in dem die Skalenwerte erzeugt werden.</param>
      <param name="internalValues">Liste von zu erzeugenden Skalenwerten aus CalculateBestAlignment.</param>
      <param name="tryout">True: Durch interne Tests werden nur die Skalenwerte erzeugt, die keine Überlappung haben.False: Skalenwerte werden trotz Überlappung gezeichnet.</param>
      <param name="noMinValue">True: Der erste Skalenwert wird nicht gezeichnet.False: Der erste Skalenwert wird gezeichnet.</param>
      <param name="noMaxValue">True: Der letzte Skalenwert wird nicht gezeichnet.False: Der letzte Skalenwert wird gezeichnet.</param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLogarithmic.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLogarithmic.Transform2Angle(VisiWin.Controls.GaugeBase,System.Double)">
      <summary>Rechnet den Winkel des Zeigers zum angegebenen Variablenwert aus.</summary>
      <returns>Der Winkel zum übergebenen Wert. </returns>
      <param name="control">Verweis auf das Gauge-Steuerelement, für das die Transformation durchgeführt werden soll. </param>
      <param name="value">Der zu transformierende Wert. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLogarithmic.Transform2Value(VisiWin.Controls.GaugeBase,System.Double)">
      <summary>Rechnet den Variablenwert zum angegebenen Winkel des Zeigers aus.</summary>
      <returns>Den Wert zum übergebenen Winkel. </returns>
      <param name="control">Verweis auf das Gauge-Steuerelement, für das die Transformation durchgeführt werden soll. </param>
      <param name="angle">Der zu transformierende Winkel. </param>
    </member>
    <member name="M:VisiWin.Controls.CircularScaleLogarithmic.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ CircularScaleLogarithmic.</summary>
    </member>
    <member name="T:VisiWin.Controls.Clock">
      <summary>Steuerelement zur Anzeige der Systemzeit.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit. </summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn IsBlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.DateTime">
      <summary>Legt die aktuelle Zeit fest, die im Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.DateTimeMode">
      <summary>Legt fest, ob Datum und/oder Uhrzeit angezeigt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.Day">
      <summary>Gibt den Tag des aktuellen Datums-/Zeitwertes zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.DayOfWeek">
      <summary>Gibt den Wochentag des aktuellen Datums-/Zeitwertes zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.FormatDate">
      <summary>Legt die Formatierung für das Datum fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.FormatTime">
      <summary>Legt die Formatierung für die Zeit fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.Hour">
      <summary>Gibt die Stunde des aktuellen Datums-/Zeitwertes zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. </summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.IsInDesignMode">
      <summary>Gibt zurück, ob die Applikation im Designer geladen ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.LocalizedDateTimeFormat">
      <summary>Legt den Bezeichner eines Textes aus der Sprachumschaltung fest, der eine Formatierungszeichenfolge für die Ausgabe von Datum und Uhrzeit enthält.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.Millisecond">
      <summary>Gibt die Millisekunde des aktuellen Datums-/Zeitwertes zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.Minute">
      <summary>Gibt die Minute des aktuellen Datums-/Zeitwertes zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.Month">
      <summary>Gibt den Monat des aktuellen Datums-/Zeitwertes zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.Second">
      <summary>Gibt die Sekunde des aktuellen Datums-/Zeitwertes zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.Ticks">
      <summary>Gibt die Anzahl der Ticks (100-Nanosekunden-Intervalle seit dem 1. Januar 0001, 12:00:00) des aktuellen Datums-/Zeitwertes zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.TimeMode">
      <summary>Legt fest, ob der Datums-Zeitwert als zeitzonenunabhängiger Wert interpretiert wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Clock.Year">
      <summary>Gibt das Jahr des aktuellen Datums-/Zeitwertes zurück.</summary>
    </member>
    <member name="E:VisiWin.Controls.Clock.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ Clock, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.Clock.InitializeDateTime">
      <summary>Wird aufgerufen, um den internen Zyklus zur Abfrage der Systemuhrzeit zu starten.</summary>
    </member>
    <member name="M:VisiWin.Controls.Clock.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.Clock.OnDateTimeChanged(System.DateTime,System.DateTime)">
      <summary>Wird im intern verwalteteten Sekundentakt aufgerufen.</summary>
      <param name="oldValue">Zeitstempel des letzten Ereignisses.</param>
      <param name="newValue">Aktueller Zeitstempel.</param>
    </member>
    <member name="M:VisiWin.Controls.Clock.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Clock.UnInitializeDateTime">
      <summary>Wird aufgerufen, um den internen Zyklus zur Abfrage der Systemuhrzeit zu unterbrechen.</summary>
    </member>
    <member name="M:VisiWin.Controls.Clock.UpdateDateTime">
      <summary>Wird aufgerufen, wenn der interne Zyklus eine Änderung in Datum oder Uhrzeit meldet.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.authorizationObject">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.blinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.CornerRadiusProperty">
      <summary>Bezeichnet die CornerRadius-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.DateTimeChangedEvent">
      <summary>Bezeichnet das Ereignis, das ausgelöst wird, wenn sich der Datums- /Zeitwert ändert.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.DateTimeModeProperty">
      <summary>Bezeichnet die DateTimeMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.DateTimeProperty">
      <summary>Bezeichnet die DateTime-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.DayOfWeekProperty">
      <summary>Bezeichnet die DayOfWeek-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.DayProperty">
      <summary>Bezeichnet die Day-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.FormatDateProperty">
      <summary>Bezeichnet die FormatDate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.FormatTimeProperty">
      <summary>Bezeichnet die FormatTime-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.HourProperty">
      <summary>Bezeichnet die Hour-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.IsInDesignModeProperty">
      <summary>Bezeichnet die IsInDesignMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.LocalizedDateTimeFormatProperty">
      <summary>Bezeichnet die LocalizedDateTimeFormat-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.MillisecondProperty">
      <summary>Bezeichnet die Millisecond-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.MinuteProperty">
      <summary>Bezeichnet die Minute-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.MonthProperty">
      <summary>Bezeichnet die Month-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.PressedBackgroundProperty">
      <summary>Bezeichnet die PressedBackground-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.SecondProperty">
      <summary>Bezeichnet die Second-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.TicksProperty">
      <summary>Bezeichnet die Ticks-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.TimeModeProperty">
      <summary>Bezeichnet die TimeMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Clock.YearProperty">
      <summary>Bezeichnet die Year-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.Clock.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Clock.</summary>
    </member>
    <member name="T:VisiWin.Controls.CloseDialogAction">
      <summary>Action, die ein Fenster (Window) schließt.</summary>
    </member>
    <member name="P:VisiWin.Controls.CloseDialogAction.CanClose">
      <summary>Legt fest, ob das Fenster geschlossen werden darf.</summary>
    </member>
    <member name="P:VisiWin.Controls.CloseDialogAction.DialogName">
      <summary>Typname des zu schließenden Fensters. </summary>
    </member>
    <member name="P:VisiWin.Controls.CloseDialogAction.ParamList">
      <summary>Feld von Parametern. Wird von der Action nicht verwendet.</summary>
    </member>
    <member name="M:VisiWin.Controls.CloseDialogAction.Invoke(System.Object)">
      <summary>Führt die Action aus.</summary>
      <param name="parameter">Angabe der ParamList-Eigenschaft. Der Eigenschaftenwert wird nicht verwendet. </param>
    </member>
    <member name="M:VisiWin.Controls.CloseDialogAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.CloseDialogAction.CanCloseProperty">
      <summary>Bezeichnet die CanClose-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.CloseDialogAction.DialogNameProperty">
      <summary>Bezeichnet die DialogName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.CloseDialogAction.ParamListProperty">
      <summary>Bezeichnet die ParamList-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.CloseDialogAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ CloseDialogAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.CloseViewAction">
      <summary>Action, die die angegebene View aus einer Region versteckt und entlädt.</summary>
    </member>
    <member name="P:VisiWin.Controls.CloseViewAction.F10Handled">
      <summary>Legt fest, ob das F10-Tastaturereignis nach der Bearbeitung weitergereicht wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.CloseViewAction.Key">
      <summary>Gibt eine Taste an, die zusammen mit der ModifierKeys-Eigenschaft den Shortcut zum Auslösen der Action über die Tastatur bildet. </summary>
    </member>
    <member name="P:VisiWin.Controls.CloseViewAction.ModifierKeys">
      <summary>Legt eine oder mehrere Umschalttasten fest, die zusammen mit der Key-Eigenschaft den Shortcut zum Auslösen der Action über die Tastatur bildet. </summary>
    </member>
    <member name="P:VisiWin.Controls.CloseViewAction.RegionName">
      <summary>Name der Region, in der die View entladen werden soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.CloseViewAction.ViewName">
      <summary>Name der View, die entladen werden soll. </summary>
    </member>
    <member name="M:VisiWin.Controls.CloseViewAction.Invoke(System.Object)">
      <summary>Führt die Action aus.</summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.CloseViewAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="M:VisiWin.Controls.CloseViewAction.OnDetaching">
      <summary>Wird aufgerufen, wenn die Aktion vom "AssociatedObject" getrennt wird. Der Aufruf erfolgt vor dem eigentlichen Trennvorgang. </summary>
    </member>
    <member name="F:VisiWin.Controls.CloseViewAction.KeyProperty">
      <summary>Bezeichnet die Key-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.CloseViewAction.ModifierKeysProperty">
      <summary>Bezeichnet die ModifierKeys-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.CloseViewAction.RegionNameProperty">
      <summary>Bezeichnet die RegionName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.CloseViewAction.ViewNameProperty">
      <summary>Bezeichnet die ViewName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.CloseViewAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ CloseViewAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.ColorToSolidColorBrushValueConverter">
      <summary>Konverter: Wandelt einen kompatiblen Farbwert in einen SolidColorBrush.</summary>
    </member>
    <member name="M:VisiWin.Controls.ColorToSolidColorBrushValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Führt die Konvertierung aus.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="targetType">Keine Verwendung.</param>
      <param name="parameter">Keine Verwendung.</param>
      <param name="culture">Keine Verwendung.</param>
    </member>
    <member name="M:VisiWin.Controls.ColorToSolidColorBrushValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Nicht implementiert.</summary>
      <returns>-</returns>
      <param name="value">-</param>
      <param name="targetType">-</param>
      <param name="parameter">-</param>
      <param name="culture">-</param>
    </member>
    <member name="M:VisiWin.Controls.ColorToSolidColorBrushValueConverter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ColorToSolidColorBrushValueConverter.</summary>
    </member>
    <member name="T:VisiWin.Controls.ComboBox">
      <summary>Steuerelement, das ein Kombinationsfeld mit Anbindung an eine Prozessvariable darstellt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.Authorization">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben und das Steuerelement sichtbar oder aktiv.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit. </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar / unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.BlinkService">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn IsBlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.BlinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.CanRecipeEdit">
      <summary>Legt fest, ob der Variablenwert über dieses Steuerelement im Rezeptpuffer bearbeitet werden kann. </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsAttached">
      <summary>Gibt zurück, ob die Variable beim Variablenkern über AttachVariable angebunden wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsAttaching">
      <summary>Gibt zurück ob die in VariableName angegebene Prozessvariable gerade angemeldet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsBound">
      <summary>Gibt an, ob das Steuerelement über die VariableName-Eigenschaft mit einer gültigen Prozessvariablen verknüpft ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsDeferredActivationEnabled">
      <summary>Legt fest, ob die verzögerte Variablenaktivierung für dieses Steuerelement angeschaltet sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsEditControl">
      <summary>Legt fest, ob das Steuerelement den geänderten Variablenwert als Editierkopie puffert oder ob der Wert direkt in den Variablenkern geschrieben wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsEditing">
      <summary>Gibt zurück ob sich die Variable im Editiermodus befindet. </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsInSetSelectedIndex">
      <summary>Gibt zurück, ob das Steuerelement gerade das Setzen des selektierten Listenelementes ausführt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsInSetVariable">
      <summary>Gibt zurück, ob der Variablenwert gerade intern umgesetzt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsQualityGood">
      <summary>Gibt zurück, ob die Statusinformationen (Quality-Flag) der verknüpften Prozessvariablen eine fehlerfreie Übertragung signalisieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsRecipeEditing">
      <summary>Gibt zurück, ob der Wert der Variablen aktuell über den Rezeptpuffer bezogen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.IsVariableValid">
      <summary>Gibt zurück, ob die in VariableName angegebene Prozessvariable gültig ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.LabelText">
      <summary>Gibt einen beschreibenden Text zur verknüpften Variablen an, der zusätzlich zum Wert angezeigt wird (siehe auch Eigenschaften LocalizableLabelText/ UseVariableText).</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.LanguageService">
      <summary>Gibt einen Verweis auf den intern verwendeten LanguageService zum Lesen und Überwachen sprachumschaltbarer Texte zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.LocalizableLabelText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit überschreibt der ermittelte Text in der aktuellen Projektsprache den Wert der LabelText-Eigenschaft. </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.LocalizableWatermarkText">
      <summary>Legt den Bezeichner eines sprachumschaltbaren Textes fest, der in WatermarkText geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.LocalizedLabelText">
      <summary>Gibt einen Verweis auf die intern verwendete LocalizedText-Instanz zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.LocalizedWatermarkText">
      <summary>Gibt das Objekt zurück, das zur Ermittelung des in LocalizableWatermarkText angegebenen sprachumschaltbaren Textes verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.StateItemTemplate">
      <summary>Legt das ItemTemplate zur Darstellung eines State aus der StateList fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.StateList">
      <summary>Legt eine Zuordnungstabelle fest, die zum Erzeugen von Elementen und zur Transformation des Prozessvariablenwertes auf das selektierte Element verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.StateMode">
      <summary>Legt fest, wie der Prozessvariablenwert beim Vergleich mit den Werten der in StateList angegebenen Zuordnungstabelle interpretiert wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.Symbol">
      <summary>Legt eine Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.SymbolHorizontalAlignment">
      <summary>Legt die horizontale Ausrichtung (links, mitte, rechts) der Grafik auf dem Beschriftungsfeld des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.SymbolMargin">
      <summary>Legt den Abstand der Grafik zum Rand des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.SymbolResourceKey">
      <summary>Legt über die Angabe eines Ressourcenschlüssels die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.SymbolVerticalAlignment">
      <summary>Legt die vertikale Ausrichtung (oben, mitte, unten) der Grafik auf dem Beschriftungsfeld des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.UserManagementService">
      <summary>Gibt einen Verweis auf den intern verwendeten UserManagementService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.UseVariableText">
      <summary>Legt fest, dass in die LabelText-Eigenschaft automatisch der mit der Variablen verknüpfte sprachumschaltbare Text in der aktiven Projektsprache geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.Variable">
      <summary>Gibt einen Verweis auf den intern verwendeten Variable-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.VariableComment">
      <summary>Gibt den Kommentar zur verknüpften Prozessvariablen aus der Projektdatenbank zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.VariableName">
      <summary>Legt den Namen der verknüpften Prozessvariablen fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.VariableService">
      <summary>Gibt einen Verweis auf den intern verwendeten VariableService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.VariableText">
      <summary>Gibt den sprachumschaltbaren Text in der aktuellen Projektsprache zurück, der in der Projektdatenbank für die verknüpfte Prozessvariable festgelegt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.WatermarkTemplate">
      <summary>Legt das Template zur Darstellung des in WatermarkText angegebenen Textes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ComboBox.WatermarkText">
      <summary>Legt einen Text fest, der ein fehlende Eingabe signalisiert.</summary>
    </member>
    <member name="E:VisiWin.Controls.ComboBox.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert, die eine Reaktion im Steuerelement erfordert.</summary>
      <param name="sender">Objekt vom Typ ComboBox, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.ComboBox.ValueChanged">
      <summary>Wird ausgelöst, sobald sich der Wert der in VariableName zugeordneten Prozessvariablen ändert. </summary>
      <param name="sender">Objekt vom Typ ComboBox, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.ComboBox.VerifyOperation">
      <summary>Wird ausgelöst, wenn im Steuerelement eine verifikationsunterstützte Handlung gestartet wurde.</summary>
      <param name="sender">Objekt vom Typ ComboBox, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VerifyOperationEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.AttachVariable(System.Nullable{System.Boolean})">
      <summary>Meldet die im Steuerelement verwendete Prozessvariable zur Kommunikation an.</summary>
      <param name="useDeferredActivation">Gibt an, ob die verzögerte Variablenaktivierung benutzt werden soll.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.DetachVariable">
      <summary>Meldet die im Steuerelement verwendete Prozessvariable im Variablenkern ab.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.DetermineSelectedIndex">
      <summary>Ermittelt den selektierten Index anhand des Variablenwertes. Die Angabe einer StateCollection als ItemSource wird berücksichtigt.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.GetValuePropertyValue">
      <summary>Wird aufgerufen, um den Wert der Value-Eigenschaft zu lesen.</summary>
      <returns>Wert der Value-Eigenschaft.</returns>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.InitializeBlinkService">
      <summary>Wird ausgeführt, um den BlinkService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.InitializeLocalizedWatermarkText">
      <summary>Wird ausgeführt, um den in LocalizedWatermarkText angegebenen sprachumschaltbaren Text zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.InitializeUserManagementService">
      <summary>Wird aufgerufen, um den UserManagementService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.InitializeVariableService">
      <summary>Wird ausgeführt, um den VariableService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnAuthorizationChanged(VisiWin.UserManagement.AuthorizationEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Freigabestatus (Eigenschaft IsAuthorized) geändert hat.</summary>
      <param name="e">Objekt vom Typ AuthorizationEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnAuthorizationRightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die AuthorizationRight-Eigenschaft geändert hat. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnBlinkCycleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die BlinkCycle-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnBlinkTimerDoBlink(VisiWin.Blink.BlinkEventArgs)">
      <summary>Wird ausgeführt, wenn sich die Blinkphase ändert.</summary>
      <param name="e">Objekt vom Typ BlinkEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCanRecipeEditChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die CanRecipeEdit-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceIsAttached(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAttached-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAttached</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceIsAuthorized(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAuthorized-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAuthorized</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceIsBound(System.Object)">
      <summary>Wird aufgerufen, wenn die IsBound-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsBound</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceIsEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEditing</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceIsEnabled(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEnabled-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEnabled</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceIsQualityGood(System.Object)">
      <summary>Wird aufgerufen, wenn die IsQualityGood-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsQualityGood</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceIsRecipeEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsRecipeEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsRecipeEditing</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceIsVariableValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsVariableValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsVariableValid</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceLabelText(System.Object)">
      <summary>Wird aufgerufen, wenn die LabelText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LabelText</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceVariableComment(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableComment-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableComment</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceVariableText(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableText</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceVisibility(System.Object)">
      <summary>Wird aufgerufen, wenn die Visibility-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Visibility</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnCoerceWatermarkText(System.Object)">
      <summary>Wird aufgerufen, wenn die WatermarkText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von WatermarkText</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnIsBlinkEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die IsBlinkEnabled-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die aktuell im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnLocalizableLabelTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LocalizableLabelText-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnLocalizableWatermarkTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LocalizableWatermarkText-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnLocalizedLabelTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text des zugehörigen LocalizedText-Objekt ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnLocalizedWatermarkTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im zugehörigen LocalizableWatermarkText-Objekt (z.B. durch eine Sprachumschaltung) ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnPropertyChanged(System.String)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert.</summary>
      <param name="propertyName">Name der geänderten Eigenschaft.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der selektierte Listenindex ändert. Ruft das SelectionChanged-Ereignis auf.</summary>
      <param name="e">Objekt vom Typ SelectionChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnStateListChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich Inhalte der StateList-Eigenschaften ändern</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnStateModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Wert der StateMode-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnUnloaded">
      <summary>Wird ausgeführt, wenn das Unloaded-Ereignis ausgeführt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnUseVariableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die UseVariableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die Variablen-Instanz ändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IVariable.IsEditingChanged-Ereignis der Variable ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnVariableNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der VariableName-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft der zugeordneten Variablen ändert. </summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.OnVerifyOperation(System.String,System.Object)">
      <summary>Wird ausgeführt, wenn eine verifikationsunterstützte Handlung gestartet wurde. Löst das VerifyOperation-Ereignis aus.</summary>
      <returns>true, wenn die Handlung (z.B. über die Benutzerschnittstelle des VerificationBehavior) verifiziert wurde.</returns>
      <param name="operationName">Name der Handlung.</param>
      <param name="operationParameter">Parameter der Handlung.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.SetVariableValue(System.Object,System.Boolean)">
      <summary>Setzt den Variablenwert und aktiviert optional den Editiermodus der Variable. </summary>
      <param name="newValue">Neuer Wert der Variablen. </param>
      <param name="keepEditing">Wert, der angibt, ob der Editiermodus gestartet werden soll:True: Der neue Wert wird im Steuerelement übernommen, wird aber erst zum Variablenkern geschickt, wenn StopEdit aufgerufen wird.False: Der neue Wert wird im Steuerelement übernommen und direkt zum Variablenkern geschickt.</param>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.StartEdit">
      <summary>Startet den Editiermodus.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.StopEdit(System.Boolean)">
      <summary>Stoppt den Editiermodus. </summary>
      <param name="transmitEditResult">true: wenn der Wert aus dem Steuerelement in die verknüpfte Prozessvariable geschrieben werden soll. false: wenn der Wert aus dem Steuerelement verworfen und der aktuelle Prozessvariablenwert aus dem Variablenkern in das Steuerelement geschrieben werden soll.</param>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.CanRecipeEditProperty">
      <summary>Bezeichnet die CanRecipeEdit-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsAttachedProperty">
      <summary>Bezeichnet die IsAttached-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsBoundProperty">
      <summary>Bezeichnet die IsBound-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsDeferredActivationEnabledProperty">
      <summary>Bezeichnet die IsDeferredActivationEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsEditControlProperty">
      <summary>Bezeichnet die IsEditControl-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsEditingProperty">
      <summary>Bezeichnet die IsEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsQualityGoodProperty">
      <summary>Bezeichnet die IsQualityGood-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsRecipeEditingProperty">
      <summary>Bezeichnet die IsRecipeEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.IsVariableValidProperty">
      <summary>Bezeichnet die IsVariableValid-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.LabelTextProperty">
      <summary>Bezeichnet die LabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.LocalizableLabelTextProperty">
      <summary>Bezeichnet die LocalizableLabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.LocalizableWatermarkTextProperty">
      <summary>Bezeichnet die LocalizableWatermarkText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.StateItemTemplateProperty">
      <summary>Bezeichnet die StateItemTemplate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.StateListProperty">
      <summary>Bezeichnet die StateList-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.StateModeProperty">
      <summary>Bezeichnet die StateMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.SymbolHorizontalAlignmentProperty">
      <summary>Bezeichnet die SymbolHorizontalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.SymbolMarginProperty">
      <summary>Bezeichnet die SymbolMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.SymbolResourceKeyProperty">
      <summary>Bezeichnet die SymbolResourceKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.SymbolVerticalAlignmentProperty">
      <summary>Bezeichnet die SymbolVerticalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.UseVariableTextProperty">
      <summary>Bezeichnet die UseVariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.VariableCommentProperty">
      <summary>Bezeichnet die VariableComment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.VariableTextProperty">
      <summary>Bezeichnet die VariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.VerifyOperationEvent">
      <summary>Bezeichnet das VerifyOperation-Routingereignis. </summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.WatermarkTemplateProperty">
      <summary>Bezeichnet die WatermarkTemplate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ComboBox.WatermarkTextProperty">
      <summary>Bezeichnet die WatermarkText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ComboBox.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ComboBox.</summary>
    </member>
    <member name="T:VisiWin.Controls.ControlTag">
      <summary>Beschreibt die Funktion eines programmatisch erstellten Elementes.</summary>
    </member>
    <member name="P:VisiWin.Controls.ControlTag.LimitControl">
      <summary>Gibt eine Instanz mit der Kennung "LimitControl" zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ControlTag.ScaleLine">
      <summary>Gibt eine Instanz mit der Kennung "ScaleLine" zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ControlTag.ScaleText">
      <summary>Gibt eine Instanz mit der Kennung "ScaleText" zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ControlTag.TagTypeProp">
      <summary>Gibt die Verwendung des Elementes zurück.</summary>
    </member>
    <member name="M:VisiWin.Controls.ControlTag.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="T:VisiWin.Controls.DateTimeVarIn">
      <summary>Steuerelement zur Anzeige und Eingabe eines Datums-/ Zeitwertes mit Anbindung an eine Prozessvariable.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.DateTimeMode">
      <summary>Legt fest, ob Datum und/ oder Uhrzeit im Steuerelement angezeigt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.FormatDate">
      <summary>Legt die Formatierung für das im Steuerelement angezeigte Datum fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.FormatTime">
      <summary>Legt die Formatierung für die im Steuerelement angezeigte Uhrzeit fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.IsInSetValueInternal">
      <summary>Gibt zurück, ob die Value-Eigenschaft gerade intern umgesetzt wird. Damit kann unterschieden werden, ob der Wert von außen gesetzt wird oder von intern. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.IsLimitMaxExceeded">
      <summary>Gibt zurück, ob die obere Grenze (Eigenschaft LimitMax) vom Variablenwert überschritten wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.IsLimitMinExceeded">
      <summary>Gibt zurück, ob die untere Grenze (Eigenschaft LimitMin) vom Variablenwert unterschritten wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.IsValidatingLimits">
      <summary>Gibt zurück, ob die Eingabegrenzen im Steuerelement berücksichtigt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.LimitMax">
      <summary>Gibt den oberen Grenzwert für die angebundene Prozessvariable an. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.LimitMaxFormatted">
      <summary>Gibt den oberen Grenzwert für die angebundene Prozessvariable als formatierte Zeichenkette zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.LimitMin">
      <summary>Gibt den unteren Grenzwert für die angebundene Prozessvariable an. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.LimitMinFormatted">
      <summary>Gibt den unteren Grenzwert für die angebundene Prozessvariable als formatierte Zeichenkette zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.LocalizableUnitText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit wird der Text in der aktuellen Projektsprache auf die UnitText-Eigenschaft geschrieben.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.UnitText">
      <summary>Gibt einen Einheitentext zur Variablen an, der zusätzlich zum Variablenwert angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.UseVariableUnitText">
      <summary>Legt fest, dass in die 'UnitText'-Eigenschaft automatisch der mit der Variablen verknüpfte Einheitentext geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.Value">
      <summary>Legt den im Steuerelement verknüpften Prozessvariablenwert fest oder gibt ihn zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarIn.ValueFormatted">
      <summary>Legt den aktuellen Variablenwert (Eigenschaft Value) als formatierten Text fest oder gibt ihn zurück.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.CoerceLimitMaxFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'LimitMaxFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für LimitMaxFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.CoerceLimitMinFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'LimitMinFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für LimitMinFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.CoerceValueFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'ValueFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für ValueFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.GetValuePropertyValue">
      <summary>Wird aufgerufen, um den Wert der Value-Eigenschaft zu lesen.</summary>
      <returns>Wert der Value-Eigenschaft.</returns>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.InitializeTouchpadMemberCopy(VisiWin.Controls.VariableInputControl)">
      <summary>Initialisiert die TouchpadMember-Kopie. </summary>
      <param name="touchpadCaller">Das die Bildschirmtastatur aufrufende Steuerelement. </param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.InitializeVariableService">
      <summary>Wird ausgeführt, um den VariableService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnCoerceIsInputValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsInputValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsInputValid</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnCoerceIsLimitMaxExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsLimitMaxExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsLimitMaxExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnCoerceIsLimitMinExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsLimitMinExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsLimitMinExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnCoerceLimitMax(System.Object)">
      <summary>Wird aufgerufen, wenn die LimitMax-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LimitMax</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnCoerceLimitMin(System.Object)">
      <summary>Wird aufgerufen, wenn die LimitMin-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LimitMin</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnCoerceUnitText(System.Object)">
      <summary>Wird aufgerufen, wenn die UnitText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von UnitText</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnDateTimeModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die DateTimeMode-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnFormatDateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die FormatDate-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnFormatTimeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die FormatTime-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnLimitMaxChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LimitMax-Eigenschaft ändert.</summary>
      <param name="e">Details zur Änderung.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnLimitMinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LimitMin-Eigenschaft ändert.</summary>
      <param name="e">Details zur Änderung.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnLocalizableUnitTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LocalizableUnitText-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnUnloaded">
      <summary>Wird ausgeführt, wenn das Unloaded-Ereignis ausgeführt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnUseVariableLimitsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die UseVariableLimits-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnUseVariableUnitTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die UseVariableUnitText-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die Value-Eigenschaft ändert </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die Variablen-Instanz ändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IVariable.IsEditingChanged-Ereignis der Variable ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.SetValueInternal(System.Object)">
      <summary>Setzt den Wert der Value-Eigenschaft. Das IsInSetValueInternal - Flag wird während des Vorgangs auf true gesetzt.</summary>
      <param name="value">Der neue Wert für die 'Value'-Eigenschaft. </param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.SetValueInternal(System.DateTime)">
      <summary>Setzt die Werte der Eigenschaften 'Value' und 'RawValue'. Das IsInSetValueInternal-Flag wird während des Vorgangs auf true gesetzt.</summary>
      <param name="value">Der neue Wert für die 'Value'-Eigenschaft. </param>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.DateTimeModeProperty">
      <summary>Bezeichnet die DateTimeMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.FormatDateProperty">
      <summary>Bezeichnet die FormatDate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.FormatTimeProperty">
      <summary>Bezeichnet die FormatTime-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.IsLimitMaxExceededProperty">
      <summary>Bezeichnet die IsLimitMaxExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.IsLimitMinExceededProperty">
      <summary>Bezeichnet die IsLimitMinExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.LimitMaxFormattedProperty">
      <summary>Bezeichnet die LimitMaxFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.LimitMaxProperty">
      <summary>Bezeichnet die LimitMax-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.LimitMinFormattedProperty">
      <summary>Bezeichnet die LimitMinFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.LimitMinProperty">
      <summary>Bezeichnet die LimitMin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.LocalizableUnitTextProperty">
      <summary>Bezeichnet die LocalizableUnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.UnitTextProperty">
      <summary>Bezeichnet die UnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.UseVariableUnitTextProperty">
      <summary>Bezeichnet die UseVariableUnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.ValueFormattedProperty">
      <summary>Bezeichnet die ValueFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarIn.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarIn.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ DateTimeVarIn.</summary>
    </member>
    <member name="T:VisiWin.Controls.VariableInputControl">
      <summary>Kapselt die Basisfunktionen der Variableneingabe-Steuerelemente (z.B. NumericVarIn, TextVarIn, ...) </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.CanShowTouchpad">
      <summary>Gibt zurück, ob die in TouchpadName angegebene Bildschirmtastatur existiert</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.ClearTextCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe der Wert aus der Anzeige des Steuerelementes gelöscht wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.InputBox">
      <summary>Verweis auf das Element im Template, das die Eingabe annimmt (Name: PART_TextBox oder PART_PasswordBox). </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.IsEditing">
      <summary>Gibt zurück ob sich die Variable im Editiermodus befindet. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.IsInputValid">
      <summary>Gibt zurück, ob die aktuelle Eingabe gültig ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.IsInSetTextInternal">
      <summary>Holt einen Wert, der angibt, ob der Text gerade intern umgesetzt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.LocalizableWatermarkText">
      <summary>Legt den Bezeichner eines sprachumschaltbaren Textes fest, der in WatermarkText geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.LocalizedWatermarkText">
      <summary>Gibt das Objekt zurück, das zur Ermittelung des in LocalizableWatermarkText angegebenen sprachumschaltbaren Textes verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.LostKeyboardFocusBehavior">
      <summary>Legt fest, wie der im Steuerelement bearbeitete Wert behandelt wird, wenn das Steuerelement den Eingabefokus verliert. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.ResetValueCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe der Wert im Steuerelement zurückgesetzt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.Text">
      <summary>Legt den Text fest, der als Wert angezeigt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.TouchpadCaller">
      <summary>Gibt das Eingabe-Steuerelement an, durch das die Bildschirmtastatur aufgerufen wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.TouchpadMember">
      <summary>Legt fest, ob das Steuerelement als Eingabeelement auf einer Touchkeyboard-Vorlage liegt und den eingegebenen Wert puffert. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.TouchpadName">
      <summary>Legt den Namen des zugeordneten Touchpads fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.UseVariableLimits">
      <summary>Legt fest, ob die Grenzwerte aus der Prozessvariablendefinition verwendet werden sollen.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.ValidationErrors">
      <summary>Gibt eine Liste von Fehlern an, die bei der Validierung des eingegebenen Wertes aufgetreten sind.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.ValidationErrorTemplate">
      <summary>Legt das Template fest, das bei einem Validierungsfehler angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.ValidationRules">
      <summary>Legt eine Liste von Prüfobjekten fest, mit deren Hilfe der im Steuerelement angezeigte Wert während der Eingabe validiert wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.WatermarkTemplate">
      <summary>Legt das Template zur Darstellung des in WatermarkText angegebenen Textes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.WatermarkText">
      <summary>Legt einen Text fest, der ein fehlende Eingabe signalisiert.</summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.WriteOnReturn">
      <summary>Legt fest, ob die im Steuerelement begonnene Werteingabe über die Return-Taste abgeschlossen und der bearbeitete Wert zum Variablenkern geschrieben wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.VariableInputControl.WriteValueCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe der im Steuerelement bearbeitete Wert in den Variablenkern geschrieben wird.</summary>
    </member>
    <member name="E:VisiWin.Controls.VariableInputControl.InputValidated">
      <summary>Wird ausgelöst, wenn die Eingabe validiert wird.</summary>
      <param name="sender">Objekt vom Typ VariableInputControl, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.VariableInputControl.WriteValueCompleted">
      <summary>Wird ausgelöst, wenn der im Steuerelement eingegebene Variablenwert in den Variablenkern geschrieben wurde.</summary>
      <param name="sender">Objekt vom Typ VariableInputControl, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.InitializeInputBox">
      <summary>Initialisiert die InputBox (wenn verfügbar). </summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.InitializeLocalizedWatermarkText">
      <summary>Wird ausgeführt, um den in LocalizedWatermarkText angegebenen sprachumschaltbaren Text zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.InitializeTouchpadMemberCopy(VisiWin.Controls.VariableInputControl)">
      <summary>Initialisiert die TouchpadMember-Kopie. </summary>
      <param name="touchpadCaller">Das die Bildschirmtastatur aufrufende Steuerelement. </param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.InitialzeTextValidationBinding">
      <summary>Initialisiert die Bindung zum Validieren der Text-Eigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnCoerceIsEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEditing</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnCoerceIsInputValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsInputValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsInputValid</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnCoerceWatermarkText(System.Object)">
      <summary>Wird aufgerufen, wenn die WatermarkText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von WatermarkText</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnEscapeKey">
      <summary>Wird ausgeführt, wenn die Escape-Taste gedrückt wurde.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Wird aufgerufen, wenn das Steuerelement den Fokus bekommt.</summary>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Wird ausgeführt, wenn das Steuerelement den Tastatur-Fokus bekommt. Dies betrifft auch Unterelemente, wie, im Normalfall, die zugehörige TextBox. </summary>
      <param name="e">Objekt vom Typ KeyboardFocusChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnInputBoxClick">
      <summary>Wird ausgeführt wenn ein Click auf das Steuerelement ausgeführt wird</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnInputBoxPreviewInputDown(System.Windows.Input.InputEventArgs)">
      <summary>Wird ausgeführt wenn die InputBox einen PreviewMouseDown-Event oder einen PreviewTouchDown-Event erhält</summary>
      <param name="e">Details zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnInputBoxPreviewInputUp(System.Windows.Input.InputEventArgs)">
      <summary>Wird ausgeführt wenn die InputBox einen PreviewMouseUp-Event oder einen PreviewTouchUp-Event erhält.</summary>
      <param name="e">Details zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnInputBoxTextChanged">
      <summary>Wird ausgeführt, wenn sie der Text in der InputBox verändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnInputValidated">
      <summary>Wird ausgeführt, nachdem die Eingabevalidierung abgeschlossen und der Wert der Eigenschaft IsInputValid gesetzt wurde. </summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Wird ausgeführt, wenn eine Taste gedrückt wird.</summary>
      <param name="e">Details zum Tastendruck.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnLocalizableWatermarkTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LocalizableWatermarkText-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnLocalizedWatermarkTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im zugehörigen LocalizableWatermarkText-Objekt (z.B. durch eine Sprachumschaltung) ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Wird ausgeführt, wenn das Steuerelement den Tastatur-Fokus verliert. Dies betrifft auch Unterelemente, wie, im Normalfall, die zugehörige TextBox. </summary>
      <param name="e">Objekt vom Typ KeyboardFocusChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnReturnKey">
      <summary>Wird ausgeführt, wenn die Return-Taste gedrückt wurde. </summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die Text-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnUnloaded">
      <summary>Wird ausgeführt, wenn das Unloaded-Ereignis ausgeführt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnUseVariableLimitsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die UseVariableLimits-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnVariableChanged">
      <summary>Wird aufgerufen, wenn die verknüpfte Instanz der Prozessvariablen geändert wurde.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnVariableIsEditingChanged">
      <summary>Wird aufgerufen, wenn sich der Editierstatus der angeschlossenen Variableninstanz ändert. </summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.OnWriteValueCompleted">
      <summary>Wird ausgeführt, wenn der im Steuerelement eingegebene Variablenwert in den Variablenkern geschrieben wurde.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.SelectAll">
      <summary>Selektiert die komplette Eingabe in der Eingabebox. </summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.SetTextInternal(System.String)">
      <summary>Setzt den Text. Das IsInSetValueInternal-Flag wird während des Vorgangs auf true gesetzt. </summary>
      <param name="text">Zu setzender Text.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.StartEdit">
      <summary>Startet den Editiermodus.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.StopEdit(System.Boolean)">
      <summary>Stoppt den Editiermodus. </summary>
      <param name="transmitEditResult">true: wenn der Wert aus dem Steuerelement in die verknüpfte Prozessvariable geschrieben werden soll. false: wenn der Wert aus dem Steuerelement verworfen und der aktuelle Prozessvariablenwert aus dem Variablenkern in das Steuerelement geschrieben werden soll.</param>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.ValidateInput">
      <summary>Überprüft die aktuelle Eingabe und setzt als Ergebnis den Wert der IsInputValid-Eigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.InputValidatedEvent">
      <summary>Bezeichnet das InputValidated-Routingereignis.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.IsEditingProperty">
      <summary>Bezeichnet die IsEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.IsInputValidProperty">
      <summary>Bezeichnet die IsInputValid-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.LocalizableWatermarkTextProperty">
      <summary>Bezeichnet die LocalizableWatermarkText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.LostKeyboardFocusBehaviorProperty">
      <summary>Bezeichnet die LostKeyboardFocusBehavior-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.ResetValueProperty">
      <summary>Bezeichnet die ResetValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.TextProperty">
      <summary>Bezeichnet die Text-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.TouchpadMemberProperty">
      <summary>Bezeichnet die TouchpadMember-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.TouchpadNameProperty">
      <summary>Bezeichnet die TouchpadName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.UseVariableLimitsProperty">
      <summary>Bezeichnet die UseVariableLimits-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.ValidationErrorsProperty">
      <summary>Bezeichnet die ValidationErrors-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.ValidationErrorTemplateProperty">
      <summary>Bezeichnet die ValidationErrorTemplate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.ValidationRulesProperty">
      <summary>Bezeichnet die ValidationRules-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.WatermarkTemplateProperty">
      <summary>Bezeichnet die WatermarkTemplate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.WatermarkTextProperty">
      <summary>Bezeichnet die WatermarkText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.WriteOnReturnProperty">
      <summary>Bezeichnet die WriteOnReturn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.WriteValueCompletedEvent">
      <summary>Bezeichnet das WriteValueCompleted-Routingereignis.</summary>
    </member>
    <member name="F:VisiWin.Controls.VariableInputControl.WriteValueProperty">
      <summary>Bezeichnet die WriteValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.VariableInputControl.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ VariableInputControl.</summary>
    </member>
    <member name="T:VisiWin.Controls.DateTimeVarOut">
      <summary>Steuerelement zur Anzeige eines Datums-/ Zeitwertes mit Anbindung an eine Prozessvariable.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.DateTimeMode">
      <summary>Legt fest, ob Datum und/oder Uhrzeit im Steuerelement angezeigt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.FormatDate">
      <summary>Legt die Formatierung für das im Steuerelement angezeigte Datum fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.FormatTime">
      <summary>Legt die Formatierung für die im Steuerelement angezeigte Uhrzeit fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.IsInSetValueInternal">
      <summary>Gibt zurück, ob die Value-Eigenschaft gerade intern umgesetzt wird. Damit kann unterschieden werden, ob der Wert von außen gesetzt wird oder von intern. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.IsLimitMaxExceeded">
      <summary>Gibt zurück, ob die obere Grenze (Eigenschaft LimitMax) vom Variablenwert überschritten wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.IsLimitMinExceeded">
      <summary>Gibt zurück, ob die untere Grenze (Eigenschaft LimitMin) vom Variablenwert unterschritten wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.IsValidatingLimits">
      <summary>Gibt zurück, ob die Grenzen berücksichtigt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.LimitMax">
      <summary>Gibt den oberen Grenzwert für die angebundene Prozessvariable an. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.LimitMaxFormatted">
      <summary>Gibt den oberen Grenzwert für die angebundene Prozessvariable als formatierte Zeichenkette zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.LimitMin">
      <summary>Gibt den unteren Grenzwert für die angebundene Prozessvariable an. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.LimitMinFormatted">
      <summary>Gibt den unteren Grenzwert für die angebundene Prozessvariable als formatierte Zeichenkette zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.LocalizableUnitText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit wird der Text in der aktuellen Projektsprache auf die UnitText-Eigenschaft geschrieben.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.UnitText">
      <summary>Gibt einen Einheitentext zur Variablen an, der zusätzlich zum Variablenwert angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.UseVariableLimits">
      <summary>Legt fest, ob die Grenzwerte aus der Prozessvariablendefinition verwendet werden sollen.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.UseVariableUnitText">
      <summary>Legt fest, dass in die 'UnitText'-Eigenschaft automatisch der mit der Variablen verknüpfte Einheitentext geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.Value">
      <summary>Legt den im Steuerelement verknüpften Prozessvariablenwert fest oder gibt ihn zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DateTimeVarOut.ValueFormatted">
      <summary>Legt den aktuellen Variablenwert (Eigenschaft Value) als formatierten Text fest oder gibt ihn zurück.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.CoerceLimitMaxFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'LimitMaxFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für LimitMaxFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.CoerceLimitMinFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'LimitMinFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für LimitMinFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.CoerceValueFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'ValueFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für ValueFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss.</summary>
      <returns>Der aus Value ermittelte Wert.</returns>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnCoerceIsLimitMaxExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsLimitMaxExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsLimitMaxExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnCoerceIsLimitMinExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsLimitMinExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsLimitMinExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnCoerceLimitMax(System.Object)">
      <summary>Wird aufgerufen, wenn die LimitMax-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LimitMax</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnCoerceLimitMin(System.Object)">
      <summary>Wird aufgerufen, wenn die LimitMin-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LimitMin</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnCoerceUnitText(System.Object)">
      <summary>Wird aufgerufen, wenn die UnitText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von UnitText</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnDateTimeModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die DateTimeMode-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnFormatDateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die FormatDate-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnFormatTimeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die FormatTime-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnLimitMaxChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich die LimitMax-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnLimitMinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich die LimitMin-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnLocalizableUnitTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LocalizableUnitText-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnUnloaded">
      <summary>Wird ausgeführt, wenn das Unloaded-Ereignis ausgeführt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnUseVariableLimitsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die UseVariableLimits-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnUseVariableUnitTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die UseVariableUnitText-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die Value-Eigenschaft ändert</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die Variablen-Instanz ändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IVariable.IsEditingChanged-Ereignis der Variable ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.SetValueInternal(System.DateTime)">
      <summary>Setzt die Werte der Eigenschaften 'Value' und 'RawValue'. Das IsInSetValueInternal-Flag wird während des Vorgangs auf true gesetzt.</summary>
      <param name="value">Der neue Wert für die 'Value'-Eigenschaft. </param>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.DateTimeModeProperty">
      <summary>Bezeichnet die DateTimeMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.FormatDateProperty">
      <summary>Bezeichnet die FormatDate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.FormatTimeProperty">
      <summary>Bezeichnet die FormatTime-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.IsLimitMaxExceededProperty">
      <summary>Bezeichnet die IsLimitMaxExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.IsLimitMinExceededProperty">
      <summary>Bezeichnet die IsLimitMinExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.LimitMaxFormattedProperty">
      <summary>Bezeichnet die LimitMaxFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.LimitMaxProperty">
      <summary>Bezeichnet die LimitMax-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.LimitMinFormattedProperty">
      <summary>Bezeichnet die LimitMinFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.LimitMinProperty">
      <summary>Bezeichnet die LimitMin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.LocalizableUnitTextProperty">
      <summary>Bezeichnet die LocalizableUnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.UnitTextProperty">
      <summary>Bezeichnet die UnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.UseVariableLimitsProperty">
      <summary>Bezeichnet die UseVariableLimits-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.UseVariableUnitTextProperty">
      <summary>Bezeichnet die UseVariableUnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.ValueFormattedProperty">
      <summary>Bezeichnet die ValueFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DateTimeVarOut.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.DateTimeVarOut.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ DateTimeVarOut.</summary>
    </member>
    <member name="T:VisiWin.Controls.DecrementVariableAction">
      <summary>Action, die die angebene Variable um einen vorgegebenen Wert dekrementiert.</summary>
    </member>
    <member name="P:VisiWin.Controls.DecrementVariableAction.ReadFromDevice">
      <summary>Legt fest, woher der zu manipulierende Wert gelesen werden soll. True: synchrones Lesen aus dem Kommunikationskanal.False: Rückgabe des zuletzt gepufferten Wertes aus dem Clientcache oder dem Variablenkern.</summary>
    </member>
    <member name="P:VisiWin.Controls.DecrementVariableAction.Value">
      <summary>Schrittweite der Wertverminderung oder der (durch führendes "@"-Zeichen gekennzeichnete) Name einer anderen Prozessvariablen, deren Wert von der Prozessvariablen subtrahiert wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.DecrementVariableAction.VariableName">
      <summary>Bezeichner der zu manipulierenden Prozessvariablen. Die Prozessvariable kann über den Variablenauswahldialog gewählt oder über manuell in XAML angegeben werden (siehe "Syntax zum Zugriff auf Variablen").</summary>
    </member>
    <member name="M:VisiWin.Controls.DecrementVariableAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.DecrementVariableAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.DecrementVariableAction.ReadFromDeviceProperty">
      <summary>Bezeichnet die ReadFromDevice-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DecrementVariableAction.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.DecrementVariableAction.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.DecrementVariableAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ DecrementVariableAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.DesignAlarmClass">
      <summary>Dummy-Objekt: Gibt zur Designzeit Informationen einer Alarmklasse für die Alarmsteuerelemente an.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmClass.LocalizableText">
      <summary>Gibt die intern verwendete eindeutige Kennung des Indextextes zurück, der im Parameter "Text" verwendet wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmClass.Name">
      <summary>Gibt den Namen der Alarmklasse zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmClass.Text">
      <summary>Gibt den sprachumschaltbaren Text zur Alarmklasse in der aktiven Projektsprache zurück. </summary>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmClass.GetAlarmDefinitions">
      <summary>Gibt eine Liste mit allen Alarmdefinitionen zurück, die diese Klasse verwenden. </summary>
      <returns>Liste von 'IAlarmDefinition'-Instanzen, deren Parameter "Alarmklasse" auf diese Instanz verweisen.</returns>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmClass.GetStateInfo(VisiWin.Alarm.AlarmState)">
      <summary>Gibt die Darstellungsparameter zu einem Alarmzustand zurück. </summary>
      <returns>Darstellungsparameter, wie sie z.B. in der Alarmliste verwendet werden. </returns>
      <param name="State">Der gewünschte Alarmzustand.</param>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmClass.GetStateInfos">
      <summary>Gibt die Darstellungsparameter zu allen Alarmzuständen in dieser Klasse zurück. </summary>
      <returns>Liste der angeforderten Darstellungsparameter. </returns>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmClass.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ DesignAlarmClass.</summary>
    </member>
    <member name="T:VisiWin.Controls.DesignAlarmGroup">
      <summary>Dummy-Objekt: Gibt zur Designzeit Informationen einer Alarmgruppe für die Alarmsteuerelemente an.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmGroup.GroupTree">
      <summary>Gibt den vollständigen Bezeichner der Alarmgruppe zurück. Der vollständige Bezeichner beinhaltet in hierarchischer Reihenfolge die Namen aller übergeordneten Alarmgruppen bis hin zu der Gruppe, die durch das IAlarmGroup-Objekt repräsentiert wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmGroup.Image">
      <summary>Gibt das als Parameter "Symbol" festgelegte Bild der Alarmgruppe zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmGroup.LocalizableText">
      <summary>Gibt die intern verwendete eindeutige Kennung des sprachumschaltbaren Textes zurück, der als Parameter "Laufzeitname" für die Alarmgruppe projektiert wurde. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmGroup.Name">
      <summary>Name der Alarmgruppe. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmGroup.SubGroupNames">
      <summary>Liste mit den Namen der untergeordneten Alarmgruppen. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmGroup.Text">
      <summary>Gibt den Wert des Parameters "Laufzeitname" der Alarmgruppe in der aktuell in der Applikation eingestellten Sprache zurück. </summary>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmGroup.GetAlarmDefinitions">
      <summary>Gibt eine Liste mit allen Alarmdefinitionen dieser Gruppe zurück. </summary>
      <returns>Liste der abgefragten Alarmdefinitionen</returns>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmGroup.GetSubGroup(System.String)">
      <summary>Gibt das angegebene Untergruppenobjekt zurück. </summary>
      <returns>Ein IAlarmGroup, das die Informationen der Untergruppe enthält. </returns>
      <param name="groupName">Name der Untergruppe. </param>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmGroup.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ DesignAlarmGroup.</summary>
    </member>
    <member name="T:VisiWin.Controls.DesignAlarmItem">
      <summary>Dummy-Objekt: Gibt zur Designzeit Informationen eines Alarms für die Alarmsteuerelemente an.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.AcknowledgeTime">
      <summary>Gibt den Quittierungszeitstempel des Alarms zurück (wenn er quittiert wurde). </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.ActivationCounter">
      <summary>Gibt an, wie oft ein Alarm seit der Auslösung den reaktivierten Zustand eingenommen hat.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.ActivationTime">
      <summary>Gibt den Zeitpunkt des Auftretens des Alarms an (wann das Ereignisbit gesetzt wurde). </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.AlarmState">
      <summary>Gibt den Zustand des Alarms zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.AlarmStateText">
      <summary>Gibt den Wert des Parameters "Statustext" in der aktuell in der Applikation eingestellten Sprache zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.Class">
      <summary>Verweis auf das Objekt, das die vom Alarm verwendete Alarmklasse beschreibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.DeactivationTime">
      <summary>Gibt den Zeitpunkt des Zurücksetzens des Alarms an (wann der Alarm endgültig quittiert wurde). </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.Group">
      <summary>Verweis auf das Objekt, das die Gruppe beschreibt, in der der Alarm projektiert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.ID">
      <summary>Gibt die eindeutige numerische Kennung des Alarms aus der Projektdatenbank zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.LocalizableParam1">
      <summary>Gibt den projektierten Wert des alphanumerischen Parameters "Parameter1" zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.LocalizableText">
      <summary>Gibt die intern verwendete eindeutige Kennung des Indextextes zurück, der den sprachumschaltbaren Meldetext beschreibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.Machine">
      <summary>Gibt den Rechnernamen zurück, auf dem der Alarm quittiert wurde. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.Name">
      <summary>Gibt den Namen des Alarms zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.Param1">
      <summary>Gibt den Wert des alphanumerischen Parameters "Parameter1" an. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.Param2">
      <summary>Gibt den Wert des numerischen Parameters "Parameter2" an. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.Priority">
      <summary>Gibt die Priorität der Alarmdefinition zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.StateInfo">
      <summary>Gibt ein Objekt vom Typ IAlarmStateInfo zurück, das die Informationen zur Darstellung des Alarms für den aktuellen Zustand beschreibt. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.Tag">
      <summary>Ermöglicht dem Benutzer der Schnittstelle die Zwischenspeicherung eines beliebigen Objektes.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.Text">
      <summary>Gibt den Wert des Parameters "Meldetext" in der aktuell in der Applikation eingestellten Sprache zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmItem.User">
      <summary>Gibt den Anmeldenamen des Benutzers zurück, der den Alarm quittiert hat. </summary>
    </member>
    <member name="E:VisiWin.Controls.DesignAlarmItem.AlarmStateChanged">
      <summary>Wird ausgelöst, wenn sich der Zustand des Alarms durch eine Quittierung oder die Änderung des Ereignisvariablenwertes ändert. </summary>
      <param name="sender">Objekt vom Typ DesignAlarmItem, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.DesignAlarmItem.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ DesignAlarmItem, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.Acknowledge">
      <summary>Quittiert den Alarm. </summary>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.Clear(System.DateTime)">
      <summary>Deaktiviert den Alarm mit dem angegebenen Zeitstempel. </summary>
      <param name="dTimeStamp">Zeitstempel, der zur Deaktivierung gespeichert wird. </param>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.Clear">
      <summary>Deaktiviert den Alarm. Als Zeitstempel wird die aktuelle Systemzeit verwendet.</summary>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.GetAlarmDefinition">
      <summary>Gibt ein Objekt zurück, dass die zugehörige Alarmdefinition aus der Projektdatenbank beschreibt.</summary>
      <returns>Das Objekt, dass die zugehörige Definition aus der Projektdatenbank beschreibt. </returns>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.GetExtAlarmParam(System.UInt32,System.String)">
      <summary>Gibt den Wert eines freien Parameters zu einem über die ID angegebenen Alarm zurück. </summary>
      <returns>Wert des freien Parameters. Der Datentyp des Wertes ergibt sich aus den Einstellungen des freien Parameters in der Projektdatenbank.</returns>
      <param name="ID">ID des Alarms. </param>
      <param name="param">Name des freien Parameters. </param>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.GetExtAlarmParam(System.String,System.String)">
      <summary>Gibt den Wert eines freien Parameters zu einem über den Namen angegebenen Alarm zurück. </summary>
      <returns>Wert des freien Parameters. Der Datentyp des Wertes ergibt sich aus den Einstellungen des freien Parameters in der Projektdatenbank.</returns>
      <param name="strName">Name des Alarms. </param>
      <param name="param">Name des freien Parameters. </param>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.GetExtAlarmParam(System.String)">
      <summary>Gibt den Wert eines freien Parameters zum Alarm zurück. </summary>
      <returns>Wert des freien Parameters. Der Datentyp des Wertes ergibt sich aus den Einstellungen des freien Parameters in der Projektdatenbank. </returns>
      <param name="param">Name des freien Parameters. </param>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.GetExtParamInfo(System.String,System.Int32@,System.String@)">
      <summary>Gibt Informationen zu einem freien Parameter zurück. </summary>
      <returns>Datentyp des freien Parameters. </returns>
      <param name="param">Name des freien Parameters. </param>
      <param name="info">out-Parameter: Nach dem Methodenaufruf steht hier die "Verwendungszahl" des freien Parameters. </param>
      <param name="description">out-Parameter: Nach dem Methodenaufruf steht hier der "Kommentar" des freien Parameters.</param>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.NewAlarm">
      <summary>Aktiviert den Alarm. </summary>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmItem.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ DesignAlarmItem.</summary>
    </member>
    <member name="T:VisiWin.Controls.DesignAlarmStateInfo">
      <summary>Dummy-Objekt: Gibt zur Designzeit Informationen eines Alarmzustandes für die Alarmsteuerelemente an.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmStateInfo.BackColor">
      <summary>Hintergrundfarbe für den Zustand. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmStateInfo.ForeColor">
      <summary>Vordergrundfarbe (Textfarbe) für den Zustand.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmStateInfo.Image">
      <summary>Symbol für den Zustand. </summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmStateInfo.LocalizableText">
      <summary>Gibt die intern verwendete eindeutige Kennung des sprachumschaltbaren Textes zurück, der als Parameter "Statustext" projektiert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmStateInfo.Tag">
      <summary>Ermöglicht dem Benutzer der Schnittstelle die Zwischenspeicherung eines beliebigen Objektes.</summary>
    </member>
    <member name="P:VisiWin.Controls.DesignAlarmStateInfo.Text">
      <summary>Gibt den Wert des Parameters "Statustext" in der aktuell in der Applikation eingestellten Sprache zurück.</summary>
    </member>
    <member name="M:VisiWin.Controls.DesignAlarmStateInfo.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ DesignAlarmStateInfo.</summary>
    </member>
    <member name="T:VisiWin.Controls.ExitApplicationAction">
      <summary>Action, die das Projekt beendet und gegebenenfalls den Rechner neu bootet. </summary>
    </member>
    <member name="P:VisiWin.Controls.ExitApplicationAction.ForceShutdown">
      <summary>Hat nur eine Funktion in Kombination mit "ShutdownWindows= True". Zwingt das System zum Beenden anderer laufender Applikationen ohne Rückfrage, ob geöffnete Daten gegebenenfalls gespeichert werden sollen.</summary>
    </member>
    <member name="P:VisiWin.Controls.ExitApplicationAction.Reboot">
      <summary>Hat nur eine Funktion in Kombination mit "ShutdownWindows= True". Fordert das System nach dem Herunterfahren zum Neustart auf.</summary>
    </member>
    <member name="P:VisiWin.Controls.ExitApplicationAction.ShutdownWindows">
      <summary>Ist die Eigenschaft auf True gesetzt, wird nach dem Applikationsende der Rechner heruntergefahren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ExitApplicationAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.ExitApplicationAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.ExitApplicationAction.ForceShutdownProperty">
      <summary>Bezeichnet die ForceShutdown-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ExitApplicationAction.RebootProperty">
      <summary>Bezeichnet die Reboot-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ExitApplicationAction.ShutdownWindowsProperty">
      <summary>Bezeichnet die ShutdownWindows-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ExitApplicationAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ExitApplicationAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.Gauge">
      <summary>Steuerelement, das ein Zeigerinstrument mit Variablenanbindung als Kreisbogen darstellt.</summary>
    </member>
    <member name="M:VisiWin.Controls.Gauge.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.Gauge.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Gauge.</summary>
    </member>
    <member name="T:VisiWin.Controls.GaugeBase">
      <summary>Basisklasse für Steuerelemente, die ein Zeigerinstrument als Kreisbogen darstellen.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.AdditionalScalePoints">
      <summary>Legt eine Liste von Skalenpunkten fest, die zusätzlich in die Skala eingefügt werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.CentralAngle">
      <summary>Legt den Winkel fest, den das Kreissegment der Skala überspannt.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.Diameter">
      <summary>Gibt den Durchmesser des Instruments zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.EndAngle">
      <summary>Gibt den Endwinkel der Skala zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.InternalScalePoints">
      <summary>Gibt eine Liste aller gezeichneten Skalenwerte zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.LimitMaxVisibility">
      <summary>Legt fest, ob an der Position LimitMax der Skalentext vorhanden sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.LimitMinVisibility">
      <summary>Legt fest, ob an der Position LimitMin der Skalentext vorhanden sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.MajorLength">
      <summary>Legt die Länge der Hauptrasterlinien in der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.MajorThickness">
      <summary>Legt die Breite der Hauptrasterlinien in der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.MinorLength">
      <summary>Legt die Länge der Nebenrasterlinien in der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.MinorThickness">
      <summary>Legt die Breite der Nebenrasterlinien in der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.PointerAnimationDuration">
      <summary>Legt fest, wie lange der Zeiger benötigt, um in einer fließenden Bewegung zum neuen Wert zu laufen.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.PointerHeight">
      <summary>Gibt die Höhe des Zeigers zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.PointerOffset">
      <summary>Legt den Abstand der Zeigerspitze zum äußeren Rand des Skalenbalken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.PointerStyle">
      <summary>Legt ein Style-Objekt für den Zeiger im Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.PointerWidth">
      <summary>Gibt die Breite des Zeigers zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.ReferenceEndAngle">
      <summary>Gibt den Winkel zurück, bei dem der Referenzbereich (Eigenschaft ReferenceValue) endet.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.ReferenceStartAngle">
      <summary>Gibt den Winkel zurück, bei dem der Referenzbereich (Eigenschaft ReferenceValue) startet.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.ReferenceValueDistanceBrush">
      <summary>Legt den Pinsel fest, mit dem der Skalenbalken ausgehend vom Referenzwert bis zum aktuellen Variablenwert übermalt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.RulerBaseLineFill">
      <summary>Legt den Pinsel fest, mit dem der Skalenbalken gefüllt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.RulerBaseLineStroke">
      <summary>Legt den Pinsel fest, mit dem die Umrandung des Skalenbalken gemalt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.RulerBaseLineThickness">
      <summary>Legt die Breite das Skalenbalkens fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.RulerMajorLineBrush">
      <summary>Legt den Pinsel zum Zeichnen der Skalenlinien des Hauptrasters fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.RulerMinorLineBrush">
      <summary>Legt den Pinsel zum Zeichnen der Skalenlinien des Nebenrasters fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.ScaleDirection">
      <summary>Legt fest, ob die Skala im oder gegen den Uhrzeigersinn gezeichnet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.ScaleDisplayMode">
      <summary>Legt fest, welche Bestandteile der Skala (Balken, Werte, Rasterlinien) gezeichnet werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.ScaleTextBrush">
      <summary>Legt den Pinsel zum Zeichnen der Skalenwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.ScaleTextOffset">
      <summary>Legt den Abstand zwischen Skalenbalken und Skalenwerten fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.ScaleType">
      <summary>Legt fest, ob die Wertanzeige im Steuerelement linear oder logarithmisch erfolgt.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeBase.StartAngle">
      <summary>Legt den Startwinkel der Skala fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.CreateControlItems">
      <summary>Wird aufgerufen, wenn die visuellen Elemente des Steuerelementes in den VisualTree eingefügt werden müssen.</summary>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.CreateLimitControl(VisiWin.Controls.Limit)">
      <summary>Erzeugt ein neues Arc-Objekt aus dem gegebenen Limit-Objekt. </summary>
      <param name="scaleLimit">
      </param>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.CreateLimitControl(VisiWin.Controls.Limit,System.Object)">
      <summary>Erzeugt ein neues Arc-Objekt aus dem gegebenen Limit-Objekt. </summary>
      <returns>Das zurückzugebende Arc-Objekt oder null, wenn das Limit-Objekt null ist oder der Startwert im Limit-Objekt größer als der Endwert ist. </returns>
      <param name="scaleLimit">Das Limit-Objekt. </param>
      <param name="param">Optionaler Parameter, CreateLimitControls übergibt hier seinen Parameter param. </param>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.FormatScaleTextValue(System.Double,System.Int32)">
      <summary>Formatiert den übergebenen Wert als Skalentext. </summary>
      <returns>Der formatierte Wert.</returns>
      <param name="value">Der zu formatierende Wert. </param>
      <param name="decPlaces">Die Anzahl Nachkommastellen, die im Ergebnis enthalten sein sollen. </param>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.GetCircularScale">
      <summary>Gibt eine Referenz auf das zurzeit benutzte CircularScale-Objekt zurück. </summary>
      <returns>Die angeforderte Referenz.</returns>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.IsTextBlockArrangementValid">
      <summary>Gibt zurück ob sich Skalentextblöcke überschneiden.</summary>
      <returns>true, wenn keine der Skalentextblöcke sich überschneiden.</returns>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Wert der verknüpften Variablen ändert.</summary>
      <param name="e">Zusätzliche Informationen zur Wertänderung.</param>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.PropertyChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Methode zur Bearbeitung von Eigenschaftenänderungsereignissen. </summary>
      <param name="d">Das geänderte DependencyObject.</param>
      <param name="e">Das Ereignisargument. </param>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.UpdateGaugePointer(System.Double)">
      <summary>Bewegt das GaugePointer-Objekt zu dem Winkel, der dem gegebenen Wert entspricht. </summary>
      <param name="value">Der aktuelle Wert. </param>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.AdditionalScalePointsProperty">
      <summary>Bezeichnet die AdditionalScalePoints-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.AdditionalScalePointsPropertyKey">
      <summary>Bezeichnet den Schlüssel der AdditionalScalePoints-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.CentralAngleProperty">
      <summary>Bezeichnet die CentralAngle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.DiameterProperty">
      <summary>Bezeichnet die Diameter-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.EndAngleProperty">
      <summary>Bezeichnet die EndAngle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.LimitMaxVisibilityProperty">
      <summary>Bezeichnet die LimitMaxVisibility-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.LimitMinVisibilityProperty">
      <summary>Bezeichnet die LimitMinVisibility-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.MajorLengthProperty">
      <summary>Bezeichnet die MajorLength-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.MajorThicknessProperty">
      <summary>Bezeichnet die MajorThickness-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.MinorLengthProperty">
      <summary>Bezeichnet die MinorLength-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.MinorThicknessProperty">
      <summary>Bezeichnet die MinorThickness-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.PointerAnimationDurationProperty">
      <summary>Bezeichnet die PointerAnimationDuration-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.PointerHeightProperty">
      <summary>Bezeichnet die PointerHeight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.PointerOffsetProperty">
      <summary>Bezeichnet die PointerOffset-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.PointerStyleProperty">
      <summary>Bezeichnet die PointerStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.PointerWidthProperty">
      <summary>Bezeichnet die PointerWidth-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.ReferenceEndAngleProperty">
      <summary>Bezeichnet die ReferenceEndAngle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.ReferenceStartAngleProperty">
      <summary>Bezeichnet die ReferenceStartAngle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.ReferenceValueDistanceBrushProperty">
      <summary>Bezeichnet die ReferenceValueDistanceBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.RulerBaseLineFillProperty">
      <summary>Bezeichnet die RulerBaseLineFill-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.RulerBaseLineStrokeProperty">
      <summary>Bezeichnet die RulerBaseLineStroke-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.RulerBaseLineThicknessProperty">
      <summary>Bezeichnet die RulerBaseLineThickness-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.RulerMajorLineBrushProperty">
      <summary>Bezeichnet die RulerMajorLineBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.RulerMinorLineBrushProperty">
      <summary>Bezeichnet die RulerMinorLineBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.ScaleDirectionProperty">
      <summary>Bezeichnet die ScaleDirection-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.ScaleDisplayModeProperty">
      <summary>Bezeichnet die ScaleDisplayMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.ScaleTextBrushProperty">
      <summary>Bezeichnet die ScaleTextBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.ScaleTextOffsetProperty">
      <summary>Bezeichnet die ScaleTextOffset-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.ScaleTypeProperty">
      <summary>Bezeichnet die ScaleType-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeBase.StartAngleProperty">
      <summary>Bezeichnet die StartAngle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.GaugeBase.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ GaugeBase.</summary>
    </member>
    <member name="T:VisiWin.Controls.GaugeArc">
      <summary>Steuerelement, dass ein Teilstück eines elliptischen Ringes zur Darstellung eines Skalenbalkens in einem runden Zeigerinstrument zeichnet. </summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeArc.ArcThickness">
      <summary>legt die Breite des Ringes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeArc.EndAngle">
      <summary>Legt den Endwinkel des Bogens fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeArc.Fill">
      <summary>Legt den Pinsel für die Füllfarbe fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeArc.StartAngle">
      <summary>Legt den Startwinkel des Bogens fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeArc.Stroke">
      <summary>Legt den Pinsel für die Umrandung fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeArc.StrokeThickness">
      <summary>Legt die Breite des elliptischen Ringes fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.GaugeArc.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Zeichnet das Steuerelement neu.</summary>
      <param name="drawingContext">Grafisches Objekt, in das gezeichnet wird.</param>
    </member>
    <member name="M:VisiWin.Controls.GaugeArc.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.GaugeArc.ArcThicknessProperty">
      <summary>Bezeichnet die ArcThickness-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeArc.EndAngleProperty">
      <summary>Bezeichnet die EndAngle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeArc.FillProperty">
      <summary>Bezeichnet die Fill-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeArc.StartAngleProperty">
      <summary>Bezeichnet die StartAngle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeArc.StrokeProperty">
      <summary>Bezeichnet die Stroke-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeArc.StrokeThicknessProperty">
      <summary>Bezeichnet die StrokeThickness-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.GaugeArc.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ GaugeArc.</summary>
    </member>
    <member name="T:VisiWin.Controls.GaugePointer">
      <summary>Implementiert den Zeiger eines Zeigerinstrumentes. </summary>
    </member>
    <member name="M:VisiWin.Controls.GaugePointer.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.GaugePointer.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ GaugePointer.</summary>
    </member>
    <member name="T:VisiWin.Controls.GaugeScalePoint">
      <summary>Beschreibt einen Skalenpunkt. </summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeScalePoint.Angle">
      <summary>Beschreibt den Winkel des Skalenpunktes.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeScalePoint.DisplayValue">
      <summary>Legt einen Text zum Skalenpunkt fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeScalePoint.LineType">
      <summary>legt fest, ob dieser ScalePoint eine Hauptlinien-, eine Nebenlinien- oder keine Linienposition repräsentiert. </summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeScalePoint.Value">
      <summary>Beschreibt den Wert des Skalenpunktes.</summary>
    </member>
    <member name="P:VisiWin.Controls.GaugeScalePoint.Visibility">
      <summary>Legt die Sichtbarkeit des Skalenpunktes fest. </summary>
    </member>
    <member name="E:VisiWin.Controls.GaugeScalePoint.GaugeScalePointPropertyChangedEvent">
      <summary>Tritt ein, wenn der Wert einer Eigenschaft des GaugeScalePoint-Objekts geändert wurde. </summary>
      <param name="gaugeScalePoint">Objekt vom Typ GaugeScalePoint, das das Ereignis ausgelöst aht.</param>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs, das weitere Details zum Ereignis beinhaltet.</param>
    </member>
    <member name="M:VisiWin.Controls.GaugeScalePoint.Clone">
      <summary>Erzeugt eine Kopie dieser Instanz.</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWin.Controls.GaugeScalePoint.CompareTo(System.Object)">
      <summary>Führt einen Vergleich zwischen dieser Instanz und der übergebenen Instanz aus.</summary>
      <returns>0, wenn obj nicht null ist und die Eigenschaften Angle, Value, DisplayValue, und LineType von obj denen der aktuellen Instanz identisch sind. </returns>
      <param name="obj">Zu vergleichendes Objekt.</param>
    </member>
    <member name="M:VisiWin.Controls.GaugeScalePoint.CreateScalePoint(System.Double,System.Double,System.String,VisiWin.Controls.LineType)">
      <summary>Erezugt eine neue Instanz der GaugeScalePoint Klasse mit den übergebenen Werten.</summary>
      <returns>Eine neue Instanz der GaugeScalePoint Klasse.</returns>
      <param name="valuePar">Der Wert für diese Instanz in Grad. </param>
      <param name="anglePar">Der Winkel für diese Instanz in Grad. </param>
      <param name="displayValuePar">Der Text, der am Skalenpunkt dargestellt wird, oder null, wenn kein Wert dargestellt werden soll. </param>
      <param name="lineTypePar">true, wenn diese Instanz eine Hauptlinienposition repräsentiert. </param>
    </member>
    <member name="M:VisiWin.Controls.GaugeScalePoint.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.GaugeScalePoint.AngleProperty">
      <summary>Bezeichnet die Angle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeScalePoint.DisplayValueProperty">
      <summary>Bezeichnet die DisplayValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeScalePoint.LineTypeProperty">
      <summary>Bezeichnet die LineType-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeScalePoint.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GaugeScalePoint.VisibilityProperty">
      <summary>Bezeichnet die Visibility-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.GaugeScalePoint.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ GaugeScalePoint.</summary>
    </member>
    <member name="T:VisiWin.Controls.GaugeScalePointCollection">
      <summary>Repräsentiert eine Liste von ScalePoint-Objekten. </summary>
    </member>
    <member name="M:VisiWin.Controls.GaugeScalePointCollection.ContainsScalePoint(VisiWin.Controls.GaugeScalePoint)">
      <summary>Gibt zurück, ob das übergebene GaugeScalePoint-Objekt in der Liste enthalten ist.</summary>
      <returns>true, wenn das Objekt in der Liste bereits vorhanden ist, ansonsten false.</returns>
      <param name="item">Das zu überprüfende GaugeScalePoint-Objekt. </param>
    </member>
    <member name="M:VisiWin.Controls.GaugeScalePointCollection.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.GaugeScalePointCollection.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ GaugeScalePointCollection.</summary>
    </member>
    <member name="T:VisiWin.Controls.GroupBox">
      <summary>Steuerelement, das einen Container mit sprachumschaltbarer Titelzeile darstellt.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.Authorization">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben und das Steuerelement sichtbar oder aktiv.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit. </summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.BlinkService">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn IsBlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.BlinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.HeaderText">
      <summary>Legt den Beschriftungstext fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. </summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.LanguageService">
      <summary>Gibt einen Verweis auf den intern verwendeten LanguageService zum Lesen und Überwachen sprachumschaltbarer Texte zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.LocalizableHeaderText">
      <summary>Legt den Bezeicher eines Textes aus der Sprachumschaltung fest, der als Beschriftung für das Containerelement in der aktuell aktiven Projektsprache angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.LocalizedHeaderText">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die LocalizableHeaderText-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.GroupBox.UserManagementService">
      <summary>Gibt einen Verweis auf den intern verwendeten UserManagementService zurück.</summary>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.InitializeBlinkService">
      <summary>Wird ausgeführt, um den BlinkService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.InitializeUserManagementService">
      <summary>Wird aufgerufen, um den UserManagementService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnAuthorizationChanged(VisiWin.UserManagement.AuthorizationEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Freigabestatus (Eigenschaft IsAuthorized) geändert hat.</summary>
      <param name="e">Objekt vom Typ AuthorizationEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnAuthorizationRightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die AuthorizationRight-Eigenschaft geändert hat. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnBlinkCycleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die BlinkCycle-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnBlinkTimerDoBlink(VisiWin.Blink.BlinkEventArgs)">
      <summary>Wird ausgeführt, wenn sich die Blinkphase ändert.</summary>
      <param name="e">Objekt vom Typ BlinkEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnCoerceHeaderText(System.Object)">
      <summary>Wird aufgerufen, wenn die HeaderText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von HeaderText</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnCoerceIsAuthorized(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAuthorized-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAuthorized</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnCoerceIsEnabled(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEnabled-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEnabled</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnCoerceVisibility(System.Object)">
      <summary>Wird aufgerufen, wenn die Visibility-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Visibility</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnIsBlinkEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die IsBlinkEnabled-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die aktuell im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnLocalizableHeaderTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LocalizableHeaderText-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnLocalizedHeaderTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text des zugehörigen LocalizedText-Objekt ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.OnUnloaded">
      <summary>Wird ausgeführt, wenn das Unloaded-Ereignis ausgeführt wird.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.CornerRadiusProperty">
      <summary>Bezeichnet die CornerRadius-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.HeaderTextProperty">
      <summary>Bezeichnet die HeaderText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.GroupBox.LocalizableHeaderTextProperty">
      <summary>Bezeichnet die LocalizableHeaderText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.GroupBox.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ GroupBox.</summary>
    </member>
    <member name="T:VisiWin.Controls.HideViewAction">
      <summary>Action, die eine View ausblendet.</summary>
    </member>
    <member name="P:VisiWin.Controls.HideViewAction.F10Handled">
      <summary>Legt fest, ob das F10-Tastaturereignis nach der Bearbeitung weitergereicht wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.HideViewAction.Key">
      <summary>Gibt eine Taste an, die zusammen mit der ModifierKeys-Eigenschaft den Shortcut zum Auslösen der Action über die Tastatur bildet. </summary>
    </member>
    <member name="P:VisiWin.Controls.HideViewAction.ModifierKeys">
      <summary>Legt eine oder mehrere Umschalttasten fest, die zusammen mit der Key-Eigenschaft den Shortcut zum Auslösen der Action über die Tastatur bildet. </summary>
    </member>
    <member name="P:VisiWin.Controls.HideViewAction.RegionName">
      <summary>Name der Region, in der die View ausgeblendet werden soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.HideViewAction.ViewName">
      <summary>Name der View, die ausgeblendet werden soll. </summary>
    </member>
    <member name="M:VisiWin.Controls.HideViewAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.HideViewAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="M:VisiWin.Controls.HideViewAction.OnDetaching">
      <summary>Wird aufgerufen, wenn die Aktion vom "AssociatedObject" getrennt wird. Der Aufruf erfolgt vor dem eigentlichen Trennvorgang. </summary>
    </member>
    <member name="F:VisiWin.Controls.HideViewAction.KeyProperty">
      <summary>Bezeichnet die Key-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.HideViewAction.ModifierKeysProperty">
      <summary>Bezeichnet die ModifierKeys-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.HideViewAction.RegionNameProperty">
      <summary>Bezeichnet die RegionName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.HideViewAction.ViewNameProperty">
      <summary>Bezeichnet die ViewName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.HideViewAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ HideViewAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.IncrementVariableAction">
      <summary>Action, die die angebene Variable um einen vorgegebenen Wert inkrementiert.</summary>
    </member>
    <member name="P:VisiWin.Controls.IncrementVariableAction.ReadFromDevice">
      <summary>Legt fest, woher der zu manipulierende Wert gelesen werden soll. True: synchrones Lesen aus dem Kommunikationskanal.False: Rückgabe des zuletzt gepufferten Wertes aus dem Clientcache oder dem Variablenkern.</summary>
    </member>
    <member name="P:VisiWin.Controls.IncrementVariableAction.Value">
      <summary>Schrittweite der Werterhöhung oder der (durch führendes "@"-Zeichen gekennzeichnete) Name einer anderen Prozessvariablen, deren Wert zur Prozessvariablen addiert wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.IncrementVariableAction.VariableName">
      <summary>Bezeichner der zu manipulierenden Prozessvariablen. Die Prozessvariable kann über den Variablenauswahldialog gewählt oder über manuell in XAML angegeben werden (siehe "Syntax zum Zugriff auf Variablen").</summary>
    </member>
    <member name="M:VisiWin.Controls.IncrementVariableAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.IncrementVariableAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.IncrementVariableAction.ReadFromDeviceProperty">
      <summary>Bezeichnet die ReadFromDevice-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IncrementVariableAction.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IncrementVariableAction.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.IncrementVariableAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ IncrementVariableAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.IndexLabel">
      <summary>Steuerelement zur Darstellung eines über einen Variablenwert umgeschalteten Textes aus der Sprachumschaltung.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.CanRecipeEdit">
      <summary>Legt fest, ob der Variablenwert über dieses Steuerelement im Rezeptpuffer bearbeitet werden kann. </summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.Index">
      <summary>Legt den Index zur Auswahl des anzuzeigenden Textes fest, oder gibt ihn zurück, wenn im Steuerelement eine Verknüpfung zu einer Prozessvariablen über die Eigenschaft 'VariableName' hergestellt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.IsAttached">
      <summary>Gibt zurück, ob die Variable beim Variablenkern über AttachVariable angebunden wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.IsAttaching">
      <summary>Gibt zurück ob die in VariableName angegebene Prozessvariable gerade angemeldet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.IsBound">
      <summary>Gibt an, ob das Steuerelement über die VariableName-Eigenschaft mit einer gültigen Prozessvariablen verknüpft ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.IsDeferredActivationEnabled">
      <summary>Legt fest, ob die verzögerte Variablenaktivierung für dieses Steuerelement angeschaltet sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.IsQualityGood">
      <summary>Gibt zurück, ob die Statusinformationen (Quality-Flag) der verknüpften Prozessvariablen eine fehlerfreie Übertragung signalisieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.IsRecipeEditing">
      <summary>Gibt zurück, ob der Wert der Variablen aktuell über den Rezeptpuffer bezogen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.IsVariableValid">
      <summary>Gibt zurück, ob die in VariableName angegebene Prozessvariable gültig ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.LabelText">
      <summary>Holt oder setzt den Beschreibungstext.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.LocalizableLabelText">
      <summary>Legt den Bezeichner eines sprachumschaltbaren Textes fest, dessen Inhalt zur Laufzeit auf die LabelText-Eigenschaft geschrieben wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.LocalizedLabelText">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die LabelText-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.Range">
      <summary>Legt fest, zwischen wievielen Texten umgeschaltet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.UseVariableText">
      <summary>Legt fest, dass in die LabelText-Eigenschaft automatisch der mit der Variablen verknüpfte sprachumschaltbare Text in der aktiven Projektsprache geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.Variable">
      <summary>Gibt einen Verweis auf den intern verwendeten Variable-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.VariableComment">
      <summary>Gibt den Kommentar zur verknüpften Prozessvariablen aus der Projektdatenbank zurück. Die Prozessvariable wird in VariableName festgelegt. </summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.VariableName">
      <summary>Legt den Namen der verknüpften Prozessvariablen fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.VariableService">
      <summary>Gibt einen Verweis auf das intern verwendete Objekt vom Typ IVariableService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.VariableText">
      <summary>Gibt den sprachumschaltbaren Text in der aktuellen Projektsprache zurück, der in der Projektdatenbank für die Variablendefinition festgelegt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.IndexLabel.VariableValueMode">
      <summary>Legt fest, wie der Variablenwert verwendet werden soll, um den Textschlüssel zusammenzusetzen.</summary>
    </member>
    <member name="E:VisiWin.Controls.IndexLabel.ValueChanged">
      <summary>Wird ausgelöst, sobald sich der Wert der in VariableName zugeordneten Prozessvariablen ändert. </summary>
      <param name="sender">Objekt vom Typ IndexLabel, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.AttachVariable(System.Nullable{System.Boolean})">
      <summary>Meldet die Variable beim Variablenkern zur Übertragung an. Das Ergebnis der operation wird in der IsAttached-Eigenschaft angezeigt. </summary>
      <param name="useDeferredActivation">Optionale Angabe, ob die Ausführung der Anmeldung über einen Dispatcher (wartet so lange bis ggf. weitere Anmeldeanfragen zeitnah eintreffen) erfolgen soll. Keine Angabe bedeutet: Für useDeferredActivation wird der Wert aus der Projektkonfiguration verwendet (®Optimierung der Variablenan- /abmeldungen). </param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.DetachVariable">
      <summary>Meldet die Variable beim Variablenkern ab. </summary>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss.</summary>
      <returns>Der aus Value ermittelte Wert.</returns>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.InitializeLocalizedLabelText">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedLabelText-Objekt instanziiert werden muss. </summary>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.InitializeVariableService">
      <summary>Wird ausgeführt, wenn der VariableService initialisiert wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCanRecipeEditChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der CanRecipeEdit-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCoerceIsAttached(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAttached-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAttached</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCoerceIsBound(System.Object)">
      <summary>Wird aufgerufen, wenn die IsBound-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsBound</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCoerceIsQualityGood(System.Object)">
      <summary>Wird aufgerufen, wenn die IsQualityGood-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsQualityGood</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCoerceIsRecipeEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsRecipeEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsRecipeEditing</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCoerceIsVariableValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsVariableValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsVariableValid</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCoerceLabelText(System.Object)">
      <summary>Wird aufgerufen, wenn die LabelText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LabelText</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCoerceText(System.Object)">
      <summary>Wird aufgerufen, wenn die Text-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Text</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCoerceVariableComment(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableComment-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableComment</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnCoerceVariableText(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableText</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnIndexChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Index-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnLocalizableLabelTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableLabelText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnLocalizedLabelTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text des zugehörigen LocalizedLabelText-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnRangeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Range-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnUnloaded">
      <summary>Wird aufgerufen, wenn das Unloaded-Ereignis auftritt. </summary>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnUseVariableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die intern verwendete IVariable-Instanz (Eigenschaft Variable) ändert. </summary>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IsEditingChanged-Ereignis in der intern verwendeten Variableninstanz (Eigenschaft Variable) ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnVariableNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Eigenschaft VariableName ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich eine Eigenschaft in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) ändert.</summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.OnVariableValueModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der VariableValueMode-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.CanRecipeEditProperty">
      <summary>Bezeichnet die CanRecipeEdit-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.IndexProperty">
      <summary>Bezeichnet die Index-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.IsAttachedProperty">
      <summary>Bezeichnet die IsAttached-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.IsBoundProperty">
      <summary>Bezeichnet die IsBound-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.IsDeferredActivationEnabledProperty">
      <summary>Bezeichnet die IsDeferredActivationEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.IsQualityGoodProperty">
      <summary>Bezeichnet die IsQualityGood-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.IsRecipeEditingProperty">
      <summary>Bezeichnet die IsRecipeEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.IsVariableValidProperty">
      <summary>Bezeichnet die IsVariableValid-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.LabelTextProperty">
      <summary>Bezeichnet die LabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.LocalizableLabelTextProperty">
      <summary>Bezeichnet die LocalizableLabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.RangeProperty">
      <summary>Bezeichnet die Range-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.UseVariableTextProperty">
      <summary>Bezeichnet die UseVariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.VariableCommentProperty">
      <summary>Bezeichnet die VariableComment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.VariableTextProperty">
      <summary>Bezeichnet die VariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.IndexLabel.VariableValueModeProperty">
      <summary>Bezeichnet die VariableValueMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.IndexLabel.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ IndexLabel.</summary>
    </member>
    <member name="T:VisiWin.Controls.Label">
      <summary>Steuerelement, das einen Text aus der Sprachumschaltung darstellt. </summary>
    </member>
    <member name="P:VisiWin.Controls.Label.Authorization">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.Label.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.Label.BlinkService">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn BlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.BlinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. Im Steuerelement wird über die AuthorizationRight-Eigenschaft der Name eines Rechtes angegeben. Beinhaltet die Gruppe des angemeldeten Benutzers eine verknüpfung zum hier angegebenen Recht, gibt die IsAuthorized-Eigenschaft 'true' zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.Label.LanguageService">
      <summary>Gibt einen Verweis auf den intern verwendeten LanguageService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.LocalizableText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit wird der Text in der aktuellen Projektsprache auf die Text-Eigenschaft geschrieben.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.LocalizedText">
      <summary>Gibt eine Referenz auf das ILocalizedText-Objekt zurück, das den in LocalizableText angegebenen Text aus der Sprachumschaltung liest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.Symbol">
      <summary>Legt über eine Ressourcenbindung die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.SymbolHorizontalAlignment">
      <summary>Legt die horizontale Ausrichtung (links, mitte, rechts) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.SymbolMargin">
      <summary>Legt den Abstand der Grafik zum Rand des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.SymbolResourceKey">
      <summary>Legt über die Angabe eines Ressourcenschlüssels die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.SymbolVerticalAlignment">
      <summary>Legt die vertikale Ausrichtung (oben, mitte, unten) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.Text">
      <summary>Legt einen festen, nicht sprachumschalbaren Text fest, der im Steuerelement angezeigt wird, wenn keine Angabe in LocalizedText vorgenommen wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Label.UserManagementService">
      <summary>Gibt einen Verweis auf den intern verwendeten UserManagementService zurück.</summary>
    </member>
    <member name="E:VisiWin.Controls.Label.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ Label, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.InitializeBlinkService">
      <summary>Wird ausgeführt, um den BlinkService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.Label.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.Label.InitializeLocalizedText">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedText-Objekt instanziiert werden muss. </summary>
    </member>
    <member name="M:VisiWin.Controls.Label.InitializeUserManagementService">
      <summary>Wird aufgerufen, um den UserManagementService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.Label.OnAuthorizationChanged(VisiWin.UserManagement.AuthorizationEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Freigabestatus (Eigenschaft IsAuthorized) geändert hat.</summary>
      <param name="e">Objekt vom Typ AuthorizationEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnAuthorizationRightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der AuthorizationRight-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnBlinkCycleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der BlinkCycle-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnBlinkTimerDoBlink(VisiWin.Blink.BlinkEventArgs)">
      <summary>Wird zyklisch im Blinktakt aufgerufen, wenn das Steuerelement blinkt.</summary>
      <param name="e">Objekt vom Typ BlinkEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnCoerceIsAuthorized(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAuthorized-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAuthorized</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnCoerceIsEnabled(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEnabled-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEnabled</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnCoerceText(System.Object)">
      <summary>Wird aufgerufen, wenn die Text-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Text</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnCoerceVisibility(System.Object)">
      <summary>Wird aufgerufen, wenn die Visibility-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Visibility</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnIsBlinkEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der IsBlinkEnabled-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.Label.OnLocalizableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnLocalizedTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedText-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnPropertyChanged(System.String)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert. </summary>
      <param name="propertyName">Name der geänderten Eigenschaft. </param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Label.OnUnloaded">
      <summary>Wird aufgerufen, wenn das Unloaded-Ereignis auftritt. </summary>
    </member>
    <member name="F:VisiWin.Controls.Label.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.CornerRadiusProperty">
      <summary>Bezeichnet die CornerRadius-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.LocalizableTextProperty">
      <summary>Bezeichnet die LocalizableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.SymbolHorizontalAlignmentProperty">
      <summary>Bezeichnet die SymbolHorizontalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.SymbolMarginProperty">
      <summary>Bezeichnet die SymbolMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.SymbolResourceKeyProperty">
      <summary>Bezeichnet die SymbolResourceKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.SymbolVerticalAlignmentProperty">
      <summary>Bezeichnet die SymbolVerticalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.TextProperty">
      <summary>Bezeichnet die Text-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Label.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.Label.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Label.</summary>
    </member>
    <member name="T:VisiWin.Controls.Key">
      <summary>Steuerelement, das einen prozessvariablenwertgebundenen Taster/ Schalter repräsentiert</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.BitNumber">
      <summary>Gibt die Nummer des Bits in der Prozessvariablen an, das durch Bedienung des Steuerelementes umgeschaltet werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.CanRecipeEdit">
      <summary>Legt fest, ob der Variablenwert über dieses Steuerelement im Rezeptpuffer bearbeitet werden kann</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsAttached">
      <summary>Gibt an, ob die gültige Prozessvariablen am Server angebunden ist und ChangeEvents erhält.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsAttaching">
      <summary>Gibt zurück ob die in VariableName angegebene Prozessvariable gerade angemeldet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsBound">
      <summary>Bezeichnet die IsBound-Abhängigkeitseigenschaft</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsChecked">
      <summary>Gibt zurück, ob das zugehörige Bit in der Prozessvariablen gesetzt ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsDeferredActivationEnabled">
      <summary>Legt fest, ob die verzögerte Variablenaktivierung für dieses Steuerelement angeschaltet sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsEditControl">
      <summary>Legt fest, ob das Steuerelement den geänderten Variablenwert als Editierkopie puffert oder ob der Wert direkt in den Variablenkern geschrieben wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsEditing">
      <summary>Gibt an, ob sich die gültige Prozessvariable aktuell editiert wird</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsQualityGood">
      <summary>Gibt zurück, ob die Statusinformationen (Quality-Flag) der verknüpften Prozessvariablen eine fehlerfreie Übertragung signalisieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsRecipeEditing">
      <summary>Gibt zurück, ob der Wert der Variablen aktuell über den Rezeptpuffer bezogen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.IsVariableValid">
      <summary>Gibt zurück, ob die in VariableName angegebene Prozessvariable gültig ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.KeyMode">
      <summary>Legt die Betriebsart (Taster, Ein-, Aus- oder Umschalter) fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.LocalizableTextOff">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der als Beschreibung in die Text-Eigenschaft geschrieben wird, wenn das Steuerelement im "Aus"-Zustand (IsChecked= false) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.LocalizableTextOn">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der als Beschreibung in die Text-Eigenschaft geschrieben wird, wenn das Steuerelement im "Ein"-Zustand (IsChecked= true) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.LocalizedTextOff">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die TextOff-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.Key.LocalizedTextOn">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die TextOn-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.Key.ResetValue">
      <summary>Trigger zum Beenden des Editiermodus mit anschließendem Verwerfen des geänderten Wertes.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.ResetValueCommand">
      <summary>Gibt ein Command-Objekt zurück, das beim Ausführen den Editiermodus beendet und den im Steuerelement bearbeiteten Wert verwirft.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.SymbolOff">
      <summary>Legt den Inhalt des Symbols fest, der in die Symbol-Eigenschaft geschrieben wird, wenn das Steuerelement im "Aus"-Zustand (IsChecked= false) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.SymbolOn">
      <summary>Legt den Inhalt des Symbols fest, der in die Symbol-Eigenschaft geschrieben wird, wenn das Steuerelement im "Aus"-Zustand (IsChecked= false) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.TextOff">
      <summary>Legt einen Text fest, der als Beschreibung in die Content-Eigenschaft geschrieben wird, wenn das Steuerelement im "Aus"-Zustand (IsChecked= false) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.TextOn">
      <summary>Legt einen Text fest, der als Beschreibung in die Content-Eigenschaft geschrieben wird, wenn das Steuerelement im "Ein"-Zustand (IsChecked= true) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.UseVariableText">
      <summary>Legt fest, dass in die LabelText-Eigenschaft automatisch der mit der Variablen verknüpfte sprachumschaltbare Text in der aktiven Projektsprache geladen wird</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.Variable">
      <summary>Gibt einen Verweis auf die intern verwendete Variableninstanz zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.VariableComment">
      <summary>Gibt den Kommentar zur verknüpften Prozessvariablen aus der Projektdatenbank zurück. Die Prozessvariable wird in VariableName festgelegt.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.VariableName">
      <summary>Legt den Bezeichner (Kanalname.Variablenalias) der verknüpften Prozessvariablen fest</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.VariableService">
      <summary>Gibt einen Verweis auf das intern verwendete Objekt vom Typ IVariableService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.VariableText">
      <summary>Gibt den sprachumschaltbaren Text in der aktuellen Projektsprache zurück, der in der Projektdatenbank für die Variablendefinition festgelegt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.WriteValue">
      <summary>Trigger zum Beenden des Editiermodus mit anschließendem Schreiben des geänderten Wertes zum Variablenkern.</summary>
    </member>
    <member name="P:VisiWin.Controls.Key.WriteValueCommand">
      <summary>Gibt ein Command-Objekt zurück, das beim Ausführen den Editiermodus beendet und den Wert zum Variablenkern herunterschreibt.</summary>
    </member>
    <member name="E:VisiWin.Controls.Key.ValueChanged">
      <summary>Wird ausgelöst, sobald sich der Wert der in VariableName zugeordneten Prozessvariablen ändert. </summary>
      <param name="sender">Objekt vom Typ Key, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.AttachVariable(System.Nullable{System.Boolean})">
      <summary>Meldet die Variable beim Variablenkern zur Übertragung an. Das Ergebnis der operation wird in der IsAttached-Eigenschaft angezeigt. </summary>
      <param name="useDeferredActivation">Optionale Angabe, ob die Ausführung der Anmeldung über einen Dispatcher (wartet so lange bis ggf. weitere Anmeldeanfragen zeitnah eintreffen) erfolgen soll. Keine Angabe bedeutet: Für useDeferredActivation wird der Wert aus der Projektkonfiguration verwendet (®Optimierung der Variablenan- /abmeldungen). </param>
    </member>
    <member name="M:VisiWin.Controls.Key.DetachVariable">
      <summary>Meldet die Variable beim Variablenkern ab. </summary>
    </member>
    <member name="M:VisiWin.Controls.Key.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss.</summary>
      <returns>Der aus Value ermittelte Wert.</returns>
    </member>
    <member name="M:VisiWin.Controls.Key.InitializeLocalizedTextOff">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedTextOff-Objekt instanziiert werden muss. </summary>
    </member>
    <member name="M:VisiWin.Controls.Key.InitializeLocalizedTextOn">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedTextOn-Objekt instanziiert werden muss. </summary>
    </member>
    <member name="M:VisiWin.Controls.Key.InitializeVariableService">
      <summary>Wird ausgeführt, wenn der VariableService initialisiert wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCanRecipeEditChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der CanRecipeEdit-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnClick">
      <summary>Wird aufgerufen, wenn auf das Steuerelement geklickt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceIsAttached(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAttached-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAttached</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceIsBound(System.Object)">
      <summary>Wird aufgerufen, wenn die IsBound-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsBound</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceIsEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEditing</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceIsQualityGood(System.Object)">
      <summary>Wird aufgerufen, wenn die IsQualityGood-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsQualityGood</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceIsRecipeEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsRecipeEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsRecipeEditing</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceIsVariableValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsVariableValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsVariableValid</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceLabelText(System.Object)">
      <summary>Wird aufgerufen, wenn die LabelText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LabelText</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceText(System.Object)">
      <summary>Wird aufgerufen, wenn die Text-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Text</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceTextOff(System.Object)">
      <summary>Wird aufgerufen, wenn die TextOff-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextOff</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceTextOn(System.Object)">
      <summary>Wird aufgerufen, wenn die TextOn-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextOn</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceVariableComment(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableComment-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableComment</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnCoerceVariableText(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableText</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnIsCheckedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der IsChecked-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der IsPressed-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.Key.OnLocalizableTextOffChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableTextOff-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnLocalizableTextOnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableTextOn-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnLocalizedTextOffChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedTextOff-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnLocalizedTextOnChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedTextOn-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnSymbolOffChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der SymbolOff-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnSymbolOnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der SymbolOn-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnTextOffChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextOff-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnTextOnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextOn-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnUnloaded">
      <summary>Wird aufgerufen, wenn das Unloaded-Ereignis auftritt. </summary>
    </member>
    <member name="M:VisiWin.Controls.Key.OnUseVariableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die intern verwendete IVariable-Instanz (Eigenschaft Variable) ändert. </summary>
    </member>
    <member name="M:VisiWin.Controls.Key.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IsEditingChanged-Ereignis in der intern verwendeten Variableninstanz (Eigenschaft Variable) ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.Key.OnVariableNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Eigenschaft VariableName ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich eine Eigenschaft in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) ändert.</summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.SetVariableValue(System.Object,System.Boolean)">
      <summary>Setzt den Variablenwert und aktiviert optional den Editiermodus der Variable. </summary>
      <param name="newValue">Neuer Wert der Variablen. </param>
      <param name="keepEditing">Wert, der angibt, ob der Editiermodus gestartet werden soll:True: Der neue Wert wird im Steuerelement übernommen, wird aber erst zum Variablenkern geschickt, wenn StopEdit aufgerufen wird.False: Der neue Wert wird im Steuerelement übernommen und direkt zum Variablenkern geschickt.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.SetVariableValue(System.Int32,System.Boolean,System.Boolean)">
      <summary>Setzt den Variablenwert und aktiviert optional den Editiermodus der Variable. </summary>
      <param name="bitNumber">(0-indizierter) Index des zu setzenden Bits.</param>
      <param name="newValue">Neuer Wert der Variablen. </param>
      <param name="keepEditing">Wert, der angibt, ob der Editiermodus gestartet werden soll:True: Der neue Wert wird im Steuerelement übernommen, wird aber erst zum Variablenkern geschickt, wenn StopEdit aufgerufen wird.False: Der neue Wert wird im Steuerelement übernommen und direkt zum Variablenkern geschickt.</param>
    </member>
    <member name="M:VisiWin.Controls.Key.StartEdit">
      <summary>Startet den Editiermodus.</summary>
    </member>
    <member name="M:VisiWin.Controls.Key.StopEdit(System.Boolean)">
      <summary>Stoppt den Editiermodus. </summary>
      <param name="transmitEditResult">true: wenn der Wert aus dem Steuerelement in die verknüpfte Prozessvariable geschrieben werden soll. false: wenn der Wert aus dem Steuerelement verworfen und der aktuelle Prozessvariablenwert aus dem Variablenkern in das Steuerelement geschrieben werden soll.</param>
    </member>
    <member name="F:VisiWin.Controls.Key.BitNumberProperty">
      <summary>Bezeichnet die BitNumber-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.CanRecipeEditProperty">
      <summary>Bezeichnet die CanRecipeEdit-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.IsAttachedProperty">
      <summary>Bezeichnet die IsAttached-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.IsBoundProperty">
      <summary>Bezeichnet die IsBound-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.IsCheckedProperty">
      <summary>Bezeichnet die IsChecked-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.IsDeferredActivationEnabledProperty">
      <summary>Bezeichnet die IsDeferredActivationEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.IsEditControlProperty">
      <summary>Bezeichnet die IsEditControl-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.IsEditingProperty">
      <summary>Bezeichnet die IsEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.IsQualityGoodProperty">
      <summary>Bezeichnet die IsQualityGood-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.IsRecipeEditingProperty">
      <summary>Bezeichnet die IsRecipeEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.IsVariableValidProperty">
      <summary>Bezeichnet die IsVariableValid-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.KeyModeProperty">
      <summary>Bezeichnet die KeyMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.LocalizableTextOffProperty">
      <summary>Bezeichnet die LocalizableTextOff-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.LocalizableTextOnProperty">
      <summary>Bezeichnet die LocalizableTextOn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.ResetValueProperty">
      <summary>Bezeichnet die ResetValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.SymbolOffProperty">
      <summary>Bezeichnet die SymbolOff-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.SymbolOnProperty">
      <summary>Bezeichnet die SymbolOn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.TextOffProperty">
      <summary>Bezeichnet die TextOff-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.TextOnProperty">
      <summary>Bezeichnet die TextOn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.UseVariableTextProperty">
      <summary>Bezeichnet die UseVariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.VariableCommentProperty">
      <summary>Bezeichnet die VariableComment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.VariableTextProperty">
      <summary>Bezeichnet die VariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Key.WriteValueProperty">
      <summary>Bezeichnet die WriteValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.Key.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Key.</summary>
    </member>
    <member name="T:VisiWin.Controls.LanguageChangeRadioButton">
      <summary>Steuerelement, das eine Schaltfläche zum Wechsel der Sprache innerhalb einer Schaltflächengruppe darstellt. Zu einem Zeitpunkt kann immer nur eine Schaltfläche der Gruppe aktiv sein. </summary>
    </member>
    <member name="P:VisiWin.Controls.LanguageChangeRadioButton.LCID">
      <summary>Legt die LCID der Sprache fest, zu der gewechselt werden soll, wenn auf die Schaltfläche geklickt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.LanguageChangeRadioButton.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen. </summary>
    </member>
    <member name="M:VisiWin.Controls.LanguageChangeRadioButton.OnClick">
      <summary>Wird aufgerufen, wenn auf das Steuerelement geklickt wird.</summary>
    </member>
    <member name="F:VisiWin.Controls.LanguageChangeRadioButton.LCIDProperty">
      <summary>Bezeichnet die LCID-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.LanguageChangeRadioButton.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ LanguageChangeRadioButton.</summary>
    </member>
    <member name="T:VisiWin.Controls.RadioButton">
      <summary>Steuerelement, das eine Optionenschaltfläche innerhalb einer Gruppe darstellt. Zu einem Zeitpunkt kann immer nur eine Optionenschaltfläche der Gruppe aktiv sein. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.Authorization">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.BitNumber">
      <summary>Legt den (0-indizierten) Index des Bits fest, das in der Prozessvariablen (Eigenschaft VariableName) gesetzt oder zurückgesetzt werden soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.BlinkService">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn BlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.BlinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.CanRecipeEdit">
      <summary>Legt fest, ob der Variablenwert über dieses Steuerelement im Rezeptpuffer bearbeitet werden kann. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsAttached">
      <summary>Gibt zurück, ob die Variable beim Variablenkern über AttachVariable angebunden wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsAttaching">
      <summary>Gibt zurück ob die in VariableName angegebene Prozessvariable gerade angemeldet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. Im Steuerelement wird über die AuthorizationRight-Eigenschaft der Name eines Rechtes angegeben. Beinhaltet die Gruppe des angemeldeten Benutzers eine verknüpfung zum hier angegebenen Recht, gibt die IsAuthorized-Eigenschaft 'true' zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsBound">
      <summary>Gibt an, ob das Steuerelement über die VariableName-Eigenschaft mit einer gültigen Prozessvariablen verknüpft ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsDeferredActivationEnabled">
      <summary>Legt fest, ob die verzögerte Variablenaktivierung für dieses Steuerelement angeschaltet sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsEditControl">
      <summary>Legt fest, ob das Steuerelement den geänderten Variablenwert als Editierkopie puffert oder ob der Wert direkt in den Variablenkern geschrieben wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsEditing">
      <summary>Gibt zurück ob sich die Variable im Editiermodus befindet. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsInSetCheckedStateInternal">
      <summary>Gibt zurück, ob die IsChecked-Eigenschaft durch eine interne Operation in einem Optionenfeld umgesetzt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsQualityGood">
      <summary>Gibt zurück, ob die Statusinformationen (Quality-Flag) der verknüpften Prozessvariablen eine fehlerfreie Übertragung signalisieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsRecipeEditing">
      <summary>Gibt zurück, ob der Wert der Variablen aktuell über den Rezeptpuffer bezogen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.IsVariableValid">
      <summary>Gibt zurück, ob die in VariableName angegebene Prozessvariable gültig ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LabelText">
      <summary>Holt oder setzt den Beschreibungstext.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LanguageService">
      <summary>Gibt einen Verweis auf den intern verwendeten LanguageService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LocalizableLabelText">
      <summary>Legt den Bezeichner eines sprachumschaltbaren Textes fest, dessen Inhalt zur Laufzeit auf die LabelText-Eigenschaft geschrieben wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LocalizableText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit wird der Text in der aktuellen Projektsprache auf die Text-Eigenschaft geschrieben.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LocalizableTextOff">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der als Beschreibung in die Content-Eigenschaft geschrieben wird, wenn das Steuerelement im "Aus"-Zustand (IsChecked= false) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LocalizableTextOn">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der als Beschreibung in die Content-Eigenschaft geschrieben wird, wenn das Steuerelement im "Ein"-Zustand (IsChecked= true) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LocalizedLabelText">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die LabelText-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LocalizedText">
      <summary>Gibt eine Referenz auf das ILocalizedText-Objekt zurück, das den in LocalizableText angegebenen Text aus der Sprachumschaltung liest.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LocalizedTextOff">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die TextOff-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.LocalizedTextOn">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die TextOn-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.ResetValue">
      <summary>Trigger zum Beenden des Editiermodus mit anschließendem Verwerfen des geänderten Wertes.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.ResetValueCommand">
      <summary>Gibt ein Command-Objekt zurück, das beim Ausführen den Editiermodus beendet und den im Steuerelement bearbeiteten Wert verwirft.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.Symbol">
      <summary>Legt über eine Ressourcenbindung die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.SymbolHorizontalAlignment">
      <summary>Legt die horizontale Ausrichtung (links, mitte, rechts) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.SymbolMargin">
      <summary>Legt den Abstand der Grafik zum Rand des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.SymbolOff">
      <summary>Legt über eine Ressourcenbindung die Grafik fest, die auf dem Steuerelement angezeigt wird, wenn 'IsChecked' den Wert 'False' hat.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.SymbolOn">
      <summary>Legt über eine Ressourcenbindung die Grafik fest, die auf dem Steuerelement angezeigt wird, wenn 'IsChecked' den Wert 'True' hat.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.SymbolResourceKey">
      <summary>Legt über die Angabe eines Ressourcenschlüssels die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.SymbolVerticalAlignment">
      <summary>Legt die vertikale Ausrichtung (oben, mitte, unten) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.Text">
      <summary>Legt eine festen Text ohne Sprachumschaltung auf der Schaltfläche fest (siehe auch Eigenschaften LocalizableText, UseVariableText).</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.TextOff">
      <summary>Legt einen Text fest, der als Beschreibung in die Content-Eigenschaft geschrieben wird, wenn das Steuerelement im "Aus"-Zustand (IsChecked= false) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.TextOn">
      <summary>Legt einen Text fest, der als Beschreibung in die Content-Eigenschaft geschrieben wird, wenn das Steuerelement im "Ein"-Zustand (IsChecked= true) ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.UserManagementService">
      <summary>Gibt einen Verweis auf den intern verwendeten UserManagementService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.UseVariableText">
      <summary>Legt fest, dass in die LabelText-Eigenschaft automatisch der mit der Variablen verknüpfte sprachumschaltbare Text in der aktiven Projektsprache geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.Variable">
      <summary>Gibt einen Verweis auf die intern verwendete Variableninstanz zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.VariableComment">
      <summary>Gibt den Kommentar zur verknüpften Prozessvariablen aus der Projektdatenbank zurück. Die Prozessvariable wird in VariableName festgelegt. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.VariableName">
      <summary>Legt den Namen der verknüpften Prozessvariablen fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.VariableService">
      <summary>Gibt einen Verweis auf das intern verwendete Objekt vom Typ IVariableService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.VariableText">
      <summary>Gibt den sprachumschaltbaren Text in der aktuellen Projektsprache zurück, der in der Projektdatenbank für die Variablendefinition festgelegt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.WriteValue">
      <summary>Trigger zum Beenden des Editiermodus mit anschließendem Schreiben des geänderten Wertes zum Variablenkern.</summary>
    </member>
    <member name="P:VisiWin.Controls.RadioButton.WriteValueCommand">
      <summary>Gibt ein Command-Objekt zurück, das beim Ausführen den Editiermodus beendet und den Wert zum Variablenkern herunterschreibt.</summary>
    </member>
    <member name="E:VisiWin.Controls.RadioButton.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ RadioButton, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.RadioButton.ValueChanged">
      <summary>Wird ausgelöst, sobald sich der Wert der in VariableName zugeordneten Prozessvariablen ändert. </summary>
      <param name="sender">Objekt vom Typ RadioButton, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.RadioButton.VerifyOperation">
      <summary>Wird ausgelöst, wenn im Steuerelement eine verifikationsunterstützte Handlung gestartet wurde.</summary>
      <param name="sender">Objekt vom Typ RadioButton, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VerifyOperationEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.AttachVariable(System.Nullable{System.Boolean})">
      <summary>Meldet die Variable beim Variablenkern zur Übertragung an. Das Ergebnis der operation wird in der IsAttached-Eigenschaft angezeigt. </summary>
      <param name="useDeferredActivation">Optionale Angabe, ob die Ausführung der Anmeldung über einen Dispatcher (wartet so lange bis ggf. weitere Anmeldeanfragen zeitnah eintreffen) erfolgen soll. Keine Angabe bedeutet: Für useDeferredActivation wird der Wert aus der Projektkonfiguration verwendet (®Optimierung der Variablenan- /abmeldungen). </param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.DetachVariable">
      <summary>Meldet die Variable beim Variablenkern ab. </summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss.</summary>
      <returns>Der aus Value ermittelte Wert.</returns>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.InitializeBlinkService">
      <summary>Wird ausgeführt, um den BlinkService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.InitializeLocalizedText">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedText-Objekt instanziiert werden muss. </summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.InitializeLocalizedTextOff">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedTextOff-Objekt instanziiert werden muss. </summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.InitializeLocalizedTextOn">
      <summary>Wird ausgeführt, wenn das intern verwendete LocalizedTextOn-Objekt instanziiert werden muss. </summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.InitializeUserManagementService">
      <summary>Wird aufgerufen, um den UserManagementService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.InitializeVariableService">
      <summary>Wird ausgeführt, wenn der VariableService initialisiert wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnAuthorizationChanged(VisiWin.UserManagement.AuthorizationEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Freigabestatus (Eigenschaft IsAuthorized) geändert hat.</summary>
      <param name="e">Objekt vom Typ AuthorizationEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnAuthorizationRightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der AuthorizationRight-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnBlinkCycleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der BlinkCycle-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnBlinkTimerDoBlink(VisiWin.Blink.BlinkEventArgs)">
      <summary>Wird zyklisch im Blinktakt aufgerufen, wenn das Steuerelement blinkt.</summary>
      <param name="e">Objekt vom Typ BlinkEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCanRecipeEditChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der CanRecipeEdit-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>Überschrieben. Wird aufgerufen, wenn das Steuerelement ein ToggleButton.Checked-Ereignis auslöst</summary>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceIsAttached(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAttached-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAttached</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceIsAuthorized(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAuthorized-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAuthorized</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceIsBound(System.Object)">
      <summary>Wird aufgerufen, wenn die IsBound-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsBound</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceIsEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEditing</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceIsEnabled(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEnabled-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEnabled</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceIsQualityGood(System.Object)">
      <summary>Wird aufgerufen, wenn die IsQualityGood-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsQualityGood</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceIsRecipeEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsRecipeEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsRecipeEditing</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceIsVariableValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsVariableValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsVariableValid</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceLabelText(System.Object)">
      <summary>Wird aufgerufen, wenn die LabelText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LabelText</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceSymbol(System.Object)">
      <summary>Wird aufgerufen, wenn die Symbol-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Symbol</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceText(System.Object)">
      <summary>Wird aufgerufen, wenn die Text-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Text</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceTextOff(System.Object)">
      <summary>Wird aufgerufen, wenn die TextOff-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextOff</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceTextOn(System.Object)">
      <summary>Wird aufgerufen, wenn die TextOn-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextOn</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceVariableComment(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableComment-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableComment</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceVariableText(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableText</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnCoerceVisibility(System.Object)">
      <summary>Wird aufgerufen, wenn die Visibility-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Visibility</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnIsBlinkEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der IsBlinkEnabled-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLocalizableLabelTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableLabelText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLocalizableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLocalizableTextOffChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableTextOff-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLocalizableTextOnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableTextOn-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLocalizedLabelTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text des zugehörigen LocalizedLabelText-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLocalizedTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedText-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLocalizedTextOffChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedTextOff-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnLocalizedTextOnChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text im LocalizedTextOn-Objekt ändert. </summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnPropertyChanged(System.String)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert. </summary>
      <param name="propertyName">Name der geänderten Eigenschaft. </param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnSymbolOffChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der SymbolOff-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnSymbolOnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der SymbolOn-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnTextOffChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextOff-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnTextOnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextOn-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>Überschrieben. Wird aufgerufen, wenn das Steuerelement ein Unchecked-Ereignis auslöst</summary>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnUnloaded">
      <summary>Wird aufgerufen, wenn das Unloaded-Ereignis auftritt. </summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnUseVariableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die intern verwendete IVariable-Instanz (Eigenschaft Variable) ändert. </summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IsEditingChanged-Ereignis in der intern verwendeten Variableninstanz (Eigenschaft Variable) ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnVariableNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Eigenschaft VariableName ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich eine Eigenschaft in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) ändert.</summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.OnVerifyOperation(System.String,System.Object)">
      <summary>Wird ausgeführt, wenn eine verifikationsunterstützte Handlung gestartet wurde. Löst das VerifyOperation-Ereignis aus.</summary>
      <returns>true, wenn die Handlung (z.B. über die Benutzerschnittstelle des VerificationBehavior) verifiziert wurde.</returns>
      <param name="operationName">Name der Handlung.</param>
      <param name="operationParameter">Parameter der Handlung.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.SetIsCheckedInternal(System.Nullable{System.Boolean})">
      <summary>Setzt die 'IsChecked'-Eigenschaft . Das IsInSetIsCheckedInternal-Flag wird während des Vorgangs auf true gesetzt, um eine Endlosschleife beim Setzen mehrerer 'IsChecked'-Eigenschaften in einem Optionenfeld zu vermeiden. </summary>
      <param name="isChecked">Wert für die 'IsChecked'-Eigenschaft.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.SetVariableValue(System.Object,System.Boolean)">
      <summary>Setzt den Variablenwert und aktiviert optional den Editiermodus der Variable. </summary>
      <param name="newValue">Neuer Wert der Variablen. </param>
      <param name="keepEditing">Wert, der angibt, ob der Editiermodus gestartet werden soll:True: Der neue Wert wird im Steuerelement übernommen, wird aber erst zum Variablenkern geschickt, wenn StopEdit aufgerufen wird.False: Der neue Wert wird im Steuerelement übernommen und direkt zum Variablenkern geschickt.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.SetVariableValue(System.Int32,System.Boolean,System.Boolean)">
      <summary>Setzt den Variablenwert und aktiviert optional den Editiermodus der Variable. </summary>
      <param name="bitNumber">(0-indizierter) Index des zu setzenden Bits.</param>
      <param name="newValue">Neuer Wert der Variablen. </param>
      <param name="keepEditing">Wert, der angibt, ob der Editiermodus gestartet werden soll:True: Der neue Wert wird im Steuerelement übernommen, wird aber erst zum Variablenkern geschickt, wenn StopEdit aufgerufen wird.False: Der neue Wert wird im Steuerelement übernommen und direkt zum Variablenkern geschickt.</param>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.StartEdit">
      <summary>Startet den Editiermodus.</summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.StopEdit(System.Boolean)">
      <summary>Stoppt den Editiermodus. </summary>
      <param name="transmitEditResult">true: wenn der Wert aus dem Steuerelement in die verknüpfte Prozessvariable geschrieben werden soll. false: wenn der Wert aus dem Steuerelement verworfen und der aktuelle Prozessvariablenwert aus dem Variablenkern in das Steuerelement geschrieben werden soll.</param>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.BitNumberProperty">
      <summary>Bezeichnet die BitNumber-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.CanRecipeEditProperty">
      <summary>Bezeichnet die CanRecipeEdit-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.CornerRadiusProperty">
      <summary>Bezeichnet die CornerRadius-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsAttachedProperty">
      <summary>Bezeichnet die IsAttached-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsBoundProperty">
      <summary>Bezeichnet die IsBound-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsDeferredActivationEnabledProperty">
      <summary>Bezeichnet die IsDeferredActivationEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsEditControlProperty">
      <summary>Bezeichnet die IsEditControl-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsEditingProperty">
      <summary>Bezeichnet die IsEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsQualityGoodProperty">
      <summary>Bezeichnet die IsQualityGood-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsRecipeEditingProperty">
      <summary>Bezeichnet die IsRecipeEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.IsVariableValidProperty">
      <summary>Bezeichnet die IsVariableValid-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.LabelTextProperty">
      <summary>Bezeichnet die LabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.LocalizableLabelTextProperty">
      <summary>Bezeichnet die LocalizableLabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.LocalizableTextOffProperty">
      <summary>Bezeichnet die LocalizableTextOff-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.LocalizableTextOnProperty">
      <summary>Bezeichnet die LocalizableTextOn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.LocalizableTextProperty">
      <summary>Bezeichnet die LocalizableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.ResetValueProperty">
      <summary>Bezeichnet die ResetValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.SymbolHorizontalAlignmentProperty">
      <summary>Bezeichnet die SymbolHorizontalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.SymbolMarginProperty">
      <summary>Bezeichnet die SymbolMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.SymbolOffProperty">
      <summary>Bezeichnet die SymbolOff-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.SymbolOnProperty">
      <summary>Bezeichnet die SymbolOn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.SymbolResourceKeyProperty">
      <summary>Bezeichnet die SymbolResourceKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.SymbolVerticalAlignmentProperty">
      <summary>Bezeichnet die SymbolVerticalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.TextOffProperty">
      <summary>Bezeichnet die TextOff-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.TextOnProperty">
      <summary>Bezeichnet die TextOn-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.TextProperty">
      <summary>Bezeichnet die Text-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.UseVariableTextProperty">
      <summary>Bezeichnet die UseVariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.VariableCommentProperty">
      <summary>Bezeichnet die VariableComment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.VariableTextProperty">
      <summary>Bezeichnet die VariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.VerifyOperationEvent">
      <summary>Bezeichnet das VerifyOperation-Routingereignis.</summary>
    </member>
    <member name="F:VisiWin.Controls.RadioButton.WriteValueProperty">
      <summary>Bezeichnet die WriteValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.RadioButton.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ RadioButton.</summary>
    </member>
    <member name="T:VisiWin.Controls.LanguageChangeSwitch">
      <summary>Steuerelement, das eine Schaltfläche zum Wechsel der Sprache darstellt.</summary>
    </member>
    <member name="P:VisiWin.Controls.LanguageChangeSwitch.LCID">
      <summary>Legt die LCID der Sprache fest, zu der gewechselt werden soll, wenn auf die Schaltfläche geklickt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.LanguageChangeSwitch.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.LanguageChangeSwitch.OnClick">
      <summary>Wird aufgerufen, wenn auf das Steuerelement geklickt wird.</summary>
    </member>
    <member name="F:VisiWin.Controls.LanguageChangeSwitch.LCIDProperty">
      <summary>Bezeichnet die LCID-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.LanguageChangeSwitch.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ LanguageChangeSwitch.</summary>
    </member>
    <member name="T:VisiWin.Controls.Switch">
      <summary>Steuerelement, das einen prozessvariablenwertgebundenen Schalter repräsentiert</summary>
    </member>
    <member name="M:VisiWin.Controls.Switch.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Switch.</summary>
    </member>
    <member name="T:VisiWin.Controls.Limit">
      <summary>Beschreibt einen numerischen Wertebereich als Grenzwerte, Rahmen und Füllfarbe.</summary>
    </member>
    <member name="P:VisiWin.Controls.Limit.EndValue">
      <summary>Legt zuammen mit StartValue den numerischen Wertebereich fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Limit.Fill">
      <summary>Legt den Pinsel zum Füllen des Bereiches fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Limit.StartValue">
      <summary>Legt zuammen mit EndValue den numerischen Wertebereich fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Limit.Stroke">
      <summary>Legt den Pinsel für den Rahmen fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Limit.StrokeThickness">
      <summary>Legt die Breite des Rahmens fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Limit.ValueType">
      <summary>Legt die Interpretationsart der in StartValue und EndValue festgelegten Bereichsgrenzen fest. </summary>
    </member>
    <member name="E:VisiWin.Controls.Limit.LimitPropertyChangedEvent">
      <summary>Tritt ein, wenn der Wert einer Eigenschaft des Limit-Objekts geändert wurde. </summary>
      <param name="limit">Objekt vom Typ Limit als Referenz auf den Auslöser.</param>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs, das weitere Details zum Ereignis beinhaltet.</param>
    </member>
    <member name="M:VisiWin.Controls.Limit.CompareTo(System.Object)">
      <summary>Führt einen Vergleich zwischen dieser Instanz und der übergebenen Instanz aus.</summary>
      <returns>0, wenn obj nicht null ist und die Eigenschaften Fill, Stroke, StartValue, EndValue und ValueType von obj denen der aktuellen Instanz identisch sind. </returns>
      <param name="obj">Zu vergleichendes Objekt.</param>
    </member>
    <member name="M:VisiWin.Controls.Limit.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.Limit.EndValueProperty">
      <summary>Bezeichnet die EndValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Limit.FillProperty">
      <summary>Bezeichnet die Fill-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Limit.StartValueProperty">
      <summary>Bezeichnet die StartValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Limit.StrokeProperty">
      <summary>Bezeichnet die Stroke-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Limit.StrokeThicknessProperty">
      <summary>Bezeichnet die StrokeThickness-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Limit.ValueTypeProperty">
      <summary>Bezeichnet die ValueType-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.Limit.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Limit.</summary>
    </member>
    <member name="T:VisiWin.Controls.LimitCollection">
      <summary>Repräsentiert eine Liste von Limit-Objekten.</summary>
    </member>
    <member name="M:VisiWin.Controls.LimitCollection.GetLimitByValue(System.Double,System.Double,System.Double)">
      <summary>Liefert eine Referenz auf das Limit-Objekt zurück, in dessen Grenzen der übergebene Wert liegt.</summary>
      <returns>Das zum Wert passende Limit-Objekt, oder null, wenn es kein passendes Objekt gibt.</returns>
      <param name="value">Der zu prüfende Wert. </param>
      <param name="totalMinimum">Das Minimum des Wertebereiches, für den die Limits angelegt wurden. </param>
      <param name="totalMaximum">Das Maximum des Wertebereiches, für den die Limits angelegt wurden. </param>
    </member>
    <member name="M:VisiWin.Controls.LimitCollection.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.Controls.LimitCollection.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ LimitCollection.</summary>
    </member>
    <member name="T:VisiWin.Controls.ListBox">
      <summary>Steuerelement, das eine Auswahlliste mit Anbindung an eine Prozessvariable darstellt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.Authorization">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben und das Steuerelement sichtbar oder aktiv.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit. </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.BlinkService">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn IsBlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.BlinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.CanRecipeEdit">
      <summary>Legt fest, ob der Variablenwert über dieses Steuerelement im Rezeptpuffer bearbeitet werden kann. </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsAttached">
      <summary>Gibt zurück, ob die Variable beim Variablenkern über AttachVariable angebunden wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsAttaching">
      <summary>Gibt zurück ob die in VariableName angegebene Prozessvariable gerade angemeldet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsBound">
      <summary>Gibt an, ob das Steuerelement über die VariableName-Eigenschaft mit einer gültigen Prozessvariablen verknüpft ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsDeferredActivationEnabled">
      <summary>Legt fest, ob die verzögerte Variablenaktivierung für dieses Steuerelement angeschaltet sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsEditControl">
      <summary>Legt fest, ob das Steuerelement den geänderten Variablenwert als Editierkopie puffert oder ob der Wert direkt in den Variablenkern geschrieben wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsEditing">
      <summary>Gibt zurück ob sich die Variable im Editiermodus befindet. </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsInSetSelectedIndex">
      <summary>Gibt zurück, ob das Steuerelement gerade das Setzen des selektierten Listenelementes ausführt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsInSetVariable">
      <summary>Gibt zurück, ob der Variablenwert gerade intern umgesetzt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsQualityGood">
      <summary>Gibt zurück, ob die Statusinformationen (Quality-Flag) der verknüpften Prozessvariablen eine fehlerfreie Übertragung signalisieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsRecipeEditing">
      <summary>Gibt zurück, ob der Wert der Variablen aktuell über den Rezeptpuffer bezogen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.IsVariableValid">
      <summary>Gibt zurück, ob die in VariableName angegebene Prozessvariable gültig ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.LabelText">
      <summary>Gibt einen beschreibenden Text zur verknüpften Variablen an, der zusätzlich zum Wert angezeigt wird (siehe auch Eigenschaften LocalizableLabelText / UseVariableText).</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.LanguageService">
      <summary>Gibt einen Verweis auf den intern verwendeten LanguageService zum Lesen und Überwachen sprachumschaltbarer Texte zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.LocalizableLabelText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit überschreibt der ermittelte Text in der aktuellen Projektsprache den Wert der LabelText-Eigenschaft. </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.LocalizedLabelText">
      <summary>Gibt einen Verweis auf die intern verwendete LocalizedText-Instanz zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.StateList">
      <summary>Legt eine Zuordnungstabelle fest, die zum Erzeugen von Elementen und zur Transformation des Prozessvariablenwertes auf das selektierte Element verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.StateMode">
      <summary>Legt fest, wie der Prozessvariablenwert beim Vergleich mit den Werten der in StateList angegebenen Zuordnungstabelle interpretiert wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.Symbol">
      <summary>Legt eine Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.SymbolHorizontalAlignment">
      <summary>Legt die horizontale Ausrichtung (links, mitte, rechts) der Grafik auf dem Beschriftungsfeld des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.SymbolMargin">
      <summary>Legt den Abstand der Grafik zum Rand des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.SymbolResourceKey">
      <summary>Legt über die Angabe eines Ressourcenschlüssels die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.SymbolVerticalAlignment">
      <summary>Legt die vertikale Ausrichtung (oben, mitte, unten) der Grafik auf dem Beschriftungsfeld des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.UserManagementService">
      <summary>Gibt einen Verweis auf den intern verwendeten UserManagementService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.UseVariableText">
      <summary>Legt fest, dass in die LabelText-Eigenschaft automatisch der mit der Variablen verknüpfte sprachumschaltbare Text in der aktiven Projektsprache geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.Variable">
      <summary>Gibt einen Verweis auf den intern verwendeten Variable-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.VariableComment">
      <summary>Gibt den Kommentar zur verknüpften Prozessvariablen aus der Projektdatenbank zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.VariableName">
      <summary>Legt den Namen der verknüpften Prozessvariablen fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.VariableService">
      <summary>Gibt einen Verweis auf den intern verwendeten VariableService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.ListBox.VariableText">
      <summary>Gibt den sprachumschaltbaren Text in der aktuellen Projektsprache zurück, der in der Projektdatenbank für die verknüpfte Prozessvariable festgelegt wurde.</summary>
    </member>
    <member name="E:VisiWin.Controls.ListBox.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert, die eine Reaktion im Steuerelement erfordert.</summary>
      <param name="sender">Objekt vom Typ ListBox, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.ListBox.ValueChanged">
      <summary>Wird ausgelöst, sobald sich der Wert der in VariableName zugeordneten Prozessvariablen ändert. </summary>
      <param name="sender">Objekt vom Typ ListBox, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.ListBox.VerifyOperation">
      <summary>Wird ausgelöst, wenn im Steuerelement eine verifikationsunterstützte Handlung gestartet wurde.</summary>
      <param name="sender">Objekt vom Typ ListBox, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VerifyOperationEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.AttachVariable(System.Nullable{System.Boolean})">
      <summary>Meldet die im Steuerelement verwendete Prozessvariable zur Kommunikation an.</summary>
      <param name="useDeferredActivation">Gibt an, ob die verzögerte Variablenaktivierung benutzt werden soll.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.DetachVariable">
      <summary>Meldet die im Steuerelement verwendete Prozessvariable im Variablenkern ab.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.DetermineSelectedIndex">
      <summary>Ermittelt den selektierten Index anhand des Variablenwertes. Die Angabe einer StateCollection als ItemSource wird berücksichtigt.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.GetValuePropertyValue">
      <summary>Wird aufgerufen, um den Wert der Value-Eigenschaft zu lesen.</summary>
      <returns>Wert der Value-Eigenschaft.</returns>
    </member>
    <member name="M:VisiWin.Controls.ListBox.InitializeBlinkService">
      <summary>Wird ausgeführt, um den BlinkService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.InitializeUserManagementService">
      <summary>Wird aufgerufen, um den UserManagementService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.InitializeVariableService">
      <summary>Wird ausgeführt, um den VariableService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnAuthorizationChanged(VisiWin.UserManagement.AuthorizationEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Freigabestatus (Eigenschaft IsAuthorized) geändert hat.</summary>
      <param name="e">Objekt vom Typ AuthorizationEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnAuthorizationRightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die AuthorizationRight-Eigenschaft geändert hat. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnBlinkCycleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die BlinkCycle-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnBlinkTimerDoBlink(VisiWin.Blink.BlinkEventArgs)">
      <summary>Wird ausgeführt, wenn sich die Blinkphase ändert.</summary>
      <param name="e">Objekt vom Typ BlinkEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCanRecipeEditChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die CanRecipeEdit-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceIsAttached(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAttached-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAttached</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceIsAuthorized(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAuthorized-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAuthorized</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceIsBound(System.Object)">
      <summary>Wird aufgerufen, wenn die IsBound-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsBound</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceIsEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEditing</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceIsEnabled(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEnabled-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEnabled</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceIsQualityGood(System.Object)">
      <summary>Wird aufgerufen, wenn die IsQualityGood-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsQualityGood</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceIsRecipeEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsRecipeEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsRecipeEditing</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceIsVariableValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsVariableValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsVariableValid</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceLabelText(System.Object)">
      <summary>Wird aufgerufen, wenn die LabelText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LabelText</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceVariableComment(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableComment-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableComment</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceVariableText(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableText</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnCoerceVisibility(System.Object)">
      <summary>Wird aufgerufen, wenn die Visibility-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Visibility</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnIsBlinkEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die IsBlinkEnabled-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die aktuell im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnLocalizableLabelTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die LocalizableLabelText-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnLocalizedLabelTextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Text des zugehörigen LocalizedText-Objekt ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnPropertyChanged(System.String)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert.</summary>
      <param name="propertyName">Name der geänderten Eigenschaft.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der selektierte Listenindex ändert. Ruft das SelectionChanged-Ereignis auf.</summary>
      <param name="e">Objekt vom Typ SelectionChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnStateListChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich Inhalte der StateList-Eigenschaften ändern</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnStateModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Wert der StateMode-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnUnloaded">
      <summary>Wird ausgeführt, wenn das Unloaded-Ereignis ausgeführt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnUseVariableTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die UseVariableText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die Variablen-Instanz ändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IVariable.IsEditingChanged-Ereignis der Variable ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnVariableNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der VariableName-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft der zugeordneten Variablen ändert. </summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.OnVerifyOperation(System.String,System.Object)">
      <summary>Wird ausgeführt, wenn eine verifikationsunterstützte Handlung gestartet wurde.  Löst das VerifyOperation-Ereignis aus.</summary>
      <returns>true, wenn die Handlung (z.B. über die Benutzerschnittstelle des VerificationBehavior) verifiziert wurde.</returns>
      <param name="operationName">Name der Handlung.</param>
      <param name="operationParameter">Parameter der Handlung.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.SetVariableValue(System.Object,System.Boolean)">
      <summary>Setzt den Variablenwert und aktiviert optional den Editiermodus der Variable. </summary>
      <param name="newValue">Neuer Wert der Variablen. </param>
      <param name="keepEditing">Wert, der angibt, ob der Editiermodus gestartet werden soll:True: Der neue Wert wird im Steuerelement übernommen, wird aber erst zum Variablenkern geschickt, wenn StopEdit aufgerufen wird.False: Der neue Wert wird im Steuerelement übernommen und direkt zum Variablenkern geschickt.</param>
    </member>
    <member name="M:VisiWin.Controls.ListBox.StartEdit">
      <summary>Startet den Editiermodus.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.StopEdit(System.Boolean)">
      <summary>Stoppt den Editiermodus. </summary>
      <param name="transmitEditResult">true: wenn der Wert aus dem Steuerelement in die verknüpfte Prozessvariable geschrieben werden soll. false: wenn der Wert aus dem Steuerelement verworfen und der aktuelle Prozessvariablenwert aus dem Variablenkern in das Steuerelement geschrieben werden soll.</param>
    </member>
    <member name="F:VisiWin.Controls.ListBox.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.CanRecipeEditProperty">
      <summary>Bezeichnet die CanRecipeEdit-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsAttachedProperty">
      <summary>Bezeichnet die IsAttached-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsBoundProperty">
      <summary>Bezeichnet die IsBound-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsDeferredActivationEnabledProperty">
      <summary>Bezeichnet die IsDeferredActivationEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsEditControlProperty">
      <summary>Bezeichnet die IsEditControl-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsEditingProperty">
      <summary>Bezeichnet die IsEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsQualityGoodProperty">
      <summary>Bezeichnet die IsQualityGood-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsRecipeEditingProperty">
      <summary>Bezeichnet die IsRecipeEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.IsVariableValidProperty">
      <summary>Bezeichnet die IsVariableValid-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.LabelTextProperty">
      <summary>Bezeichnet die LabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.LocalizableLabelTextProperty">
      <summary>Bezeichnet die LocalizableLabelText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.StateListProperty">
      <summary>Bezeichnet die StateList-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.StateModeProperty">
      <summary>Bezeichnet die StateMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.SymbolHorizontalAlignmentProperty">
      <summary>Bezeichnet die SymbolHorizontalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.SymbolMarginProperty">
      <summary>Bezeichnet die SymbolMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.SymbolResourceKeyProperty">
      <summary>Bezeichnet die SymbolResourceKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.SymbolVerticalAlignmentProperty">
      <summary>Bezeichnet die SymbolVerticalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.UseVariableTextProperty">
      <summary>Bezeichnet die UseVariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.VariableCommentProperty">
      <summary>Bezeichnet die VariableComment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.VariableTextProperty">
      <summary>Bezeichnet die VariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ListBox.VerifyOperationEvent">
      <summary>Bezeichnet das VerifyOperation-Routingereignis.</summary>
    </member>
    <member name="M:VisiWin.Controls.ListBox.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ListBox.</summary>
    </member>
    <member name="T:VisiWin.Controls.MarkerPoint">
      <summary>Beschreibt den Schnittpunkt einer Trendkurve mit der Markierungslinie in einem Trendchart.</summary>
    </member>
    <member name="P:VisiWin.Controls.MarkerPoint.TrendCurve">
      <summary>Legt den Verweis auf das TrendCurve-Objekt fest, dessen Schnittpunkt mit der Markierungslinie beschrieben wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.MarkerPoint.XValue">
      <summary>Gibt die X-Koordinate des Schnittpunktes als Zeitstempel an.</summary>
    </member>
    <member name="P:VisiWin.Controls.MarkerPoint.YValue">
      <summary>Gibt die Y-Koordinate des Schnittpunktes als Variablenwert an.</summary>
    </member>
    <member name="E:VisiWin.Controls.MarkerPoint.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft geändert hat.</summary>
      <param name="sender">Objekt vom Typ MarkerPoint, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.MarkerPoint.OnPropertyChanged(System.String)">
      <summary>Wird aufgerufen, wenn sich der Wert einer Eigenschaft ändert. Löst das PropertyChanged-Ereignis aus.</summary>
      <param name="name">Name der Eigenschaft, deren Wert verändert wurde.</param>
    </member>
    <member name="M:VisiWin.Controls.MarkerPoint.#ctor(VisiWin.Controls.TrendCurve,System.DateTime,System.Double)">
      <summary>Erzeugt einen neue Instanz vom Typ MarkerPoint.</summary>
      <param name="trendCurve">Legt den Verweis auf das TrendCurve-Objekt fest, dessen Schnittpunkt mit der Markierungslinie beschrieben wird.</param>
      <param name="xValue">Gibt die X-Koordinate des Schnittpunktes als Zeitstempel an.</param>
      <param name="yValue">Gibt die Y-Koordinate des Schnittpunktes als Variablenwert an.</param>
    </member>
    <member name="T:VisiWin.Controls.NavigationButton">
      <summary>Steuerelement, das eine Schaltfläche zum Einblenden einer View darstellt.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationButton.NavigationService">
      <summary>Gibt einen Verweis auf das intern verwendete INavigationService-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationButton.RegionName">
      <summary>Name der Region, in die die View geladen werden soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationButton.UseNavigationService">
      <summary>Legt fest, ob der intern verwendete NavigationService verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationButton.ViewName">
      <summary>Name der View, die geladen werden soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationButton.ViewParameter">
      <summary>Parameter. Wird beim Ansichtenwechsel in den ObjectStore geschrieben. </summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationButton.InitializeNavigationService">
      <summary>Initialisiert den intern verwendeten NavigationService.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationButton.OnClick">
      <summary>Wird aufgerufen, wenn auf das Steuerelement geklickt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationButton.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationButton.OnUseNavigationServiceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Wert der UseNavigationService-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="F:VisiWin.Controls.NavigationButton.RegionNameProperty">
      <summary>Bezeichnet die RegionName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationButton.UseNavigationServiceProperty">
      <summary>Bezeichnet die UseNavigationService-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationButton.ViewNameProperty">
      <summary>Bezeichnet die ViewName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationButton.ViewParameterProperty">
      <summary>Bezeichnet die ViewParameter-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationButton.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ NavigationButton.</summary>
    </member>
    <member name="T:VisiWin.Controls.NavigationRadioButton">
      <summary>Steuerelement, das eine Schaltfläche zum Umschalten einer View darstellt. Wird in einem Schaltflächenfeld verwendet, in dem immer nur eine Schaltfläche aktiv sein kann. </summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationRadioButton.CheckMode">
      <summary>Legt fest, ob das Steuerelement durch einen Klick den Wert der IsChecked-Eigenschaft ändert.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationRadioButton.NavigationService">
      <summary>Gibt eine Referenz auf den intern verwendeten NavigationService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationRadioButton.PreventNavigation">
      <summary>Gibt zurück, dass zur Zeit intern der IsChecked-Status umgesetzt wird, ohne dass eine Navigation auszuführen ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationRadioButton.RegionName">
      <summary>Name der Region, in der die View beim Klick auf das Steuerelement geladen werden soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationRadioButton.RegionService">
      <summary>Gibt einen Verweis auf den intern verwendeten RegionService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationRadioButton.UseNavigationService">
      <summary>Legt fest, ob der intern verwendete NavigationService verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationRadioButton.ViewName">
      <summary>Name der View, die in die angegebene Region beim Bedienen des Steuerelementes geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationRadioButton.ViewParameter">
      <summary>Legt einen Parameter fest, der bei der Umschaltung der View in den ObjectStore geschrieben wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.DetachRegionService">
      <summary>Löst die Eventsenken des RegionServices. </summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.DetermineCheckedState">
      <summary>Wird aufgerufen, wenn eine Überprüfung des IsChecked-Zustandes durch die Änderung von Zuständen im Steuerelement notwendig wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.DetermineCheckedState(System.String,System.String)">
      <summary>Wird aufgerufen, wenn eine Überprüfung des IsChecked-Zustandes durch die Änderung von Zuständen im System durch das Laden einer View in einer Region notwendig wird.</summary>
      <param name="regionName">Name der geladenen Region.</param>
      <param name="viewName">Name der geladenen View.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.InitializeNavigationService">
      <summary>Initialisiert den intern verwendeten NavigationService.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.InitializeRegionService">
      <summary>Initialisiert den intern verwendeten RegionService.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>Überschrieben. Wird aufgerufen, wenn das Steuerelement ein ToggleButton.Checked-Ereignis auslöst</summary>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnCheckModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der CheckMode-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnRegionNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RegionName-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnRegionServiceViewChanged(VisiWin.ApplicationFramework.ViewChangedEventArgs)">
      <summary>Wird aufgerufen, wenn eine andere View in die über RegionName angegebene Region geladen wird.</summary>
      <param name="e">Objekt vom Typ ViewChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnSetView(System.String,System.String,System.Object)">
      <summary>Wird aufgerufen, wenn durch die Bedienung im Steuerelement das Laden einer View auszuführen ist.</summary>
      <param name="regionName">Name der Region. </param>
      <param name="viewName">Name der View. </param>
      <param name="viewParameter">Zusätzliche Parameter. </param>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnUnloaded">
      <summary>Wird aufgerufen, wenn das Unloaded-Ereignis auftritt. </summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnUseNavigationServiceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Wert der UseNavigationService-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnViewNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der ViewName-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.OnViewParameterChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der ViewParameter-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.SetChecked">
      <summary>Setzt die 'IsChecked'-Eigenschaft auf 'true'.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.SetUnchecked">
      <summary>Setzt die 'IsChecked'-Eigenschaft auf 'false'.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationRadioButton.CheckModeProperty">
      <summary>Bezeichnet die CheckMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationRadioButton.RegionNameProperty">
      <summary>Bezeichnet die RegionName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationRadioButton.UseNavigationServiceProperty">
      <summary>Bezeichnet die UseNavigationService-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationRadioButton.ViewNameProperty">
      <summary>Bezeichnet die ViewName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationRadioButton.ViewParameterProperty">
      <summary>Bezeichnet die ViewParameter-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationRadioButton.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ NavigationRadioButton.</summary>
    </member>
    <member name="T:VisiWin.Controls.NavigationToggleButton">
      <summary>Steuerelement, das eine Schaltfläche zum Umschalten zwischen zwei Views darstellt.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationToggleButton.CheckMode">
      <summary>Legt fest, ob das Steuerelement durch einen Klick den Wert der IsChecked-Eigenschaft ändert.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationToggleButton.NavigationService">
      <summary>Gibt eine Referenz auf den intern verwendeten NavigationService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationToggleButton.PreventNavigation">
      <summary>Gibt zurück, dass zur Zeit intern der IsChecked-Status umgesetzt wird, ohne dass eine Navigation auszuführen ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationToggleButton.RegionName">
      <summary>Name der Region, in der die View beim Klick auf das Steuerelement geladen werden soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationToggleButton.RegionService">
      <summary>Gibt einen Verweis auf den intern verwendeten RegionService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationToggleButton.UseNavigationService">
      <summary>Legt fest, ob der intern verwendete NavigationService verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationToggleButton.ViewNameChecked">
      <summary>Holt oder setzt den Namen der zugehörigen View, die geladen werden soll, wenn die Schaltfläche in den gedrückt Zustand wechselt.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationToggleButton.ViewNameUnchecked">
      <summary>Holt oder setzt den Namen der zugehörigen View, die geladen werden soll, wenn die Schaltfläche in den nicht-gedrückt Zustand wechselt.</summary>
    </member>
    <member name="P:VisiWin.Controls.NavigationToggleButton.ViewParameter">
      <summary>Legt einen Parameter fest, der bei der Umschaltung der View in den ObjectStore geschrieben wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.DetachRegionService">
      <summary>Löst die Eventsenken des RegionServices. </summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.DetermineCheckedState">
      <summary>Wird aufgerufen, wenn eine Überprüfung des IsChecked-Zustandes durch die Änderung von Zuständen im Steuerelement notwendig wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.DetermineCheckedState(System.String,System.String)">
      <summary>Wird aufgerufen, wenn eine Überprüfung des IsChecked-Zustandes durch die Änderung von Zuständen im System durch das Laden einer View in einer Region notwendig wird.</summary>
      <param name="regionName">Name der geladenen Region.</param>
      <param name="viewName">Name der geladenen View.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.InitializeNavigationService">
      <summary>Initialisiert den intern verwendeten NavigationService.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.InitializeRegionService">
      <summary>Initialisiert den intern verwendeten RegionService.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>Überschrieben. Wird aufgerufen, wenn das Steuerelement ein NavigationToggleButton.Checked-Ereignis auslöst</summary>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnCheckModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der CheckMode-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnRegionNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RegionName-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnRegionServiceViewChanged(VisiWin.ApplicationFramework.ViewChangedEventArgs)">
      <summary>Wird aufgerufen, wenn eine andere View in die über RegionName angegebene Region geladen wird.</summary>
      <param name="e">Objekt vom Typ ViewChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnSetView(System.String,System.String,System.Object)">
      <summary>Wird aufgerufen, wenn durch die Bedienung im Steuerelement das Laden einer View auszuführen ist.</summary>
      <param name="regionName">Name der Region. </param>
      <param name="viewName">Name der View. </param>
      <param name="viewParameter">Zusätzliche Parameter. </param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>Überschrieben. Wird aufgerufen, wenn das Steuerelement ein Unchecked-Ereignis auslöst</summary>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnUnloaded">
      <summary>Wird aufgerufen, wenn das Unloaded-Ereignis auftritt. </summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnUseNavigationServiceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Wert der UseNavigationService-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnViewNameCheckedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der ViewNameChecked-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnViewNameUncheckedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der ViewNameUnchecked-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.OnViewParameterChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der ViewParameter-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.SetChecked">
      <summary>Setzt die 'IsChecked'-Eigenschaft auf 'true'.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.SetUnchecked">
      <summary>Setzt die 'IsChecked'-Eigenschaft auf 'false'.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationToggleButton.CheckModeProperty">
      <summary>Bezeichnet die CheckMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationToggleButton.RegionNameProperty">
      <summary>Bezeichnet die RegionName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationToggleButton.UseNavigationServiceProperty">
      <summary>Bezeichnet die UseNavigationService-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationToggleButton.ViewNameCheckedProperty">
      <summary>Bezeichnet die ViewNameChecked-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationToggleButton.ViewNameUncheckedProperty">
      <summary>Bezeichnet die ViewNameUnchecked-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NavigationToggleButton.ViewParameterProperty">
      <summary>Bezeichnet die ViewParameter-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.NavigationToggleButton.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ NavigationToggleButton.</summary>
    </member>
    <member name="T:VisiWin.Controls.NumericTextBox">
      <summary>Hilfssteuerelement zur Ein-/ Ausgabe eines numerischen Variablenwertes. Wird im Template des NumericVarIn verwendet.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericTextBox.DecimalDigitsMax">
      <summary>Holt oder setzt die maximale Anzahl an Nachkommastellen. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericTextBox.MaskType">
      <summary>Holt oder setzt den Maskierungstyp. </summary>
    </member>
    <member name="M:VisiWin.Controls.NumericTextBox.IsValidInput(System.String)">
      <summary>Wird ausgeführt, wenn die Eingabe validiert werden muss. </summary>
      <returns>true, wenn die Eingabe gültig ist, ansonsten false. </returns>
      <param name="input">Die eingegebenen Zeichen. </param>
    </member>
    <member name="M:VisiWin.Controls.NumericTextBox.IsValidText(System.String)">
      <summary>Wird ausgeführt, wenn ein gesamter Text validiert werden muss. </summary>
      <returns>true, wenn der Text gültig ist, ansonsten false. </returns>
      <param name="textToValidate">Zu validierender Text. </param>
    </member>
    <member name="M:VisiWin.Controls.NumericTextBox.OnPaste(System.Windows.DataObjectPastingEventArgs)">
      <summary>Wrid ausgeführt, wenn ein Text über die Zwischenablage in die TextBox eingefügt wird.</summary>
      <param name="e">Objekt vom Typ DataObjectPastingEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericTextBox.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Wird aufgerufen, wenn das PreviewTextInput-Ereignis auftritt.</summary>
      <param name="e">Objekt vom Typ TextCompositionEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericTextBox.OnSelectionChanged(System.Windows.RoutedEventArgs)">
      <summary>Wird aufgerufen, wenn sich die Selektion des enthaltenen Textes ändert.</summary>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericTextBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Inhalt der Textbox ändert</summary>
      <param name="e">Daten zum Ereignis</param>
    </member>
    <member name="F:VisiWin.Controls.NumericTextBox.DecimalDigitsMaxProperty">
      <summary>Bezeichnet die DecimalDigitsMax-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericTextBox.MaskTypeProperty">
      <summary>Bezeichnet die MaskType-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericTextBox.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ NumericTextBox.</summary>
    </member>
    <member name="T:VisiWin.Controls.NumericVarIn">
      <summary>Ein-/ Ausgabefeld für einen numerischen Prozessvariablenwert </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.CalculatedFormatString">
      <summary>Gibt die Formatierungszeichenfolge zurück, die sich aus dem Wert der Eigenschaften 'FormatString', 'LocalizedFormatString' und den Einstellungen der von der verknüpften Prozessvariablen verwendeten Einheitenumrechnungen ergibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.FormatString">
      <summary>Legt eine sprachneutrale Formatierungszeichenkette fest, die zur Formatierung des Variablenwertes im Steuerelement verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.InputDecimalDigits">
      <summary>Gibt die maximale Anzahl der Nachkommastellen zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.InputMaskType">
      <summary>Gibt zurück, ob die Eingabe ganzzahlig (Integer) oder als Fließkomma (Decimal) erlaubt ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.IsInSetValueInternal">
      <summary>Gibt zurück, ob die Value-Eigenschaft gerade intern umgesetzt wird. Damit kann unterschieden werden, ob der Wert von außen gesetzt wird oder von intern. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.IsLimitMaxExceeded">
      <summary>Gibt zurück, ob die obere Grenze (Eigenschaft LimitMax) vom Variablenwert überschritten wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.IsLimitMinExceeded">
      <summary>Gibt zurück, ob die untere Grenze (Eigenschaft LimitMin) vom Variablenwert unterschritten wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.LimitMax">
      <summary>Gibt den einheitenumgerechneten oberen Grenzwert für die angebundene Prozessvariable an. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.LimitMaxFormatted">
      <summary>Gibt die obere Grenze (Eigenschaft LimitMax) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.LimitMin">
      <summary>Gibt den einheitenumgerechneten unteren Grenzwert für die angebundene Prozessvariable an. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.LimitMinFormatted">
      <summary>Gibt die untere Grenze (Eigenschaft LimitMin) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.LocalizableFormatString">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der zur formatierten Ein-/Ausgabe des Variablenwertes und der Grenzwerte verwendet wird. Für jede Projektsprache kann in dem Text eine individuelle Formatierung beschrieben werden.  </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.LocalizableUnitText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit wird der Text in der aktuellen Projektsprache auf die UnitText-Eigenschaft geschrieben.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.LocalizedFormatString">
      <summary>Gibt einen Verweis auf das intern verwendete LocalizedText-Objekt zurück, das den in LocalizableFormatString festgelegten sprachumschaltbaren Text liest und überwacht.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.LocalizedUnitText">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die UnitText-Eigenschaft zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.NumericTextBox">
      <summary>Gibt das im Template als PART_TextBox identifizierte Eingabefeld vom Typ NumericTextBox zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.RawLimitMax">
      <summary>Gibt den oberen Grenzwert für die angebundene Prozessvariable ohne Einheitenumrechnung an. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.RawLimitMaxFormatted">
      <summary>Gibt die obere Grenze ohne Einheitenumrechnung (Eigenschaft RawLimitMax) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.RawLimitMin">
      <summary>Gibt den unteren Grenzwert für die angebundene Prozessvariable ohne Einheitenumrechnung an.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.RawLimitMinFormatted">
      <summary>Gibt die untere Grenze ohne Einheitenumrechnung (Eigenschaft RawLimitMin) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.RawValue">
      <summary>Legt den im Steuerelement verknüpften Prozessvariablenwert ohne Einheitenumrechnung fest oder gibt ihn zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.RawValueFormatted">
      <summary>Gibt den aktuellen Variablenwert ohne Einheitenumrechnung (Eigenschaft RawValue) als formatierten Text zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.UnitText">
      <summary>Gibt einen Einheitentext zur Variablen an, der zusätzlich zum Variablenwert angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.UseRawValue">
      <summary>Legt fest, ob der Wert der Value-Eigenschaft direkt mit der RawValue-Eigenschaft verbunden ist oder ob eine Einheitenumrechnung zwischen den Eigenschaftenwerten erfolgen soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.UseVariableUnitText">
      <summary>Legt fest, dass in die 'UnitText'-Eigenschaft automatisch der mit der Variablen verknüpfte Einheitentext geladen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.Value">
      <summary>Legt den im Steuerelement verknüpften Prozessvariablenwert fest oder gibt ihn zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.NumericVarIn.ValueFormatted">
      <summary>Gibt den aktuellen Variablenwert (Eigenschaft Value) als formatierten Text zurück.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.CoerceLimitMaxFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'LimitMaxFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für LimitMaxFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.CoerceLimitMinFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'LimitMinFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für LimitMinFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.CoerceRawLimitMaxFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'RawLimitMaxFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für RawLimitMaxFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.CoerceRawLimitMinFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'RawLimitMinFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für RawLimitMinFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.CoerceRawValueFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'RawValueFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für RawValueFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.CoerceValueFormatted(System.Object)">
      <summary>Wird aufgerufen, wenn der Wert der Eigenschaft 'ValueFormatted' durch die Änderung anderer Werte überprüft und gegebenenfalls als geändert gemeldet werden muss.</summary>
      <returns>Der gegebenenfalls angepasste Wert für ValueFormatted.</returns>
      <param name="baseValue">Der gesetzte Eigenschaftenwert.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.ConfigureInputControl">
      <summary>Wird aufgerufen, um die Eigenschaften InputMaskType und InputDecimalDigits zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss.</summary>
      <returns>Der aus Value ermittelte Wert.</returns>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.InitializeInputBox">
      <summary>Initialisiert das im Template enthaltenen Element "Part_InputBox" mit Eigenschaftenwerten aus dem Steuerelement.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.InitializeLanguageService">
      <summary>Wird aufgerufen, um den Service zum Lesen und Überwachen der Texte (LanguageService) im Steuerelement zu initialisieren. </summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.InitializeTouchpadMemberCopy(VisiWin.Controls.VariableInputControl)">
      <summary>Initialisiert die TouchpadMember-Kopie. </summary>
      <param name="touchpadCaller">Das die Bildschirmtastatur aufrufende Steuerelement. </param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.InitializeVariableService">
      <summary>Wird ausgeführt, wenn der VariableService initialisiert wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnCoerceFormatString(System.Object)">
      <summary>Wird aufgerufen, wenn die FormatString-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von FormatString</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnCoerceIsInputValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsInputValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsInputValid</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnCoerceIsLimitMaxExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsLimitMaxExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsLimitMaxExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnCoerceIsLimitMinExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsLimitMinExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsLimitMinExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnCoerceLimitMax(System.Object)">
      <summary>Wird aufgerufen, wenn die LimitMax-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LimitMax</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnCoerceLimitMin(System.Object)">
      <summary>Wird aufgerufen, wenn die LimitMin-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von LimitMin</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnCoerceRawLimitMax(System.Object)">
      <summary>Wird aufgerufen, wenn die RawLimitMax-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von RawLimitMax</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnCoerceRawLimitMin(System.Object)">
      <summary>Wird aufgerufen, wenn die RawLimitMin-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von RawLimitMin</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnCoerceUnitText(System.Object)">
      <summary>Wird aufgerufen, wenn die UnitText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von UnitText</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnFormatStringChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der FormatString-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnLanguageChanged(VisiWin.Language.LanguageChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die im Projekt aktive Sprache ändert. </summary>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnLimitMaxChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LimitMax-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnLimitMinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LimitMin-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnLocalizableFormatString_TextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der über LocalizableFormatString festgelegte Formatierungstext z.B. durch die Umschaltung der aktiven Projektsprache ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnLocalizableFormatStringChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableFormatString-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnLocalizableUnitText_TextChanged(VisiWin.Language.LocalizedTextChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich der über LocalizableUnitText festgelegte Text z.B. durch die Umschaltung der aktiven Projektsprache ändert.</summary>
      <param name="e">Objekt vom Typ LocalizedTextChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnLocalizableUnitTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der LocalizableUnitText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnRawLimitMaxChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RawLimitMax-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnRawLimitMinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RawLimitMin-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnRawValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RawValue-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnUseRawValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseRawValue-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnUseVariableLimitsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableLimits-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnUseVariableUnitTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableUnitText-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Value-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnVariableChanged">
      <summary>Wird aufgerufen, wenn sich der Wert der über VariableName festgelegten Prozessvariablen ändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnVariableIsEditingChanged">
      <summary>Wird aufgerufen wenn sich der Editierstatus (Aufruf StartEdit/StopEdit in der intern verwendeten IVariable-Instanz) durch eine Benutzerinteraktion im Steuerelement ändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird aufgerufen wenn sich ein Eigenschaftenwert des intern verwendeten IVariable-Objektes ändert.</summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.SetValueInternal(System.Double,System.Double)">
      <summary>Setzt die Werte der Eigenschaften 'Value' und 'RawValue'. Das IsInSetValueInternal-Flag wird während des Vorgangs auf true gesetzt.</summary>
      <param name="rawValue">Der neue Wert für die 'RawValue'-Eigenschaft.</param>
      <param name="value">Der neue Wert für die 'Value'-Eigenschaft. </param>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.FormatStringProperty">
      <summary>Bezeichnet die FormatString-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.InputDecimalDigitsProperty">
      <summary>Bezeichnet die InputDecimalDigits-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.InputMaskTypeProperty">
      <summary>Bezeichnet die InputMaskType-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.IsLimitMaxExceededProperty">
      <summary>Bezeichnet die IsLimitMaxExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.IsLimitMinExceededProperty">
      <summary>Bezeichnet die IsLimitMinExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.LimitMaxFormattedProperty">
      <summary>Bezeichnet die LimitMaxFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.LimitMaxProperty">
      <summary>Bezeichnet die LimitMax-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.LimitMinFormattedProperty">
      <summary>Bezeichnet die LimitMinFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.LimitMinProperty">
      <summary>Bezeichnet die LimitMin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.LocalizableFormatStringProperty">
      <summary>Bezeichnet die LocalizableFormatString-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.LocalizableUnitTextProperty">
      <summary>Bezeichnet die LocalizableUnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.RawLimitMaxFormattedProperty">
      <summary>Bezeichnet die RawLimitMaxFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.RawLimitMaxProperty">
      <summary>Bezeichnet die RawLimitMax-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.RawLimitMinFormattedProperty">
      <summary>Bezeichnet die RawLimitMinFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.RawLimitMinProperty">
      <summary>Bezeichnet die RawLimitMin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.RawValueFormattedProperty">
      <summary>Bezeichnet die RawValueFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.RawValueProperty">
      <summary>Bezeichnet die RawValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.UnitTextProperty">
      <summary>Bezeichnet die UnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.UseRawValueProperty">
      <summary>Bezeichnet die UseRawValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.UseVariableUnitTextProperty">
      <summary>Bezeichnet die UseVariableUnitText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.ValueFormattedProperty">
      <summary>Bezeichnet die ValueFormatted-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.NumericVarIn.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.NumericVarIn.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ NumericVarIn.</summary>
    </member>
    <member name="T:VisiWin.Controls.PasswordVarIn">
      <summary>Eingabefeld für ein Passwort. </summary>
    </member>
    <member name="P:VisiWin.Controls.PasswordVarIn.PasswordChar">
      <summary>Legt das Zeichen fest, das anstelle des Klartextes im Steuerelement verwendet wird (z.B."*").</summary>
    </member>
    <member name="F:VisiWin.Controls.PasswordVarIn.PasswordCharProperty">
      <summary>Bezeichnet die PasswordChar-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.PasswordVarIn.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ PasswordVarIn.</summary>
    </member>
    <member name="T:VisiWin.Controls.TextVarIn">
      <summary>Ein-/ Ausgabefeld für einen alphanumerischen Prozessvariablenwert (VT_BSTR). </summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarIn.IsInSetValueInternal">
      <summary>Gibt zurück, ob die Value-Eigenschaft gerade intern umgesetzt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarIn.IsTextLengthMaxExceeded">
      <summary>Gibt zurück, ob die für den Variablenwert vorgegebene maximale Anzahl von Zeichen (Eigenschaft TextLengthMax) überschritten wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarIn.IsTextLengthMinExceeded">
      <summary>Gibt zurück, ob die für den Variablenwert vorgegebene minimale Anzahl von Zeichen (Eigenschaft TextLengthMin) unterschritten wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarIn.IsValidatingLimits">
      <summary>Gibt zurück, ob in TextLengthMin und TextLengthMax gültige Grenzen für die Textlänge angegeben sind, die im Steuerelement eine Fehleranzeige bewirken.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarIn.TextLengthMax">
      <summary>Legt die maximale Anzahl von Zeichen im Variablenwert fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarIn.TextLengthMin">
      <summary>Legt die minimale Anzahl von Zeichen im Variablenwert fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarIn.Value">
      <summary>Legt den Wert der Variablen fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss.</summary>
      <returns>Der aus Value ermittelte Wert.</returns>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.InitializeTouchpadMemberCopy(VisiWin.Controls.VariableInputControl)">
      <summary>Initialisiert die TouchpadMember-Kopie. </summary>
      <param name="touchpadCaller">Das die Bildschirmtastatur aufrufende Steuerelement. </param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.InitializeVariableService">
      <summary>Wird ausgeführt, wenn der VariableService initialisiert wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnCoerceIsInputValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsInputValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsInputValid</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnCoerceIsTextLengthMaxExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsTextLengthMaxExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsTextLengthMaxExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnCoerceIsTextLengthMinExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsTextLengthMinExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsTextLengthMinExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnCoerceTextLengthMax(System.Object)">
      <summary>Wird aufgerufen, wenn die TextLengthMax-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextLengthMax</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnCoerceTextLengthMin(System.Object)">
      <summary>Wird aufgerufen, wenn die TextLengthMin-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextLengthMin</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnTextLengthMaxChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextLengthMax-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnTextLengthMinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextLengthMin-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnUseVariableLimitsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableLimits-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Value-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die intern verwendete IVariable-Instanz (Eigenschaft Variable) ändert. </summary>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IsEditingChanged-Ereignis in der intern verwendeten Variableninstanz (Eigenschaft Variable) ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.SetValueInternal(System.String)">
      <summary>Setzt die Value-Eigenschaft. Das IsInSetValueInternal-Flag wird während des Vorgangs auf true gesetzt. </summary>
      <param name="value">Der neue Wert für die Value-Eigenschaft. </param>
    </member>
    <member name="F:VisiWin.Controls.TextVarIn.IsTextLengthMaxExceededProperty">
      <summary>Bezeichnet die IsTextLengthMaxExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextVarIn.IsTextLengthMinExceededProperty">
      <summary>Bezeichnet die IsTextLengthMinExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextVarIn.TextLengthMaxProperty">
      <summary>Bezeichnet die TextLengthMax-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextVarIn.TextLengthMinProperty">
      <summary>Bezeichnet die TextLengthMin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextVarIn.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextVarIn.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TextVarIn.</summary>
    </member>
    <member name="T:VisiWin.Controls.PictureBox">
      <summary>Steuerelement, das eine feste Grafik anzeigt oder in Abhängigkeit von einem Prozessvariablenwert zwischen verschiedenen Grafiken umschaltet.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.Authorization">
      <summary>Gibt einen Verweis auf den intern verwendeten Authorization-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben und das Steuerelement sichtbar oder aktiv.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit. </summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.BlinkService">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn IsBlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.BlinkTimer">
      <summary>Gibt einen Verweis auf den intern verwendeten BlinkTimer zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.CanRecipeEdit">
      <summary>Legt fest, ob der Variablenwert über dieses Steuerelement im Rezeptpuffer bearbeitet werden kann. </summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.Image">
      <summary>Legt eine externe Grafikdatei für das Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.IsAttached">
      <summary>Gibt zurück, ob die Variable beim Variablenkern über AttachVariable angebunden wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.IsAttaching">
      <summary>Gibt zurück ob die in VariableName angegebene Prozessvariable gerade angemeldet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. </summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.IsBound">
      <summary>Gibt an, ob das Steuerelement über die VariableName-Eigenschaft mit einer gültigen Prozessvariablen verknüpft ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.IsDeferredActivationEnabled">
      <summary>Legt fest, ob die verzögerte Variablenaktivierung für dieses Steuerelement angeschaltet sein soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.IsQualityGood">
      <summary>Gibt zurück, ob die Statusinformationen (Quality-Flag) der verknüpften Prozessvariablen eine fehlerfreie Übertragung signalisieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.IsRecipeEditing">
      <summary>Gibt zurück, ob der Wert der Variablen aktuell über den Rezeptpuffer bezogen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.IsVariableValid">
      <summary>Gibt zurück, ob die in VariableName angegebene Prozessvariable gültig ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.StateMode">
      <summary>Legt fest, wie der Prozessvariablenwert beim Vergleich mit den Werten der in SymbolList angegebenen Zuordnungstabelle interpretiert wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.Stretch">
      <summary>Legt fest, in welche Richtungen das Bild beim Laden der Grafik oder bei einer Größenänderung des Steuerelementes gestreckt werden darf.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.StretchDirection">
      <summary>Legt fest, ob sich das geladene Bild bei einer Größenänderung des Steuerelementes vergrößern und / oder verkleinern lässt.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.Symbol">
      <summary>Legt eine Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.SymbolList">
      <summary>Legt eine Zuordnungstabelle fest, die zur Transformation des Prozessvariablenwertes auf die Symbol-Eigenschaft verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.SymbolResourceKey">
      <summary>Legt über die Angabe eines Ressourcenschlüssels die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.UserManagementService">
      <summary>Gibt einen Verweis auf den intern verwendeten UserManagementService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.Variable">
      <summary>Gibt einen Verweis auf den intern verwendeten Variable-Objekt zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.VariableComment">
      <summary>Gibt den Kommentar zur verknüpften Prozessvariablen aus der Projektdatenbank zurück. </summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.VariableName">
      <summary>Legt den Namen der verknüpften Prozessvariablen fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.VariableService">
      <summary>Gibt einen Verweis auf den intern verwendeten VariableService zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.PictureBox.VariableText">
      <summary>Gibt den sprachumschaltbaren Text in der aktuellen Projektsprache zurück, der in der Projektdatenbank für die verknüpfte Prozessvariable festgelegt wurde.</summary>
    </member>
    <member name="E:VisiWin.Controls.PictureBox.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert, die eine Reaktion im Steuerelement erfordert.</summary>
      <param name="sender">Objekt vom Typ PictureBox, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.PictureBox.ValueChanged">
      <summary>Wird ausgelöst, sobald sich der Wert der in VariableName zugeordneten Prozessvariablen ändert. </summary>
      <param name="sender">Objekt vom Typ PictureBox, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.AttachVariable(System.Nullable{System.Boolean})">
      <summary>Meldet die im Steuerelement verwendete Prozessvariable zur Kommunikation an.</summary>
      <param name="useDeferredActivation">Gibt an, ob die verzögerte Variablenaktivierung benutzt werden soll.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.DetachVariable">
      <summary>Meldet die im Steuerelement verwendete Prozessvariable im Variablenkern ab.</summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.GetValuePropertyValue">
      <summary>Wird aufgerufen, um den Wert der Value-Eigenschaft zu lesen.</summary>
      <returns>Wert der Value-Eigenschaft.</returns>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.InitializeBlinkService">
      <summary>Wird ausgeführt, um den BlinkService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.InitializeUserManagementService">
      <summary>Wird aufgerufen, um den UserManagementService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.InitializeVariableService">
      <summary>Wird ausgeführt, um den VariableService zu initialisieren.</summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnAuthorizationChanged(VisiWin.UserManagement.AuthorizationEventArgs)">
      <summary>Wird aufgerufen, wenn sich der Freigabestatus (Eigenschaft IsAuthorized) geändert hat.</summary>
      <param name="e">Objekt vom Typ AuthorizationEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnAuthorizationRightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die AuthorizationRight-Eigenschaft geändert hat. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnBlinkCycleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die BlinkCycle-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnBlinkTimerDoBlink(VisiWin.Blink.BlinkEventArgs)">
      <summary>Wird ausgeführt, wenn sich die Blinkphase ändert.</summary>
      <param name="e">Objekt vom Typ BlinkEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCanRecipeEditChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die CanRecipeEdit-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceIsAttached(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAttached-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAttached</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceIsAuthorized(System.Object)">
      <summary>Wird aufgerufen, wenn die IsAuthorized-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsAuthorized</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceIsBound(System.Object)">
      <summary>Wird aufgerufen, wenn die IsBound-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsBound</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceIsEnabled(System.Object)">
      <summary>Wird aufgerufen, wenn die IsEnabled-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsEnabled</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceIsQualityGood(System.Object)">
      <summary>Wird aufgerufen, wenn die IsQualityGood-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsQualityGood</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceIsRecipeEditing(System.Object)">
      <summary>Wird aufgerufen, wenn die IsRecipeEditing-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsRecipeEditing</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceIsVariableValid(System.Object)">
      <summary>Wird aufgerufen, wenn die IsVariableValid-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsVariableValid</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceVariableComment(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableComment-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableComment</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceVariableText(System.Object)">
      <summary>Wird aufgerufen, wenn die VariableText-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von VariableText</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnCoerceVisibility(System.Object)">
      <summary>Wird aufgerufen, wenn die Visibility-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von Visibility</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnIsBlinkEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich die IsBlinkEnabled-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnPropertyChanged(System.String)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert.</summary>
      <param name="propertyName">Name der geänderten Eigenschaft.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnUnloaded">
      <summary>Wird ausgeführt, wenn das Unloaded-Ereignis ausgeführt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die Variablen-Instanz ändert.</summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IVariable.IsEditingChanged-Ereignis der Variable ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnVariableNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der VariableName-Eigenschaft ändert.</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnVariablePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft der zugeordneten Variablen ändert. </summary>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.CanRecipeEditProperty">
      <summary>Bezeichnet die CanRecipeEdit-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.ImageProperty">
      <summary>Bezeichnet die Image-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.IsAttachedProperty">
      <summary>Bezeichnet die IsAttached-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.IsBoundProperty">
      <summary>Bezeichnet die IsBound-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.IsDeferredActivationEnabledProperty">
      <summary>Bezeichnet die IsDeferredActivationEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.IsQualityGoodProperty">
      <summary>Bezeichnet die IsQualityGood-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.IsRecipeEditingProperty">
      <summary>Bezeichnet die IsRecipeEditing-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.IsVariableValidProperty">
      <summary>Bezeichnet die IsVariableValid-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.StateModeProperty">
      <summary>Bezeichnet die StateMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.StretchDirectionProperty">
      <summary>Bezeichnet die StretchDirection-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.StretchProperty">
      <summary>Bezeichnet die Stretch-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.SymbolListProperty">
      <summary>Bezeichnet die SymbolList-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.SymbolResourceKeyProperty">
      <summary>Bezeichnet die SymbolResourceKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.VariableCommentProperty">
      <summary>Bezeichnet die VariableComment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.PictureBox.VariableTextProperty">
      <summary>Bezeichnet die VariableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.PictureBox.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ PictureBox.</summary>
    </member>
    <member name="T:VisiWin.Controls.RadioSwitch">
      <summary>Steuerelement, das einen prozessvariablenwertgebundenen Schalter in einem Feld aus mehreren Schaltern repräsentiert</summary>
    </member>
    <member name="M:VisiWin.Controls.RadioSwitch.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ RadioSwitch.</summary>
    </member>
    <member name="T:VisiWin.Controls.Region">
      <summary>Container zum dynamischen Laden/Anzeigen einer View. </summary>
    </member>
    <member name="P:VisiWin.Controls.Region.DesignTimeView">
      <summary>Gibt den Namen der View an, die in der Designansicht in die Region geladen wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.Region.Facade">
      <summary>Nur für interne Verwendung: Verweist auf ein Objekt, dass das Laden einer View zur Designzeit erlaubt. </summary>
    </member>
    <member name="P:VisiWin.Controls.Region.StartView">
      <summary>Gibt den Namen der View an, die direkt nach dem Laden der Region geladen wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.Region.ViewName">
      <summary>Gibt den Namen der View an, die dynamisch (z.B. über eine SetViewAction) in die Region geladen wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.Region.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen. </summary>
    </member>
    <member name="M:VisiWin.Controls.Region.OnContentChanged(System.Object,System.Object)">
      <summary>Wird aufgerufen, wenn die Content-Eigenschaft geändert wird.</summary>
      <param name="oldContent">Der alte Wert der Content-Eigenschaft.</param>
      <param name="newContent">Der neue Wert der Content-Eigenschaft.</param>
    </member>
    <member name="M:VisiWin.Controls.Region.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="F:VisiWin.Controls.Region.ViewNameProperty">
      <summary>Bezeichnet die ViewName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.Region.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Region.</summary>
    </member>
    <member name="T:VisiWin.Controls.ResetBitAction">
      <summary>Action, die das Bit einer Variablen auf 0 setzt. </summary>
    </member>
    <member name="P:VisiWin.Controls.ResetBitAction.BitNumber">
      <summary>(0-indizierte) Angabe des zu manipulierenden Bits. Ist die Variable vom Typ VT_Bool, wird die Angabe ignoriert.</summary>
    </member>
    <member name="P:VisiWin.Controls.ResetBitAction.ReadFromDevice">
      <summary>Legt fest, woher der zu manipulierende Wert gelesen werden soll. True: synchrones Lesen aus dem Kommunikationskanal.False: Rückgabe des zuletzt gepufferten Wertes aus dem Clientcache oder dem Variablenkern.</summary>
    </member>
    <member name="P:VisiWin.Controls.ResetBitAction.VariableName">
      <summary>Bezeichner der zu manipulierenden Prozessvariablen. Die Prozessvariable kann über den Variablenauswahldialog gewählt oder über manuell in XAML angegeben werden (siehe "Syntax zum Zugriff auf Variablen").</summary>
    </member>
    <member name="M:VisiWin.Controls.ResetBitAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.ResetBitAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.ResetBitAction.BitNumberProperty">
      <summary>Bezeichnet die BitNumber-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ResetBitAction.ReadFromDeviceProperty">
      <summary>Bezeichnet die ReadFromDevice-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ResetBitAction.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ResetBitAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ResetBitAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.Scale">
      <summary>Steuerelement zur Darstellung einer Skala.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.AutoAlignment">
      <summary>Legt fest, ob das Steuerelement die automatische Skalierung verwendet.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.Display">
      <summary>Legt fest, welche Bestandteile der Skala gezeichnet werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.DivisionType">
      <summary>Gibt die Schrittweiten an, die bei der automatischen Einteilung der Skala verwendet werden können. </summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.FormatString">
      <summary>Legt die Formatierung für die Skalenwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.LimitVisibility">
      <summary>Legt fest, wie die Anzeige der Skalenwerte an den Skalenenden behandelt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.LineWidthMajor">
      <summary>Legt die Breite der Linien des Hauptrasters fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.LineWidthMinor">
      <summary>Legt die Breite der Linien des Nebenrasters fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.MaxValue">
      <summary>Legt den Endwert der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.MinValue">
      <summary>Legt den Startwert der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.RulerBaseLine">
      <summary>Legt fest, ob der Skalenbalken (senkrecht zu den Rasterlinien angelegte Linie) gezeichnet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.RulerBaseLineBrush">
      <summary>Legt den Pinsel für den Skalenbalken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.RulerMajorAlign">
      <summary>Legt die Einteilung der Hauptrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.RulerMajorLineBrush">
      <summary>Legt den Pinsel für die Hauptrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.RulerMinorAlign">
      <summary>Legt die Einteilung der Nebenrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.RulerMinorLineBrush">
      <summary>Legt den Pinsel für die Nebenrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.RulerPadding">
      <summary>Legt den Abstand des Skalenbalkens zum Rand des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.RulerSpacing">
      <summary>Legt den minimalen Abstand zwischen den Skalenlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.ScaleAlign">
      <summary>Legt die Einteilung der Skalenwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.ScaleBrush">
      <summary>Legt den Pinsel zum Zeichnen der Skalenwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.ScalePoints">
      <summary>Gibt eine Liste der angezeigten Skalenwerte zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.ScalePosition">
      <summary>Gibt zurück, welche Ausrichtung die Skala im Steuerelement hat.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.ScaleSizeRatio">
      <summary>Legt das Größenverhältnis der Bereiche für die Skalenlinien und die Skalenwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.ScaleSpacing">
      <summary>Legt den minimalen Abstand zwischen den Skalenwerten fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.ScaleType">
      <summary>Legt fest, ob die Skalenaufteilung linear oder logarithmisch erfolgt.</summary>
    </member>
    <member name="P:VisiWin.Controls.Scale.ValueDirection">
      <summary>Legt fest, ob die Skala auf- oder absteigend beschriftet werden soll. </summary>
    </member>
    <member name="E:VisiWin.Controls.Scale.BeginInitialize">
      <summary>Wird ausgelöst, wenn dem Objekt über BeginInit der Start des Initialisierungsvorgang signalisiert wurde.</summary>
      <param name="sender">Objekt vom Typ Scale, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.Scale.EndInitialize">
      <summary>Wird ausgelöst, wenn dem Objekt über EndInit das Ende des  Initialisierungsvorgang signalisiert wurde.</summary>
      <param name="sender">Objekt vom Typ Scale, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.Scale.BeginInit">
      <summary>Startet den Initialisierungsprozess für dieses Element. </summary>
    </member>
    <member name="M:VisiWin.Controls.Scale.CalculatePoints">
      <summary>Errechnet aus den Einstellungen des Steuerelementes die Skalenaufteilung.</summary>
    </member>
    <member name="M:VisiWin.Controls.Scale.EndInit">
      <summary>Gibt an, dass der Initialisierungsprozess für das Element abgeschlossen ist. </summary>
    </member>
    <member name="M:VisiWin.Controls.Scale.GetFormattedText(System.String)">
      <summary>Errechnet die Größe des übergebenen Textes mit der im Steuerelement verwendeten Schriftart. </summary>
      <returns>Die errechnete Größe.</returns>
      <param name="text">Der Text, dessen Größe zu ermitteln ist.</param>
    </member>
    <member name="M:VisiWin.Controls.Scale.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.Scale.OnMaxValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der MaxValue-Eigenschaft ändert.</summary>
      <param name="d">Das auslösende DependencyObject.</param>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Scale.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Scale.OnRulerBaseLineBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgelöst, wenn sich der Wert der RulerBaseLineBrush-Eigenschaft geändert hat.</summary>
      <param name="d">Das auslösende DependencyObject.</param>
      <param name="e">Weitere Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Scale.OnRulerMajorLineBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgelöst, wenn sich der Wert der RulerMajorLineBrush-Eigenschaft geändert hat.</summary>
      <param name="d">Das auslösende DependencyObject.</param>
      <param name="e">Weitere Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Scale.OnRulerMinorLineBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgelöst, wenn sich der Wert der RulerMinorLineBrush-Eigenschaft geändert hat.</summary>
      <param name="d">Das auslösende DependencyObject.</param>
      <param name="e">Weitere Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.Scale.PositionToValue(System.Double)">
      <summary>Wandelt die übergebene Koordinate in den Skalenwert, der an der angegebenen Position zu erwarten ist.</summary>
      <returns>Der zu erwartende Skalenwert oder 0, wenn kein Skalenwert  an der angegebenen Position zu erwarten ist.</returns>
      <param name="position">Die in Verlaufsrichtung der Skala angegebene Koordinate.</param>
    </member>
    <member name="M:VisiWin.Controls.Scale.ValueToPosition(System.Object)">
      <summary>Wandelt den übergebenen Skalenwert in eine Koordinate, an dem der Skalenwert im Steuerelement zu erwarten ist.</summary>
      <returns>Je nach Ausrichtung der Skala eine X- oder Y-Koordinate, die ausgehend von der oberen linken Ecke des Steuerelementes den übergebenen Skalenwert repräsentiert.</returns>
      <param name="val">Skalenwert, dessen Koordinate zu suchen ist.</param>
    </member>
    <member name="F:VisiWin.Controls.Scale.AutoAlignmentProperty">
      <summary>Bezeichnet die AutoAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.FormatStringProperty">
      <summary>Bezeichnet die FormatString-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.LineWidthMajorProperty">
      <summary>Bezeichnet die LineWidthMajor-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.LineWidthMinorProperty">
      <summary>Bezeichnet die LineWidthMinor-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.MaxValueProperty">
      <summary>Bezeichnet die MaxValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.MinValueProperty">
      <summary>Bezeichnet die MinValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.RulerBaseLineBrushProperty">
      <summary>Bezeichnet die RulerBaseLineBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.RulerMajorAlignProperty">
      <summary>Bezeichnet die RulerMajorAlign-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.RulerMajorLineBrushProperty">
      <summary>Bezeichnet die RulerMajorLineBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.RulerMinorAlignProperty">
      <summary>Bezeichnet die RulerMinorAlign-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.RulerMinorLineBrushProperty">
      <summary>Bezeichnet die RulerMinorLineBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.RulerPaddingProperty">
      <summary>Bezeichnet die RulerPadding-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.ScaleBrushProperty">
      <summary>Bezeichnet die ScaleBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.ScalePositionProperty">
      <summary>Bezeichnet die ScalePosition-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.ScaleSizeRatioProperty">
      <summary>Bezeichnet die ScaleSizeRatio-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.Scale.ValueDirectionProperty">
      <summary>Bezeichnet die ValueDirection-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.Scale.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ Scale.</summary>
    </member>
    <member name="T:VisiWin.Controls.ScaleDateTimePoint">
      <summary>Beschreibt einen Skalenpunkt auf einer Zeitachse.</summary>
    </member>
    <member name="P:VisiWin.Controls.ScaleDateTimePoint.Value">
      <summary>Legt den Datums-/ Zeitwert des Skalenpunktes fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.ScaleDateTimePoint.Clone">
      <summary>Erzeugt eine Kopie dieser Instanz.</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWin.Controls.ScaleDateTimePoint.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene Objekt und die aktuelle Instanz gleich sind. </summary>
      <returns>true, wenn das angegebene Objekt gleich der aktuellen Instanz ist, andernfalls false.</returns>
      <param name="obj">Das Objekt, das mit der aktuellen Instanz verglichen werden soll. </param>
    </member>
    <member name="M:VisiWin.Controls.ScaleDateTimePoint.GetHashCode">
      <summary>Gibt einen Hashcode für das Objekt zurück.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt. </returns>
    </member>
    <member name="M:VisiWin.Controls.ScaleDateTimePoint.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ScaleDateTimePoint.</summary>
    </member>
    <member name="T:VisiWin.Controls.ScalePointBase">
      <summary>Basisklasse für einen Skalenpunkt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ScalePointBase.IsMinMaxValue">
      <summary>Legt fest, ob der Skalenpunkt ein Skalenende (Minimum/ Maximum) beschreibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ScalePointBase.Major">
      <summary>Legt fest, ob der Skalenpunkt eine Hauptrasterlinie beschreibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ScalePointBase.Pos">
      <summary>Legt die Position des Skalenpunktes im Container fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ScalePointBase.Text">
      <summary>Legt den Text des Skalenpunktes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.ScalePointBase.Visible">
      <summary>Legt fest, ob der Skalenpunkt sichtbar ist.</summary>
    </member>
    <member name="M:VisiWin.Controls.ScalePointBase.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ScalePointBase.</summary>
    </member>
    <member name="T:VisiWin.Controls.ScalePointCollection">
      <summary>Liste von Skalenpunkten.</summary>
    </member>
    <member name="M:VisiWin.Controls.ScalePointCollection.BeginInit">
      <summary>Startet den Initialisierungsprozess für dieses Element.</summary>
    </member>
    <member name="M:VisiWin.Controls.ScalePointCollection.EndInit">
      <summary>Gibt an, dass der Initialisierungsprozess für das Element abgeschlossen ist. </summary>
    </member>
    <member name="M:VisiWin.Controls.ScalePointCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Wird aufgerufen, wenn in der Liste ein Element hinzugefügt, ausgetauscht oder gelöscht wurde.</summary>
      <param name="e">Objekt vom Typ NotifyCollectionChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.ScalePointCollection.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ScalePointCollection.</summary>
    </member>
    <member name="T:VisiWin.Controls.SetBitAction">
      <summary>Action, die das Bit einer Variablen auf 1 setzt. </summary>
    </member>
    <member name="P:VisiWin.Controls.SetBitAction.BitNumber">
      <summary>(0-indizierte) Angabe des zu manipulierenden Bits. Ist die Variable vom Typ VT_Bool, wird die Angabe ignoriert.</summary>
    </member>
    <member name="P:VisiWin.Controls.SetBitAction.ReadFromDevice">
      <summary>Legt fest, woher der zu manipulierende Wert gelesen werden soll. True: synchrones Lesen aus dem Kommunikationskanal.False: Rückgabe des zuletzt gepufferten Wertes aus dem Clientcache oder dem Variablenkern.</summary>
    </member>
    <member name="P:VisiWin.Controls.SetBitAction.VariableName">
      <summary>Bezeichner der zu manipulierenden Prozessvariablen. Die Prozessvariable kann über den Variablenauswahldialog gewählt oder über manuell in XAML angegeben werden (siehe "Syntax zum Zugriff auf Variablen").</summary>
    </member>
    <member name="M:VisiWin.Controls.SetBitAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.SetBitAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.SetBitAction.BitNumberProperty">
      <summary>Bezeichnet die BitNumber-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SetBitAction.ReadFromDeviceProperty">
      <summary>Bezeichnet die ReadFromDevice-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SetBitAction.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.SetBitAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ SetBitAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.SetVariableAction">
      <summary>Action, die den Wert einer Variablen setzt.</summary>
    </member>
    <member name="P:VisiWin.Controls.SetVariableAction.ReadFromDevice">
      <summary>Legt fest, woher der zu manipulierende Wert gelesen werden soll. True: synchrones Lesen aus dem Kommunikationskanal.False: Rückgabe des zuletzt gepufferten Wertes aus dem Clientcache oder dem Variablenkern.</summary>
    </member>
    <member name="P:VisiWin.Controls.SetVariableAction.Value">
      <summary>Neuer Wert für die Prozessvariable oder der (durch führendes "@"-Zeichen gekennzeichnete) Name einer anderen Prozessvariablen, deren Wert in die Prozessvariable kopiert werden soll.</summary>
    </member>
    <member name="P:VisiWin.Controls.SetVariableAction.VariableName">
      <summary>Bezeichner der zu manipulierenden Prozessvariablen. Die Prozessvariable kann über den Variablenauswahldialog gewählt oder über manuell in XAML angegeben werden (siehe "Syntax zum Zugriff auf Variablen").</summary>
    </member>
    <member name="M:VisiWin.Controls.SetVariableAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.SetVariableAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.SetVariableAction.ReadFromDeviceProperty">
      <summary>Bezeichnet die ReadFromDevice-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SetVariableAction.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SetVariableAction.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.SetVariableAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ SetVariableAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.SetViewAction">
      <summary>Action, die eine View in die angegebene Region lädt.</summary>
    </member>
    <member name="P:VisiWin.Controls.SetViewAction.F10Handled">
      <summary>Legt fest, ob das F10-Tastaturereignis nach der Bearbeitung weitergereicht wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.SetViewAction.Key">
      <summary>Gibt eine Taste an, die zusammen mit der ModifierKeys-Eigenschaft den Shortcut zum Auslösen der Action über die Tastatur bildet. </summary>
    </member>
    <member name="P:VisiWin.Controls.SetViewAction.ModifierKeys">
      <summary>Legt eine oder mehrere Umschalttasten fest, die zusammen mit der Key-Eigenschaft den Shortcut zum Auslösen der Action über die Tastatur bildet. </summary>
    </member>
    <member name="P:VisiWin.Controls.SetViewAction.Parameter">
      <summary>Parameter. Wird beim Aufruf der Action in den ObjectStore geschrieben. </summary>
    </member>
    <member name="P:VisiWin.Controls.SetViewAction.RegionName">
      <summary>Name der Region, in die die View geladen werden soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.SetViewAction.ViewName">
      <summary>Name der View, die geladen werden soll. </summary>
    </member>
    <member name="M:VisiWin.Controls.SetViewAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Angabe der Parameter-Eigenschaft. </param>
    </member>
    <member name="M:VisiWin.Controls.SetViewAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="M:VisiWin.Controls.SetViewAction.OnDetaching">
      <summary>Wird aufgerufen, wenn die Aktion vom "AssociatedObject" getrennt wird. Der Aufruf erfolgt vor dem eigentlichen Trennvorgang. </summary>
    </member>
    <member name="F:VisiWin.Controls.SetViewAction.KeyProperty">
      <summary>Bezeichnet die Key-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SetViewAction.ModifierKeysProperty">
      <summary>Bezeichnet die ModifierKeys-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SetViewAction.ParameterProperty">
      <summary>Bezeichnet die Parameter-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SetViewAction.RegionNameProperty">
      <summary>Bezeichnet die RegionName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SetViewAction.ViewNameProperty">
      <summary>Bezeichnet die ViewName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.SetViewAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ SetViewAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.ShowAlphaTouchpadAction">
      <summary>Action, die die Anzeige der alphanumerischen Bildschirmtastatur bewirkt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ShowAlphaTouchpadAction.TouchpadName">
      <summary>Name der anzuzeigenden Bildschirmtastatur.</summary>
    </member>
    <member name="M:VisiWin.Controls.ShowAlphaTouchpadAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.ShowAlphaTouchpadAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.ShowAlphaTouchpadAction.TouchpadNameProperty">
      <summary>Bezeichnet die TouchpadName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ShowAlphaTouchpadAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ShowAlphaTouchpadAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.ShowControlPanelAction">
      <summary>Action, die den angegebenen Dialog aus der Systemsteuerung öffnet.</summary>
    </member>
    <member name="P:VisiWin.Controls.ShowControlPanelAction.Arguments">
      <summary>Bestimmt den aufzurufenden Dialog aus der Systemsteuerung.</summary>
    </member>
    <member name="M:VisiWin.Controls.ShowControlPanelAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.ShowControlPanelAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.ShowControlPanelAction.ArgumentsProperty">
      <summary>Bezeichnet die Arguments-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ShowControlPanelAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ShowControlPanelAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.ShowDialogAction">
      <summary>Action, die das angegebene Fenster (Window) öffnet.</summary>
    </member>
    <member name="P:VisiWin.Controls.ShowDialogAction.DialogName">
      <summary>Typname des zu öffnenden Fensters.</summary>
    </member>
    <member name="P:VisiWin.Controls.ShowDialogAction.ParamList">
      <summary>Feld von Parametern. </summary>
    </member>
    <member name="M:VisiWin.Controls.ShowDialogAction.Invoke(System.Object)">
      <summary>Führt die Action aus.</summary>
      <param name="parameter">Angabe der ParamList-Eigenschaft. Der Eigenschaftenwert wird in den ObjectStore geschrieben.</param>
    </member>
    <member name="M:VisiWin.Controls.ShowDialogAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.ShowDialogAction.DialogNameProperty">
      <summary>Bezeichnet die DialogName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ShowDialogAction.ParamListProperty">
      <summary>Bezeichnet die ParamList-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ShowDialogAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ShowDialogAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.ShowNumericTouchpadAction">
      <summary>Action, die die Anzeige der numerischen Bildschirmtastatur bewirkt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ShowNumericTouchpadAction.TouchpadName">
      <summary>Name der anzuzeigenden Bildschirmtastatur.</summary>
    </member>
    <member name="M:VisiWin.Controls.ShowNumericTouchpadAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.ShowNumericTouchpadAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.ShowNumericTouchpadAction.TouchpadNameProperty">
      <summary>Bezeichnet die TouchpadName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ShowNumericTouchpadAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ShowNumericTouchpadAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.ShowTaskManagerAction">
      <summary>Action, die den Windows-Taskmanager aufruft.  </summary>
    </member>
    <member name="M:VisiWin.Controls.ShowTaskManagerAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.ShowTaskManagerAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="M:VisiWin.Controls.ShowTaskManagerAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ShowTaskManagerAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.SplashWindow">
      <summary>Implementierung eines SplashWindows.</summary>
    </member>
    <member name="P:VisiWin.Controls.SplashWindow.FadeoutTime">
      <summary>Gibt / Setzt die Zeit wie lang die Fadeout-Animation läuft</summary>
    </member>
    <member name="P:VisiWin.Controls.SplashWindow.UseFadeoutAnimation">
      <summary>Gibt / Setzt ob eine Fadeout-Animation benutzt wird</summary>
    </member>
    <member name="M:VisiWin.Controls.SplashWindow.Fadeout">
      <summary>Läst das Window animiert verschwinden (Fadeout)</summary>
    </member>
    <member name="M:VisiWin.Controls.SplashWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Wird aufgerufen, wenn das Fenster ein nicht behandeltes KeyDown-Ereignis erreicht.</summary>
      <param name="e">Objekt vom Typ KeyEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.SplashWindow.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ SplashWindow.</summary>
    </member>
    <member name="T:VisiWin.Controls.State">
      <summary>Beschreibt eine Zuordnung eines Objektes (Bild/ Pinsel/ Text/ Zahl/ Objekt) zu einem Wert oder Wertebereich.</summary>
    </member>
    <member name="P:VisiWin.Controls.State.Brush">
      <summary>Legt einen Pinsel fest, der zurückgegeben wird, wenn die Bedingung in diesem State-Objekt eintrifft.</summary>
    </member>
    <member name="P:VisiWin.Controls.State.Index">
      <summary>Legt einen numerischen Wert fest, der zurückgegeben wird, wenn die Bedingung in diesem State-Objekt eintrifft.</summary>
    </member>
    <member name="P:VisiWin.Controls.State.Symbol">
      <summary>Legt ein DataTemplate für ein Symbol fest, das zurückgegeben wird, wenn die Bedingung in diesem State-Objekt eintrifft.</summary>
    </member>
    <member name="P:VisiWin.Controls.State.Tag">
      <summary>Legt ein beliebiges Objekt fest, das zurückgegeben wird, wenn die Bedingung in diesem State-Objekt eintrifft.</summary>
    </member>
    <member name="P:VisiWin.Controls.State.Text">
      <summary>Legt einen Text fest, der zurückgegeben wird, wenn die Bedingung in diesem State-Objekt eintrifft.</summary>
    </member>
    <member name="M:VisiWin.Controls.State.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.State.BrushProperty">
      <summary>Bezeichnet die Brush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.State.IndexProperty">
      <summary>Bezeichnet die Index-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.State.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.State.TagProperty">
      <summary>Bezeichnet die Tag-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.State.TextProperty">
      <summary>Bezeichnet die Text-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.State.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ State.</summary>
    </member>
    <member name="T:VisiWin.Controls.StateCollection">
      <summary>Beschreibt eine Zuordnungstabelle, in der die State-Werte der Elemente mit einem Eingangswert verglichen werden und aus der bei Übereinstimmung mit einem State-Wert beschreibende Werte, wie z.B. Pinsel, Texte oder Bilder gelesen werden. </summary>
    </member>
    <member name="M:VisiWin.Controls.StateCollection.FirstOrDefaultByBrush(System.Windows.Media.Brush)">
      <summary>Gibt das erste State-Objekt zurück, das den übergebenen Pinsel in der Brush-Eigenschaft enthält.</summary>
      <returns>Der gesuchten State oder der Defaultwert von State, wenn kein State der Liste den abgefragten Pinsel enthält. </returns>
      <param name="brush">Brush, zu dem der State gesucht wird.</param>
    </member>
    <member name="M:VisiWin.Controls.StateCollection.FirstOrDefaultByIndex(System.Double)">
      <summary>Gibt das erste State-Objekt zurück, das den übergebenen numerischen Wert in der Index-Eigenschaft enthält.</summary>
      <returns>Der gesuchten State oder der Defaultwert von State, wenn kein State der Liste den abgefragten Index-Wert enthält. </returns>
      <param name="index">Index-Wert, zu dem der State gesucht wird.</param>
    </member>
    <member name="M:VisiWin.Controls.StateCollection.FirstOrDefaultBySymbol(System.Windows.DataTemplate)">
      <summary>Gibt das erste State-Objekt zurück, das die übergebene Grafik in der Symbol-Eigenschaft enthält.</summary>
      <returns>Der gesuchten State oder der Defaultwert von State, wenn kein State der Liste die abgefragte Grafik enthält. </returns>
      <param name="symbol">Grafik, zu der der State gesucht wird.</param>
    </member>
    <member name="M:VisiWin.Controls.StateCollection.FirstOrDefaultByText(System.String)">
      <summary>Gibt das erste State-Objekt zurück, das den übergebenen Text in der Text-Eigenschaft enthält.</summary>
      <returns>Der gesuchten State oder der Defaultwert von State, wenn kein State der Liste den abgefragten Text enthält. </returns>
      <param name="text">Text, zu dem der State gesucht wird.</param>
    </member>
    <member name="M:VisiWin.Controls.StateCollection.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ StateCollection.</summary>
    </member>
    <member name="T:VisiWin.Controls.StateExtensions">
      <summary>Definiert Erweiterungsmethoden für das State-Objekt. </summary>
    </member>
    <member name="M:VisiWin.Controls.StateExtensions.Contains(VisiWin.Controls.State,System.Int64)">
      <summary>Prüft, ob der angegebene State dem übergebenen Wert zugeordnet ist.</summary>
      <returns>true, wenn der Wert dem State zugeordnet ist, ansonsten false. </returns>
      <param name="state">Zu prüfendes State-Objekt.</param>
      <param name="stateValue">Zu prüfender Wert.</param>
    </member>
    <member name="M:VisiWin.Controls.StateExtensions.Contains(VisiWin.Controls.StateBase,System.Double,VisiWin.Controls.StateMode)">
      <summary>Prüft mit Angabe eines StateMode, ob der angegebene State dem übergebenen Wert zugeordnet ist.</summary>
      <returns>true, wenn der Wert dem State zugeordnet ist, ansonsten false. </returns>
      <param name="state">Zu prüfendes State-Objekt.</param>
      <param name="stateValue">Zu prüfender Wert.</param>
      <param name="stateMode">Interpretation (BitNumber oder Value) des stateValue.</param>
    </member>
    <member name="M:VisiWin.Controls.StateExtensions.FirstMinimum(VisiWin.Controls.StateBase)">
      <summary>Gibt das Minimum der ersten Wertebereichsangabe in der Value-Eigenschaft des State zurück.</summary>
      <returns>Minimum der ersten Wertebereichsangabe.</returns>
      <param name="state">State-Objekt, in dem der abgefragte Wert zu lesen ist.</param>
    </member>
    <member name="M:VisiWin.Controls.StateExtensions.FirstMinimum(VisiWin.Controls.StateBase,VisiWin.Controls.StateMode)">
      <summary>Gibt das Minimum der ersten Wertebereichsangabe in der Value-Eigenschaft des State zurück.</summary>
      <returns>Minimum der ersten Wertebereichsangabe.</returns>
      <param name="state">State-Objekt, in dem der abgefragte Wert zu lesen ist.</param>
      <param name="stateMode">Verwendeter StateMode</param>
    </member>
    <member name="T:VisiWin.Controls.StatePresenter">
      <summary>Steuerelement, das anhand einer Bedingungsliste aus einem Variablenwert eine Farbe, ein Symbol, einen numerischen Wert, einen Text oder ein Objekt generiert.</summary>
    </member>
    <member name="P:VisiWin.Controls.StatePresenter.CurrentState">
      <summary>Gibt den anhand von Variablenwert und Bedingungsliste ermittelten State zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.StatePresenter.StateBrush">
      <summary>Gibt den Brush-Eigenschaftenwert von CurrentState zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.StatePresenter.StateIndex">
      <summary>Gibt den Index-Eigenschaftenwert von CurrentState zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.StatePresenter.States">
      <summary>Legt die Bedingungsliste fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.StatePresenter.StateSymbol">
      <summary>Gibt den Symbol-Eigenschaftenwert von CurrentState zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.StatePresenter.StateTag">
      <summary>Gibt den Tag-Eigenschaftenwert von CurrentState zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.StatePresenter.StateText">
      <summary>Gibt den Text-Eigenschaftenwert von CurrentState zurück.</summary>
    </member>
    <member name="M:VisiWin.Controls.StatePresenter.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="F:VisiWin.Controls.StatePresenter.CurrentStateProperty">
      <summary>Bezeichnet die CurrentState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.StatePresenter.StateBrushProperty">
      <summary>Bezeichnet die StateBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.StatePresenter.StateIndexProperty">
      <summary>Bezeichnet die StateIndex-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.StatePresenter.StateSymbolProperty">
      <summary>Bezeichnet die StateSymbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.StatePresenter.StateTagProperty">
      <summary>Bezeichnet die StateTag-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.StatePresenter.StateTextProperty">
      <summary>Bezeichnet die StateText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.StatePresenter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ StatePresenter.</summary>
    </member>
    <member name="T:VisiWin.Controls.SymbolPresenter">
      <summary>Steuerelement zur Anzeige einer Grafik.</summary>
    </member>
    <member name="P:VisiWin.Controls.SymbolPresenter.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.SymbolPresenter.Symbol">
      <summary>Legt über eine Ressourcenbindung die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.SymbolPresenter.SymbolResourceKey">
      <summary>Legt über die Angabe eines Ressourcenschlüssels die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="F:VisiWin.Controls.SymbolPresenter.CornerRadiusProperty">
      <summary>Bezeichnet die CornerRadius-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SymbolPresenter.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.SymbolPresenter.SymbolResourceKeyProperty">
      <summary>Bezeichnet die SymbolResourceKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.SymbolPresenter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ SymbolPresenter.</summary>
    </member>
    <member name="T:VisiWin.Controls.SymbolState">
      <summary>Beschreibt ein Element einer Zuordnungstabelle, in dem einem Wert oder Wertebereich eine Grafik zugeordnet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.SymbolState.Symbol">
      <summary>Legt die Grafik für diese Zuordnung fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.SymbolState.GetSymbolResourceKey(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Gibt den Ressourcenschlüssel zur Grafik zurück, die in einer Eigenschaft festgelegt wurde.</summary>
      <returns>Der abgefragte Ressourcenschlüssel.</returns>
      <param name="instance">Objekt, das die Eigenschaft enthält.</param>
      <param name="property">Eigenschaft, die die Grafik enthält.</param>
    </member>
    <member name="M:VisiWin.Controls.SymbolState.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.SymbolState.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.SymbolState.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ SymbolState.</summary>
    </member>
    <member name="T:VisiWin.Controls.SymbolStateCollection">
      <summary>Beschreibt eine Zuordnungstabelle aus Werte-Grafik-Paaren.</summary>
    </member>
    <member name="M:VisiWin.Controls.SymbolStateCollection.FirstOrDefaultBySymbol(System.Windows.DataTemplate)">
      <summary>Gibt den ersten State zurück, der die übergebene Grafik enthält.</summary>
      <returns>Bei erfolgreicher Suche der gefundene State, ansonsten, wenn vorhanden, der Default-State (State ohne Angaben in der Value-Eigenschaft).</returns>
      <param name="symbol">Zu suchende Grafik.</param>
    </member>
    <member name="M:VisiWin.Controls.SymbolStateCollection.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ SymbolStateCollection.</summary>
    </member>
    <member name="T:VisiWin.Controls.TextBlock">
      <summary>Steuerelement, das einen Text aus der Sprachumschaltung darstellt. </summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.AuthorizationMode">
      <summary>Legt fest, ob das Steuerelement bei fehlender Benutzerfreigabe inaktiv oder unsichtbar wird  </summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.AuthorizationRight">
      <summary>Name eines Rechtes aus der Benutzerverwaltung. Beinhaltet die Gruppe des angemeldeten Benutzers eine Verknüpfung zum hier angegebenen Recht, wird in der IsAuthorized-Eigenschaft 'true' zurückgegeben.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.BlinkBrush">
      <summary>Legt einen Pinsel fest, der bei aktiver Blinkphase als Hintergrund im Steuerelement angewendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.BlinkCycle">
      <summary>Bestimmt den Blinktakt der BlinkState-Eigenschaft als ganzzahliges Vielfaches des Hauptblinkzyklus aus der Projektkonfiguration. Beispiel: BlinkCycle = 2 -&gt; der Wert der BlinkState-Eigenschaft ändert sich nur noch mit halber Geschwindigkeit.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.BlinkMode">
      <summary>Legt fest, ob das Steuerelement im angegeben Takt die Hintergrundfarbe wechselt oder ob es abwechselnd sichtbar/ unsichtbar geschaltet wird.  </summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.BlinkState">
      <summary>Gibt eine zyklische Änderung im Takt des systemweit synchronisierten Blinken als Wertänderung zurück, wenn BlinkEnabled = 'true' Kann dazu verwendet werden, z.B. über einen Trigger Farbumschläge im Steuerelement zu generieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.IsAuthorized">
      <summary>Gibt zurück, ob der angemeldete Benutzer die Berechtigung hat, das Steuerelement zu bedienen. Im Steuerelement wird über die AuthorizationRight-Eigenschaft der Name eines Rechtes angegeben. Beinhaltet die Gruppe des angemeldeten Benutzers eine verknüpfung zum hier angegebenen Recht, gibt die IsAuthorized-Eigenschaft 'true' zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.IsBlinkEnabled">
      <summary>Legt fest, ob das Blinken im Steuerelement aktiv sein soll. </summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.IsInDesignMode">
      <summary>Gibt zurück, ob die Applikation im Designer geladen ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.LocalizableText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest. Zur Laufzeit wird der Text in der aktuellen Projektsprache auf die Text-Eigenschaft geschrieben.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.Symbol">
      <summary>Legt über eine Ressourcenbindung die Grafik fest, die auf dem Steuerelement angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.SymbolHorizontalAlignment">
      <summary>Legt die horizontale Ausrichtung (links, mitte, rechts) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.SymbolMargin">
      <summary>Legt den Abstand der Grafik zum Rand des Steuerelementes fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.SymbolVerticalAlignment">
      <summary>Legt die vertikale Ausrichtung (oben, mitte, unten) der Grafik auf dem Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextBlock.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="E:VisiWin.Controls.TextBlock.LanguageChanged">
      <summary>Wird ausgelöst, wenn die aktive Projektsprache umgeschaltet wird.</summary>
      <param name="sender">Objekt vom Typ TextBlock, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ LanguageChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.TextBlock.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ TextBlock, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.TextBlock.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.TextBlock.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextBlock.SetText">
      <summary>Wird aufgerufen, wenn ein neuer Text in die Oberfläche des Steuerelementes zu setzen ist.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.AuthorizationModeProperty">
      <summary>Bezeichnet die AuthorizationMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.AuthorizationRightProperty">
      <summary>Bezeichnet die AuthorizationRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.BackgroundOverlayBrushProperty">
      <summary>Bezeichnet die BackgroundOverlayBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.BlinkBrushProperty">
      <summary>Bezeichnet die BlinkBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.BlinkCycleProperty">
      <summary>Bezeichnet die BlinkCycle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.BlinkModeProperty">
      <summary>Bezeichnet die BlinkMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.BlinkStateProperty">
      <summary>Bezeichnet die BlinkState-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.blinkTimer">
      <summary>Referenz auf das intern verwendete Objekt zur Unterstützung des systemweit synchronisierten Blinkens</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.CornerRadiusProperty">
      <summary>Bezeichnet die CornerRadius-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.DisabledOverlayBrushProperty">
      <summary>Bezeichnet die DisabledOverlayBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.IsAuthorizedProperty">
      <summary>Bezeichnet die IsAuthorized-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.IsBlinkEnabledProperty">
      <summary>Bezeichnet die IsBlinkEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.IsInDesignModeProperty">
      <summary>Bezeichnet die IsInDesignMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.LocalizableTextProperty">
      <summary>Bezeichnet die LocalizableText-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.localization">
      <summary>Referenz auf das intern verwendete Objekt zur Unterstützung der Sprachumschaltung</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.localizedText">
      <summary>Gibt einen Verweis auf das intern verwendete ILocalizedText-Objekt für die Text-Eigenschaft zurück. </summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.PressedBackgroundProperty">
      <summary>Bezeichnet die PressedBackground-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.SymbolHorizontalAlignmentProperty">
      <summary>Bezeichnet die SymbolHorizontalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.SymbolMarginProperty">
      <summary>Bezeichnet die SymbolMargin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.SymbolPositionProperty">
      <summary>Bezeichnet die SymbolPosition-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.SymbolSizeProperty">
      <summary>Bezeichnet die SymbolSize-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.SymbolVerticalAlignmentProperty">
      <summary>Bezeichnet die SymbolVerticalAlignment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextBlock.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextBlock.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TextBlock.</summary>
    </member>
    <member name="T:VisiWin.Controls.TextState">
      <summary>Beschreibt ein Element einer Zuordnungstabelle, in dem einem Wert oder Wertebereich ein Text zugeordnet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextState.Text">
      <summary>Legt den Text für diese Zuordnung fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextState.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.TextState.TextProperty">
      <summary>Bezeichnet die Text-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextState.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TextState.</summary>
    </member>
    <member name="T:VisiWin.Controls.TextStateCollection">
      <summary>Beschreibt eine Zuordnungstabelle aus Werte-Text-Paaren.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextStateCollection.FirstOrDefaultByText(System.String)">
      <summary>Gibt den ersten State zurück, der den übergebenen Text enthält.</summary>
      <returns>Bei erfolgreicher Suche der gefundene State, ansonsten, wenn vorhanden, der Default-State (State ohne Angaben in der Value-Eigenschaft).</returns>
      <param name="text">Zu suchender Text.</param>
    </member>
    <member name="M:VisiWin.Controls.TextStateCollection.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TextStateCollection.</summary>
    </member>
    <member name="T:VisiWin.Controls.TextStyle">
      <summary>Kapselt die Merkmale (Schriftart, -größe, -stil, ...) zur Ausgabe eines Textes.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextStyle.FontFamily">
      <summary>Legt die Schriftart fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextStyle.FontSize">
      <summary>Legt die Schriftgröße fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextStyle.FontStretch">
      <summary>Legt einen Wert zum Strecken der Schrift fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextStyle.FontStyle">
      <summary>Legt den Schriftschnitt (fett/ kursiv/ unterstrichen,...) fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextStyle.FontWeight">
      <summary>Legt die Schriftstärke fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextStyle.Foreground">
      <summary>Legt den Pinsel zum Zeichnen der Schrift fest.</summary>
    </member>
    <member name="E:VisiWin.Controls.TextStyle.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt geändert hat, die eine Reaktion erfordert. </summary>
      <param name="sender">Objekt vom Typ TextStyle, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ PropertyChangedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.TextStyle.UpdateFont(System.Windows.Controls.Control)">
      <summary>Überträgt die Schriftarteneinstellungen der eigenen Instanz auf das übergebene Steuerelement.</summary>
      <param name="control">Das Steuerelement, dessen Eigenschaften gesetzt werden.</param>
    </member>
    <member name="M:VisiWin.Controls.TextStyle.UpdateFont(VisiWin.Controls.TextBlock)">
      <summary>Überträgt die Schriftarteneinstellungen der eigenen Instanz auf das übergebene TextBlock-Steuerelement.</summary>
      <param name="textBlock">Das TextBlock-Steuerelement, dessen Eigenschaften gesetzt werden.</param>
    </member>
    <member name="M:VisiWin.Controls.TextStyle.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TextStyle.</summary>
    </member>
    <member name="T:VisiWin.Controls.TextVarOut">
      <summary>Ausgabefeld für einen alphanumerischen Prozessvariablenwert (VT_BSTR).</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarOut.IsInSetValueInternal">
      <summary>Gibt zurück, ob die Value-Eigenschaft gerade intern umgesetzt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarOut.IsTextLengthMaxExceeded">
      <summary>Gibt zurück, ob die für den Variablenwert vorgegebene maximale Anzahl von Zeichen (Eigenschaft TextLengthMax) überschritten wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarOut.IsTextLengthMinExceeded">
      <summary>Gibt zurück, ob die für den Variablenwert vorgegebene minimale Anzahl von Zeichen (Eigenschaft TextLengthMin) unterschritten wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarOut.IsValidatingLimits">
      <summary>Gibt zurück, ob in TextLengthMin und TextLengthMax gültige Grenzen für die Textlänge angegeben sind, die im Steuerelement eine Fehleranzeige bewirken.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarOut.TextLengthMax">
      <summary>Legt die maximale Anzahl von Zeichen im Variablenwert fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarOut.TextLengthMin">
      <summary>Legt die minimale Anzahl von Zeichen im Variablenwert fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarOut.UseVariableLimits">
      <summary>Legt fest, ob die Grenzwerte aus der Prozessvariablendefinition (Maximalwert/ Minimalwert) verwendet werden sollen.</summary>
    </member>
    <member name="P:VisiWin.Controls.TextVarOut.Value">
      <summary>Gibt den im Steuerelement verknüpften Prozessvariablenwert zurück. </summary>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.GetValuePropertyValue">
      <summary>Wird ausgeführt, wenn der Wert der Value-Eigenschaft gelesen werden muss.</summary>
      <returns>Der aus Value ermittelte Wert.</returns>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnCoerceIsTextLengthMaxExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsTextLengthMaxExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsTextLengthMaxExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnCoerceIsTextLengthMinExceeded(System.Object)">
      <summary>Wird aufgerufen, wenn die IsTextLengthMinExceeded-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von IsTextLengthMinExceeded</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnCoerceTextLengthMax(System.Object)">
      <summary>Wird aufgerufen, wenn die TextLengthMax-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextLengthMax</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnCoerceTextLengthMin(System.Object)">
      <summary>Wird aufgerufen, wenn die TextLengthMin-Eigenschaft in Kombination mit anderen Eigenschaftenwerten ihren Wert korrigieren muss.</summary>
      <returns>Wenn notwendig, der korrigierte Wert, ansonsten der Wert von baseValue.</returns>
      <param name="baseValue">Der zuletzt gesetzte Eigenschaftenwert.von TextLengthMin</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnTextLengthMaxChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextLengthMax-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnTextLengthMinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextLengthMin-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnUseVariableLimitsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der UseVariableLimits-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der Value-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnVariableChanged">
      <summary>Wird ausgeführt, wenn sich die intern verwendete IVariable-Instanz (Eigenschaft Variable) ändert. </summary>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnVariableIsEditingChanged">
      <summary>Wird ausgeführt, wenn ein IsEditingChanged-Ereignis in der intern verwendeten Variableninstanz (Eigenschaft Variable) ausgelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.OnVariableValueChanged(VisiWin.DataAccess.VariableEventArgs)">
      <summary>Wird ausgeführt, wenn das Change-Ereignis in der intern verwendeten IVariable-Instanz (Eigenschaft Variable) auftritt.</summary>
      <param name="e">Objekt vom Typ VariableEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.SetValueInternal(System.String)">
      <summary>Setzt die Value-Eigenschaft. Das IsInSetValueInternal-Flag wird während des Vorgangs auf true gesetzt. </summary>
      <param name="value">Der neue Wert für die Value-Eigenschaft. </param>
    </member>
    <member name="F:VisiWin.Controls.TextVarOut.IsTextLengthMaxExceededProperty">
      <summary>Bezeichnet die IsTextLengthMaxExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextVarOut.IsTextLengthMinExceededProperty">
      <summary>Bezeichnet die IsTextLengthMinExceeded-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextVarOut.TextLengthMaxProperty">
      <summary>Bezeichnet die TextLengthMax-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextVarOut.TextLengthMinProperty">
      <summary>Bezeichnet die TextLengthMin-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextVarOut.UseVariableLimitsProperty">
      <summary>Bezeichnet die UseVariableLimits-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextVarOut.ValueProperty">
      <summary>Bezeichnet die Value-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TextVarOut.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TextVarOut.</summary>
    </member>
    <member name="T:VisiWin.Controls.TimeScale">
      <summary>Steuerelement zur Anzeige einer Datums-/ Zeitskala.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.DateTimeFormat">
      <summary>Legt eine Formatierungszeichenfolge für die Datums-/ Zeitwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.Display">
      <summary>Legt fest, welche Bestandteile der Skala (Balken, Werte, Rasterlinien) gezeichnet werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.DivisionType">
      <summary>Gibt die Schrittweiten an, die bei der automatischen Einteilung der Skala verwendet werden können. </summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.LimitVisibility">
      <summary>Legt die Sichtbarkeit der Anfangs- und Endwerte der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.LineWidthMajor">
      <summary>Legt die Breite der Linien des Hauptrasters fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.LineWidthMinor">
      <summary>Legt die Breite der Linien des Nebenrasters fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.MaxValue">
      <summary>Legt den Endwert der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.MinValue">
      <summary>Legt den Startwert der Skala fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.RulerBaseLine">
      <summary>Legt fest, ob der Skalenbalken (senkrecht zu den Rasterlinien angelegte Linie) gezeichnet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.RulerBaseLineBrush">
      <summary>Legt den Pinsel für den Skalenbalken fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.RulerMajorLineBrush">
      <summary>Legt den Pinsel für die Hauptrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.RulerMinorLineBrush">
      <summary>Legt den Pinsel für die Nebenrasterlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.RulerSpacing">
      <summary>Legt den minimalen Abstand zwischen den Skalenlinien fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.ScaleBrush">
      <summary>Legt den Pinsel zum Zeichnen der Skalenwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.ScalePoints">
      <summary>Gibt eine Liste der angezeigten Skalenwerte zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.ScalePosition">
      <summary>Gibt zurück, welche Ausrichtung die Skala im Steuerelement hat.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.ScaleSizeRatio">
      <summary>Legt das Größenverhältnis der Bereiche für die Skalenlinien und die Skalenwerte fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TimeScale.ScaleSpacing">
      <summary>Legt den minimalen Abstand zwischen den Skalenwerten fest.</summary>
    </member>
    <member name="E:VisiWin.Controls.TimeScale.BeginInitialize">
      <summary>Wird ausgelöst, wenn dem Objekt über BeginInit der Start des Initialisierungsvorgang signalisiert wurde.</summary>
      <param name="sender">Objekt vom Typ TimeScale, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.TimeScale.EndInitialize">
      <summary>Wird ausgelöst, wenn dem Objekt über EndInit das Ende des Initialisierungsvorgang signalisiert wurde.</summary>
      <param name="sender">Objekt vom Typ TimeScale, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.BeginInit">
      <summary>Startet den Initialisierungsprozess für dieses Element. </summary>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.CalculateAlignment">
      <summary>Berechnet aus der Ober- und Untergrenze automatisch die beste Einteilung für die Skala.</summary>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.EndInit">
      <summary>Gibt an, dass der Initialisierungsprozess für das Element abgeschlossen ist. </summary>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.GetFormattedText(System.String)">
      <summary>Errechnet die Größe des übergebenen Textes mit der im Steuerelement verwendeten Schriftart. </summary>
      <returns>Die errechnete Größe.</returns>
      <param name="text">Der Text, dessen Größe zu ermitteln ist.</param>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, sobald sich eine Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.OnRulerBaseLineBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RulerBaseLineBrush-Eigenschaft ändert. </summary>
      <param name="d">Objekt vom Typ DependencyObject als Referenz auf den Sender.</param>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.OnRulerMajorLineBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RulerMajorLineBrush-Eigenschaft ändert. </summary>
      <param name="d">Objekt vom Typ DependencyObject als Referenz auf den Sender.</param>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.OnRulerMinorLineBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der RulerMinorLineBrush-Eigenschaft ändert. </summary>
      <param name="d">Objekt vom Typ DependencyObject als Referenz auf den Sender.</param>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.ValueToPosition(System.Object)">
      <summary>Wandelt den übergebenen Skalenwert in einen Koordinate, an dem der Skalenwert im Steuerelement zu erwarten ist.</summary>
      <returns>Je nach Ausrichtung der Skala eine X- oder Y-Koordinate, die ausgehend von der oberen linken Ecke des Steuerelementes den übergebenen Skalenwert repräsentiert.</returns>
      <param name="val">Skalenwert, dessen Koordinate zu suchen ist.</param>
    </member>
    <member name="F:VisiWin.Controls.TimeScale.DateTimeFormatProperty">
      <summary>Bezeichnet die DateTimeFormat-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeScale.MaxValueProperty">
      <summary>Bezeichnet die MaxValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeScale.MinValueProperty">
      <summary>Bezeichnet die MinValue-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeScale.RulerBaseLineBrushProperty">
      <summary>Bezeichnet die RulerBaseLineBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeScale.RulerMajorLineBrushProperty">
      <summary>Bezeichnet die RulerMajorLineBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeScale.RulerMinorLineBrushProperty">
      <summary>Bezeichnet die RulerMinorLineBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeScale.ScaleBrushProperty">
      <summary>Bezeichnet die ScaleBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeScale.ScalePointsProperty">
      <summary>Bezeichnet die ScalePoints-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeScale.ScaleSizeRatioProperty">
      <summary>Bezeichnet die ScaleSizeRatio-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TimeScale.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TimeScale.</summary>
    </member>
    <member name="T:VisiWin.Controls.ToggleBitAction">
      <summary>Action, die das Bit einer Variablen invertiert.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleBitAction.BitNumber">
      <summary>(0-indizierte) Angabe des zu manipulierenden Bits. Ist die Variable vom Typ VT_Bool, wird die Angabe ignoriert.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleBitAction.ReadFromDevice">
      <summary>Legt fest, woher der zu manipulierende Wert gelesen werden soll. True: synchrones Lesen aus dem Kommunikationskanal.False: Rückgabe des zuletzt gepufferten Wertes aus dem Clientcache oder dem Variablenkern.</summary>
    </member>
    <member name="P:VisiWin.Controls.ToggleBitAction.VariableName">
      <summary>Bezeichner der zu manipulierenden Prozessvariablen. Die Prozessvariable kann über den Variablenauswahldialog gewählt oder über manuell in XAML angegeben werden (siehe "Syntax zum Zugriff auf Variablen").</summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleBitAction.Invoke(System.Object)">
      <summary>Führt die Action aus. </summary>
      <param name="parameter">Wird nicht verwendet.</param>
    </member>
    <member name="M:VisiWin.Controls.ToggleBitAction.OnAttached">
      <summary>Wird nach dem Anfügen der Aktion an das "AssociatedObject" aufgerufen. </summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleBitAction.BitNumberProperty">
      <summary>Bezeichnet die BitNumber-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleBitAction.ReadFromDeviceProperty">
      <summary>Bezeichnet die ReadFromDevice-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.ToggleBitAction.VariableNameProperty">
      <summary>Bezeichnet die VariableName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.ToggleBitAction.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ToggleBitAction.</summary>
    </member>
    <member name="T:VisiWin.Controls.TouchKey">
      <summary>Beschreibt die Funktion einer Taste auf der Bildschirmtastatur</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Acute">
      <summary>Zeichen bei Druck auf "´"</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.AcuteShift">
      <summary>Zeichen bei Druck auf "´"</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Alt">
      <summary>Zeichen, das angewendet wird, wenn Alt gedrückt ist</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.AltGr">
      <summary>Zeichen, das angewendet wird, wenn AltGr gedrückt ist</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Apostrophe">
      <summary>Zeichen bei Druck auf "'"</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.ApostropheShift">
      <summary>Zeichen bei Druck auf "'"</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Breve">
      <summary>Zeichen bei Druck auf den Breve</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.BreveShift">
      <summary>Zeichen bei Druck auf BreveShift</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Cedilla">
      <summary>Zeichen bei Druck auf den Cedilla</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.CedillaShift">
      <summary>Zeichen bei Druck auf CedillaShift</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Circumflex">
      <summary>Zeichen bei Druck auf "^"</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.CircumflexShift">
      <summary>Zeichen bei Druck auf "^"</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Dot">
      <summary>Zeichen bei Druck auf den Dot</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.DotShift">
      <summary>Zeichen bei Druck auf DotShift</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.DoubleAcute">
      <summary>Zeichen bei Druck auf den DoubleAcute</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.DoubleAcuteShift">
      <summary>Zeichen bei Druck auf DoubleAcuteShift</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Grave">
      <summary>Zeichen bei Druck auf "`"</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.GraveShift">
      <summary>Zeichen bei Druck auf "`"</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Hacek">
      <summary>Zeichen bei Druck auf den Hacek</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.HacekShift">
      <summary>Zeichen bei Druck auf HacekShift</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.KeyCode">
      <summary>Legt den KeyCode fest, der im KeyPressed-Ereignis des TouchKeyboard versendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Mark">
      <summary>Zeichen, das angewendet wird, wenn die Sonderzeichentaste (#+=) gedrückt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Name">
      <summary>Name des Touchkeys</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Num">
      <summary>Zeichen, das angewendet wird, wenn die Num-Taste (123) gedrückt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Ogomek">
      <summary>Zeichen bei Druck auf den Ogomek</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.OgomekShift">
      <summary>Zeichen bei Druck auf OgomekShift</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Regular">
      <summary>Zeichen, das angewendet wird, wenn keine Sonderfunktionstaste gedrückt ist z.B. Shift, Capslock, Alt,...</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Ring">
      <summary>Zeichen bei Druck auf den °</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.RingShift">
      <summary>Zeichen bei Druck auf RingShift</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Shift">
      <summary>Zeichen, das angewendet wird, wenn Shift gedrückt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.StraightQuotes">
      <summary>Zeichen bei Druck auf """</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.StraightQuotesShift">
      <summary>Zeichen bei Druck auf """</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Symbol">
      <summary>TouchKey Template</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.TextBottomLeft">
      <summary>Text, der in die untere linke Ecke des zugehörigen Touchbuttons gesetzt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.TextBottomRight">
      <summary>Text, der in die untere rechte Ecke des zugehörigen Touchbuttons gesetzt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.TextCenter">
      <summary>Text, der in die Mitte des zugehörigen Touchbuttons gesetzt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.TextTopLeft">
      <summary>Text, der in die obere linke Ecke des zugehörigen Touchbuttons gesetzt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.TextTopRight">
      <summary>Text, der in die obere rechte Ecke des zugehörigen Touchbuttons gesetzt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.Tilde">
      <summary>Zeichen bei Druck auf den Tilde</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.TildeShift">
      <summary>Zeichen bei Druck auf TildeShift</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.TurnedComma">
      <summary>Zeichen bei Druck auf den TurnedComma</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKey.TurnedCommaShift">
      <summary>Zeichen bei Druck auf TurnedCommaShift</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKey.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKey.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TouchKey.</summary>
    </member>
    <member name="T:VisiWin.Controls.TouchKeyboard">
      <summary>Definition des TouchKeyboard</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboard.IsMarksPressed">
      <summary>Legt fest, ob die Sonderzeichentaste (#+=) gedrückt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboard.IsNumsPressed">
      <summary>Legt fest, ob die Zifferneingabetaste (123) gedrückt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboard.TouchKeyboardButtonTemplate">
      <summary>ControlTemplate, das für TouchButtons dieses TouchKeyboards angewendet werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboard.TouchKeyboardLayoutName">
      <summary>Name des anzuwendenden TouchkeyboardLayouts</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboard.TouchKeyboardToggleButtonTemplate">
      <summary>ControlTemplate, das für die TouchToggleButtons dieses TouchkeyBoards verwendet werden soll</summary>
    </member>
    <member name="E:VisiWin.Controls.TouchKeyboard.EnterKeyPressed">
      <summary>An bzw Abmelden an das EnterKeyPressedEvent</summary>
      <param name="sender">Objekt vom Typ TouchKeyboard, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.TouchKeyboard.EscapeKeyPressed">
      <summary>An bzw Abmelden an das EscapeKeyPressed</summary>
      <param name="sender">Objekt vom Typ TouchKeyboard, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ RoutedEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.TouchKeyboard.KeyPressed">
      <summary>Definition des Keypressed events</summary>
      <param name="sender">Objekt vom Typ TouchKeyboard, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ TouchKeyboardEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboard.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboard.EnterKeyPressedEvent">
      <summary>Anlegen des EnterKeyPressed Events</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboard.EscapeKeyPressedEvent">
      <summary>Anlegen des EnterKeyPressed Events</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboard.IsMarksPressedProperty">
      <summary>Bezeichnet die IsMarksPressed-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboard.IsNumsPressedProperty">
      <summary>Bezeichnet die IsNumsPressed-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboard.KeyPressedEvent">
      <summary>Definition des KeyPressedEvent</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboard.TouchKeyboardButtonTemplateProperty">
      <summary>Bezeichnet die TouchKeyboardButtonTemplate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboard.TouchKeyboardLayoutNameProperty">
      <summary>Bezeichnet die TouchKeyboardLayoutName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboard.TouchKeyboardToggleButtonTemplateProperty">
      <summary>Bezeichnet die TouchKeyboardToggleButtonTemplate-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboard.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TouchKeyboard.</summary>
    </member>
    <member name="T:VisiWin.Controls.TouchKeyboardButton">
      <summary>Schaltfläche auf der Bildschirmtastatur </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.IsMarkPressed">
      <summary>Legt fest, ob die Sonderzeichentaste (#+=) gedrückt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.IsNumPressed">
      <summary>Legt fest, ob die Zifferneingabetaste (123) gedrückt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.IsPasswordMode">
      <summary>Legt fest, ob über die Schaltfläche ein Passwort angegeben wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.Symbol">
      <summary>Symbol, das auf der Schaltfläche angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TextBottomLeft">
      <summary>Text, der in der untere linken Ecke eingegeben werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TextBottomRight">
      <summary>Text, der in der untere rechten Ecke eingegeben werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TextCenter">
      <summary>Text, der in der Mitte eingegeben werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TextMode">
      <summary>TextMode, der für diese Schaltfläche angewendet werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TextTopLeft">
      <summary>Text, der in der oberen linken Ecke eingegeben werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TextTopRight">
      <summary>Text, der in der oberen rechten Ecke eingegeben werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TouchKey">
      <summary>Referenz auf den TouchKey, der Funktion und Aussehen der Schaltfläche bestimmt</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TouchKeyMapping">
      <summary>Legt eine Referenz auf das TouchKeyMapping-Objekt fest, das die Funktion der Taste beschreibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardButton.TouchKeyName">
      <summary>Legt den Namen für das Objekt fest</summary>
    </member>
    <member name="E:VisiWin.Controls.TouchKeyboardButton.PopUp">
      <summary>Wird ausgelöst, wenn die über PopupTouchKeyMappings angegebene Hilfstastatur durch gedrückt halten der Schaltfläche zu öffnen ist.</summary>
      <param name="sender">Objekt vom Typ TouchKeyboardButton, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.OnClick">
      <summary>Wird aufgerufen, wenn auf das Steuerelement geklickt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.OnInputDown(System.Windows.Input.InputEventArgs)">
      <summary>Wird aufgerufen, wenn über eine Eingabe das Herunterdrücken der Schaltfläche signalisiert wird.</summary>
      <param name="e">Objekt vom Typ InputEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der IsPressed-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Wird aufgerufen, wenn die linke Maustaste auf dem Steuerelement heruntergedrückt wird.</summary>
      <param name="e">Objekt vom Typ MouseButtonEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird durch eine Eigenschaftenänderung aufgerufen</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.OnTouchDown(System.Windows.Input.TouchEventArgs)">
      <summary>Wird ausgeführt, wenn über den Touchscreen ein Auflegen des Fingers auf die Schaltfläche gemeldet wird.</summary>
      <param name="e">Objekt vom Typ TouchEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.SetContent">
      <summary>Liest die im aktuellen Tastaturkontext gültige Oberflächendefinition aus der 'TouchKey'-Eigenschaft und zeichnet damit die Oberfläche der Taste</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.IsMarkPressedProperty">
      <summary>Bezeichnet die IsMarkPressed-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.IsNumPressedProperty">
      <summary>Bezeichnet die IsNumPressed-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.IsPasswordModeProperty">
      <summary>Bezeichnet die IsPasswordMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TextBottomLeftProperty">
      <summary>Bezeichnet die TextBottomLeft-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TextBottomRightProperty">
      <summary>Bezeichnet die TextBottomRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TextCenterProperty">
      <summary>Bezeichnet die TextCenter-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TextModeProperty">
      <summary>Bezeichnet die TextMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TextTopLeftProperty">
      <summary>Bezeichnet die TextTopLeft-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TextTopRightProperty">
      <summary>Bezeichnet die TextTopRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TouchKeyMappingProperty">
      <summary>Bezeichnet die TouchKeyMapping-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TouchKeyNameProperty">
      <summary>Bezeichnet die TouchKeyName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardButton.TouchKeyProperty">
      <summary>Bezeichnet die TouchKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardButton.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TouchKeyboardButton.</summary>
    </member>
    <member name="T:VisiWin.Controls.TouchKeyboardEventArgs">
      <summary>Definition der TouchkeyboardEventArgs</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardEventArgs.Key">
      <summary>Key, der gedückt wurde</summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardEventArgs.#ctor(System.Windows.RoutedEvent)">
      <summary>Erzeugt einen neue Instanz vom Typ TouchKeyboardEventArgs.</summary>
      <param name="routedEvent">Das zugehörige RoutedEvent</param>
    </member>
    <member name="T:VisiWin.Controls.TouchKeyboardLayout">
      <summary>Definition des TouchKeyboardLayouts</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardLayout.DeadKeys">
      <summary>Liste der verfübgaren DeadKeys Diese werden als Zeichen hinterlegt und mit den vom Touchkeyboard gesendeten Zeichen verglichen</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardLayout.InputLocale">
      <summary>Bezeichnung der zu diesem Layout gehörenden Sprachkultur</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardLayout.Name">
      <summary>Name des Layouts</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardLayout.TouchKeyboardStyle">
      <summary>Style, der bei diesem Layout verwendet werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardLayout.TouchKeys">
      <summary>Liste der verfügbaren Touchkeys</summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardLayout.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TouchKeyboardLayout.</summary>
    </member>
    <member name="T:VisiWin.Controls.TouchKeyboardToggleButton">
      <summary>Beschreibt eine Schaltfläche auf der Bildschirmtastatur mit Feststellfunktion</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.IsMarkPressed">
      <summary>Legt fest, ob die Sonderzeichentaste (#+=) gedrückt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.IsNumPressed">
      <summary>Legt fest, ob die Zifferneingabetaste (123) gedrückt wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.IsPasswordMode">
      <summary>Gibt an, ob diese Taste für den Passwortmodus angewendet wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.StayChecked">
      <summary>Gibt an, ob die Schaltfläche rastend oder tastend verwendet werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.Symbol">
      <summary>Symbol, das auf der Schaltfläche angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TextBottomLeft">
      <summary>Text, der unten links angezeigt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TextBottomRight">
      <summary>Text, der unten rechts angezeigt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TextCenter">
      <summary>Text, der in der Mitte angezeigt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TextMode">
      <summary>Gibt den Modus an, ob der Inhalt dieser Taste statisch ist oder nicht</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TextStyle">
      <summary>Legt die Eigenschaften der verwendeten Schriftart fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TextTopLeft">
      <summary>Text, der oben links angezeigt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TextTopRight">
      <summary>Text, der oben rechts angezeigt wird</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TouchKey">
      <summary>Referenz auf den TouchKey, der Funktion und Aussehen der Schaltfläche bestimmt</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TouchKeyMapping">
      <summary>Legt eine Referenz auf das TouchKeyMapping-Objekt fest, das die Funktion der Taste beschreibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyboardToggleButton.TouchKeyName">
      <summary>Legt den Namen für das Objekt fest</summary>
    </member>
    <member name="E:VisiWin.Controls.TouchKeyboardToggleButton.PopUp">
      <summary>Wird ausgelöst, wenn die über PopupTouchKeyMappings angegebene Hilfstastatur durch gedrückt halten der Schaltfläche zu öffnen ist.</summary>
      <param name="sender">Objekt vom Typ TouchKeyboardToggleButton, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardToggleButton.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardToggleButton.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird aufgerufen, wenn sich eine Eigenschaft geändert hat</summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardToggleButton.OnTextStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird ausgeführt, wenn sich der Wert der TextStyle-Eigenschaft ändert. </summary>
      <param name="e">Objekt vom Typ DependencyPropertyChangedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardToggleButton.SetContent">
      <summary>Liest die im aktuellen Tastaturkontext gültige Oberflächendefinition aus der 'TouchKey'-Eigenschaft und zeichnet damit die Oberfläche der Taste</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.IsMarkPressedProperty">
      <summary>Bezeichnet die IsMarkPressed-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.IsNumPressedProperty">
      <summary>Bezeichnet die IsNumPressed-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.IsPasswordModeProperty">
      <summary>Bezeichnet die IsPasswordMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.StayCheckedProperty">
      <summary>Bezeichnet die StayChecked-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TextBottomLeftProperty">
      <summary>Bezeichnet die TextBottomLeft-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TextBottomRightProperty">
      <summary>Bezeichnet die TextBottomRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TextCenterProperty">
      <summary>Bezeichnet die TextCenter-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TextModeProperty">
      <summary>Bezeichnet die TextMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TextStyleProperty">
      <summary>Bezeichnet die TextStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TextTopLeftProperty">
      <summary>Bezeichnet die TextTopLeft-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TextTopRightProperty">
      <summary>Bezeichnet die TextTopRight-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TouchKeyboardStateProperty">
      <summary>Bezeichnet die VisiWin.Controls.TouchKeyboardToggleButton.TouchKeyboardState-Abhängigkeitseigenschaft</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TouchKeyMappingProperty">
      <summary>Bezeichnet die TouchKeyMapping-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TouchKeyNameProperty">
      <summary>Bezeichnet die TouchKeyName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyboardToggleButton.TouchKeyProperty">
      <summary>Bezeichnet die TouchKey-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyboardToggleButton.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TouchKeyboardToggleButton.</summary>
    </member>
    <member name="T:VisiWin.Controls.TouchKeyMapping">
      <summary>Beschreibt die Funktion einer Taste auf der Bildschirmtastatur. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.Alt">
      <summary>Zeichen, das versendet wird, wenn gleichzeitig Alt gedrückt ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.AltGr">
      <summary>Zeichen, das versendet wird, wenn gleichzeitig AltGr gedrückt ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.KeyCode">
      <summary>Legt den KeyCode fest, der versendet wird, wenn die Taste gedrückt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.Mark">
      <summary>Zeichen, das versendet wird, wenn IsMarksPressed aktiv ist. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.Name">
      <summary>Name des Touchkeys. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.Num">
      <summary>Zeichen, das versendet wird, wenn IsNumsPressed aktiv ist. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.PopupTouchKeyMappings">
      <summary>Verweist auf eine Liste von TouchKeyMapping, die verwendet wird, um eine weitere Unterstützungstastatur aufzurufen, wenn die Schaltfläche gedrückt gehalten wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.Regular">
      <summary>Zeichen, das versendet wird, wenn keine Steuerungstasten (Ctrl, Alt,Shift,...) und keine Sondermodi (IsNumsPressed, IsMarksPressed) aktiv sind.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.Shift">
      <summary>Zeichen, das versendet wird, wenn gleichzeitig Shift gedrückt ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.Symbol">
      <summary>Legt eine Grafik fest, die auf der Schaltfläche angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.TextBottomLeft">
      <summary>Text, der in die untere linke Ecke des zugehörigen Touchbuttons gesetzt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.TextBottomRight">
      <summary>Text, der in die untere rechte Ecke des zugehörigen Touchbuttons gesetzt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.TextCenter">
      <summary>Text, der in die Mitte des zugehörigen Touchbuttons gesetzt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.TextTopLeft">
      <summary>Text, der in die obere linke Ecke des zugehörigen Touchbuttons gesetzt wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.TouchKeyMapping.TextTopRight">
      <summary>Text, der in die obere rechte Ecke des zugehörigen Touchbuttons gesetzt wird. </summary>
    </member>
    <member name="F:VisiWin.Controls.TouchKeyMapping.SymbolProperty">
      <summary>Bezeichnet die Symbol-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TouchKeyMapping.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TouchKeyMapping.</summary>
    </member>
    <member name="T:VisiWin.Controls.TrendCurve">
      <summary>Steuerelement, das eine Liste von Wertepaaren als Kurve zeichnet.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurve.ArchiveName">
      <summary>Legt den Namen der Archivdefinition aus der Projektdatenbank fest, in der sich die Trendkurve befindet.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurve.DataSamples">
      <summary>Legt die Liste der zu zeichnenden Wertepaare fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurve.LineBrush">
      <summary>Legt den Pinsel zum Zeichnen der Kurve fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurve.LineStyle">
      <summary>Legt den Linienstil zum Zeichnen der Trendkurve fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurve.LineWidth">
      <summary>Legt die Linienbreite zum Zeichnen der Trendkurve fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurve.ScaleY">
      <summary>Legt ein Scale-Objekt fest, das an der Y-Achse eine Skala mit den Wertebereichsinformationen der Kurve anzeigt.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurve.TrendName">
      <summary>Legt den Namen der Trenddefinition aus der Projektdatenbank fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.TrendCurve.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.TrendCurve.ArchiveNameProperty">
      <summary>Bezeichnet die ArchiveName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurve.DataSamplesProperty">
      <summary>Bezeichnet die DataSamples-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurve.LineBrushProperty">
      <summary>Bezeichnet die LineBrush-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurve.LineStyleProperty">
      <summary>Bezeichnet die LineStyle-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurve.LineWidthProperty">
      <summary>Bezeichnet die LineWidth-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurve.ScaleYProperty">
      <summary>Bezeichnet die ScaleY-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurve.TrendNameProperty">
      <summary>Bezeichnet die TrendName-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TrendCurve.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TrendCurve.</summary>
    </member>
    <member name="T:VisiWin.Controls.TrendCurveContainer">
      <summary>Container, in dem Trendkurven gezeichnet werden.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveContainer.Curves">
      <summary>Legt eine Liste der anzuzeigenden Trendkurven fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveContainer.MaxTime">
      <summary>Legt den jüngsten im Diagramm angezeigte Zeitstempel fest. </summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveContainer.Online">
      <summary>Legt fest, ob die aktuell einlaufenden Werte angezeigt oder ob die Ansicht auf einen früheren Zeitpunkt umgeschaltet ist. </summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveContainer.Resolution">
      <summary>Legt fest, welcher Zeitraum durch die Diagrammfläche dargestellt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveContainer.ShiftCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe sich die enthaltenen Trendkurven auf der Zeitachse verschieben lassen.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveContainer.TimeScale">
      <summary>Legt eine Referenz auf die verwendete Zeitskala fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveContainer.DrawLines(VisiWin.Controls.TrendCurve)">
      <summary>Zeichnet die Liniensegmente aller Kurven neu oder fügt die Liniensegmente der übergebenen Kurve im Diagramm ein.</summary>
      <param name="addCurve">null: Die Liniensegmente aller in Curves enthaltenen Kurven werden neu gezeichnet.!= null: Die Linensegmente des übergebenen TrendCurve-Objektes werden in das Diagramm eingefügt.</param>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveContainer.HandleShiftCommand(System.TimeSpan,System.Boolean)">
      <summary>Führt eine Verschiebung der Kurven auf der Zeitachse aus.</summary>
      <param name="shiftTimeSpan">Legt den Verschiebungszeitraum fest.</param>
      <param name="requestTrendData">True: Die zur Darstellung benötigten Daten werden aus dem Archivsystem neu abgerufen.False: Die Die zur Darstellung benötigten Daten werden nicht aus dem Archivsystem abgerufen.</param>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveContainer.ShiftAndDrawCurve(VisiWin.Controls.TrendCurve)">
      <summary>Zeichnet die Liniensegmente der übergebenen Kurve in das Diagramm ein und verschiebt die Kurvenansicht, so dass das der letzte Kurvenwert im Diagramm sichtbar wird.</summary>
      <param name="curve">TrendCurve-Objekt, dessen Liniensegmente im Diagramm eingefügt werden.</param>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveContainer.CurvesProperty">
      <summary>Bezeichnet die Curves-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveContainer.MaxTimeProperty">
      <summary>Bezeichnet die MaxTime-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveContainer.OnlineProperty">
      <summary>Bezeichnet die Online-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveContainer.ResolutionProperty">
      <summary>Bezeichnet die Resolution-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveContainer.ShiftCommandProperty">
      <summary>Bezeichnet die ShiftCommand-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveContainer.TimeScaleProperty">
      <summary>Bezeichnet die TimeScale-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveContainer.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TrendCurveContainer.</summary>
    </member>
    <member name="T:VisiWin.Controls.TrendCurveManipulation">
      <summary>Erweitert den TrendCurveContainer um Funktionen zum Verschieben und Zoomen der Trendkurven über Touchscreen- oder Mauseingabegeräte.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveManipulation.IsTranslateXEnabled">
      <summary>Legt fest, ob eine Verschiebung in X-Richtung erlaubt ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveManipulation.IsTranslateYEnabled">
      <summary>Legt fest, ob eine Verschiebung in X-Richtung erlaubt ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveManipulation.IsZoomEnabled">
      <summary>Legt fest, ob das Vergrößern von Ausschnitten der Kurvendarstellung erlaubt ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveManipulation.TrendCurveContainer">
      <summary>Legt fest, ob eine Verschiebung in X-Richtung erlaubt ist.</summary>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveManipulation.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>Wird aufgerufen, wenn eine Manipulation (Toucheingabe über Gestensteuerung) abgeschlossen wurde.</summary>
      <param name="e">Objekt vom Typ ManipulationCompletedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveManipulation.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
      <summary>Wird aufgerufen, wenn eine Manipulation (Toucheingabe über Gestensteuerung) eine Positionsänderung signalisiert.</summary>
      <param name="e">Objekt vom Typ ManipulationDeltaEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveManipulation.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
      <summary>Wird aufgerufen, wenn eine Manipulation (Toucheingabe über Gestensteuerung) begonnen wurde.</summary>
      <param name="e">Objekt vom Typ ManipulationStartedEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveManipulation.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Wird aufgerufen, wenn die linke Maustaste auf dem Steuerelement heruntergedrückt wird.</summary>
      <param name="e">Objekt vom Typ MouseButtonEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveManipulation.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Wird aufgerufen, wenn die linke Maustaste auf dem Steuerelement losgelassen wird.</summary>
      <param name="e">Objekt vom Typ MouseButtonEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveManipulation.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Wird aufgerufen, wenn über dem Steuerelement der Mauszeiger bewegt wird.</summary>
      <param name="e">Objekt vom Typ MouseEventArgs mit weiteren Informationen zum Aufruf.</param>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveManipulation.IsTranslateXEnabledProperty">
      <summary>Bezeichnet die IsTranslateXEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveManipulation.IsTranslateYEnabledProperty">
      <summary>Bezeichnet die IsTranslateYEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveManipulation.IsZoomEnabledProperty">
      <summary>Bezeichnet die IsZoomEnabled-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveManipulation.TrendCurveContainerProperty">
      <summary>Bezeichnet die TrendCurveContainer-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveManipulation.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TrendCurveManipulation.</summary>
    </member>
    <member name="T:VisiWin.Controls.TrendCurveMarker">
      <summary>Stellt eine vom Benutzer verschiebbare vertikale Markierungslinie in einem TrendCurveContainer dar.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveMarker.MarkerPoints">
      <summary>Gibt die Schnittpunkte der im TrendCurveContainer enthaltenen Kurven mit der Markierungslinie zurück.</summary>
    </member>
    <member name="P:VisiWin.Controls.TrendCurveMarker.TrendCurveContainer">
      <summary>Legt den TrendCurveContainer fest, in dem die Markierungslinie dargestellt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveMarker.CalculateMarkerPoints">
      <summary>Errechnet die Schnittpunkte aus MarkerPoints erneut.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveMarker.MarkerPointsProperty">
      <summary>Bezeichnet die MarkerPoints-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.TrendCurveMarker.TrendCurveContainerProperty">
      <summary>Bezeichnet die TrendCurveContainer-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.TrendCurveMarker.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ TrendCurveMarker.</summary>
    </member>
    <member name="T:VisiWin.Controls.UpDownNumericVarIn">
      <summary>Ein-/ Ausgabefeld für einen numerischen Prozessvariablenwert mit zusätzlichen Schaltflächen zum In-/Dekrementieren.</summary>
    </member>
    <member name="P:VisiWin.Controls.UpDownNumericVarIn.DecrementCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe der im Steuerelement bearbeitete Wert um die in Increment angegebene Schrittweite dekrementiert wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.UpDownNumericVarIn.Delay">
      <summary>Legt die Verzögerung (in Millisekunden) fest, die gewartet wird, bevor die De- oder Inkrementierung im über Interval festgelegten Zyklus ausgeführt wird, wenn eine Schaltfläche im Steuerelement gedrückt bleibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.UpDownNumericVarIn.Increment">
      <summary>Legt die Schrittweite fest, um die der Prozessvariablenwert durch die Bedienung im Steuerelement de- oder inkrementiert wird. </summary>
    </member>
    <member name="P:VisiWin.Controls.UpDownNumericVarIn.IncrementCommand">
      <summary>Gibt ein Command-Objekt zurück, mit dessen Hilfe der im Steuerelement bearbeitete Wert um die in Increment angegebene Schrittweite inkrementiert wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.UpDownNumericVarIn.Interval">
      <summary>Legt das Intervall (in Millisekunden) fest, in dem die De- oder Inkrementierung bei gehaltener Schaltfläche wiederholt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.UpDownNumericVarIn.PartButtonDown">
      <summary>Gibt eine Referenz auf das RepeatButton-Objekt aus dem Template zurück, das zum Dekrementieren des Wertes verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.UpDownNumericVarIn.PartButtonUp">
      <summary>Gibt eine Referenz auf das RepeatButton-Objekt aus dem Template zurück, das zum Inkrementieren des Wertes verwendet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.UpDownNumericVarIn.RepeatWriteMode">
      <summary>Legt fest, wann der im Steuerelement angezeigte Wert in den Variablenkern geschrieben wird, wenn er durch die Schaltflächen zum In-/ Dekrementieren geändert wurde.</summary>
    </member>
    <member name="M:VisiWin.Controls.UpDownNumericVarIn.OnApplyTemplate">
      <summary>Wird aufgerufen, sobald Anwendungscode oder interne Prozesse ApplyTemplate aufrufen.Erstellt die visuelle Struktur für das Steuerelement, wenn eine neue Vorlage angewendet wird. </summary>
    </member>
    <member name="M:VisiWin.Controls.UpDownNumericVarIn.OnCanExecuteDecrementCommand(System.Object)">
      <summary>Wird aus der CanExecute-Methode des als DecrementCommand verwendeten Objektes aufgerufen, um die Verfügbarkeit des Commands zu überprüfen. </summary>
      <returns>true, wenn das Command verfügbar ist (der Wert kann in seinen Grenzen dekrementiert werden), ansonsten false.</returns>
      <param name="arg">Die Aufrufparameter, die der CanExecute-Methode übergeben wurden.</param>
    </member>
    <member name="M:VisiWin.Controls.UpDownNumericVarIn.OnCanExecuteIncrementCommand(System.Object)">
      <summary>Wird aus der CanExecute-Methode des als IncrementCommand verwendeten Objektes aufgerufen, um die Verfügbarkeit des Commands zu überprüfen. </summary>
      <returns>true, wenn das Command verfügbar ist (der Wert kann in seinen Grenzen inkrementiert werden), ansonsten false.</returns>
      <param name="arg">Die Aufrufparameter, die der CanExecute-Methode übergeben wurden.</param>
    </member>
    <member name="M:VisiWin.Controls.UpDownNumericVarIn.OnExecuteDecrementCommand(System.Object)">
      <summary>Wird aus der Execute-Methode des als DecrementCommand verwendeten Objektes aufgerufen, um den Variablenwert zu dekrementieren.. </summary>
      <param name="obj">Die Aufrufparameter, die der Execute-Methode des Command-Objektes übergeben wurden.</param>
    </member>
    <member name="M:VisiWin.Controls.UpDownNumericVarIn.OnExecuteIncrementCommand(System.Object)">
      <summary>Wird aus der Execute-Methode des als IncrementCommand verwendeten Objektes aufgerufen, um den Variablenwert zu dekrementieren.</summary>
      <param name="obj">Die Aufrufparameter, die der Execute-Methode des Command-Objektes übergeben wurden.</param>
    </member>
    <member name="M:VisiWin.Controls.UpDownNumericVarIn.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="F:VisiWin.Controls.UpDownNumericVarIn.DecrementCommandProperty">
      <summary>Bezeichnet die DecrementCommand-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.UpDownNumericVarIn.DelayProperty">
      <summary>Bezeichnet die Delay-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.UpDownNumericVarIn.IncrementCommandProperty">
      <summary>Bezeichnet die IncrementCommand-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.UpDownNumericVarIn.IncrementProperty">
      <summary>Bezeichnet die Increment-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.UpDownNumericVarIn.IntervalProperty">
      <summary>Bezeichnet die Interval-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="F:VisiWin.Controls.UpDownNumericVarIn.RepeatWriteModeProperty">
      <summary>Bezeichnet die RepeatWriteMode-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.UpDownNumericVarIn.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ UpDownNumericVarIn.</summary>
    </member>
    <member name="T:VisiWin.Controls.ValueToStateBrushConverter">
      <summary>Konverter: Wandelt einen numerischen Wert mithilfe einer StateCollection in einen Brush.</summary>
    </member>
    <member name="M:VisiWin.Controls.ValueToStateBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Führt die Konvertierung aus.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="targetType">Keine Verwendung.</param>
      <param name="parameter">Die zu verwendende StateCollection.</param>
      <param name="culture">Keine Verwendung.</param>
    </member>
    <member name="M:VisiWin.Controls.ValueToStateBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Nicht implementiert.</summary>
      <returns>-</returns>
      <param name="value">-</param>
      <param name="targetType">-</param>
      <param name="parameter">-</param>
      <param name="culture">-</param>
    </member>
    <member name="M:VisiWin.Controls.ValueToStateBrushConverter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ValueToStateBrushConverter.</summary>
    </member>
    <member name="T:VisiWin.Controls.ValueToStateSymbolConverter">
      <summary>Konverter: Wandelt einen numerischen Wert mithilfe einer StateCollection in ein Symbol.</summary>
    </member>
    <member name="M:VisiWin.Controls.ValueToStateSymbolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Führt die Konvertierung aus.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="targetType">Keine Verwendung.</param>
      <param name="parameter">Die zu verwendende StateCollection.</param>
      <param name="culture">Keine Verwendung.</param>
    </member>
    <member name="M:VisiWin.Controls.ValueToStateSymbolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Nicht implementiert.</summary>
      <returns>-</returns>
      <param name="value">-</param>
      <param name="targetType">-</param>
      <param name="parameter">-</param>
      <param name="culture">-</param>
    </member>
    <member name="M:VisiWin.Controls.ValueToStateSymbolConverter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ValueToStateSymbolConverter.</summary>
    </member>
    <member name="T:VisiWin.Controls.ValueToStateTextConverter">
      <summary>Konverter: Wandelt einen numerischen Wert mithilfe einer StateCollection in einen Text.</summary>
    </member>
    <member name="M:VisiWin.Controls.ValueToStateTextConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Führt die Konvertierung aus.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="targetType">Keine Verwendung.</param>
      <param name="parameter">Die zu verwendende StateCollection.</param>
      <param name="culture">Keine Verwendung.</param>
    </member>
    <member name="M:VisiWin.Controls.ValueToStateTextConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Nicht implementiert.</summary>
      <returns>-</returns>
      <param name="value">-</param>
      <param name="targetType">-</param>
      <param name="parameter">-</param>
      <param name="culture">-</param>
    </member>
    <member name="M:VisiWin.Controls.ValueToStateTextConverter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ValueToStateTextConverter.</summary>
    </member>
    <member name="T:VisiWin.Controls.VerificationBehavior">
      <summary>Ordnet einem Objekt Verifikationsunterstützung (Funktionen zur Bestätigung und Protokollierung von Benutzerhandlungen) zu. </summary>
    </member>
    <member name="P:VisiWin.Controls.VerificationBehavior.AuthorizationRight">
      <summary>Legt das Recht aus der Benutzerverwaltung fest, das der zweite Benutzer für die doppelte Handlungsverifikation nach dem Vier-Augen-Prinzip benötigt.</summary>
    </member>
    <member name="P:VisiWin.Controls.VerificationBehavior.CategoryName">
      <summary>Legt den Namen der Kategorie aus dem Protokollsystem fest, für die ein Protokolleintrag erzeugt wird, wenn die Handlung verifiziert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.VerificationBehavior.DescriptionText">
      <summary>Legt einen beschreibenden Text fest, der auf den Dialogen zur Handlungsverifikation angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VerificationBehavior.EventName">
      <summary>Legt den Namen des Ereignisses aus dem Protokollsystem fest, für das ein Protokolleintrag erzeugt wird, wenn die Handlung verifiziert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.VerificationBehavior.LogText">
      <summary>Legt den Text fest, der im Protokolleintrag gespeichert wird, wenn die Handlung verifiziert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.VerificationBehavior.VerificationDialogViewName">
      <summary>Legt den Namen der View fest, die zur Handlungsverifikation angezeigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.VerificationBehavior.VerificationMode">
      <summary>Legt die Art der Handlungsverifikation (einfache Bestätigung, Unterschrift durch Passwortangabe, Unterschriften nach vier-Augen-Prinzip,...) fest.</summary>
    </member>
    <member name="M:VisiWin.Controls.VerificationBehavior.OnAttached">
      <summary>Wird aufgerufen, nachdem das Behaviour an ein Steuerelement angehängt wurde.</summary>
    </member>
    <member name="M:VisiWin.Controls.VerificationBehavior.OnDetaching">
      <summary>Wird aufgerufen, bevor das Behaviour von einem Steuerelement gelöst wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.VerificationBehavior.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ VerificationBehavior.</summary>
    </member>
    <member name="T:VisiWin.Controls.View">
      <summary>Definiert eine Bildschirmteilansicht. </summary>
    </member>
    <member name="P:VisiWin.Controls.View.Dynamics">
      <summary>Verweis auf die geladenen Eigenschaftenbindungen der View. </summary>
    </member>
    <member name="M:VisiWin.Controls.View.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.View.OnUnloaded">
      <summary>Wird ausgeführt sobald die View entladen (aus dem VisualTree entfernt) wird</summary>
    </member>
    <member name="M:VisiWin.Controls.View.RegisterMarkupExtension(VisiWin.Extensions.IMarkupExtension)">
      <summary>Methode zum Registrieren der MarkupExtensions. Die Extension muß vorgehalten werden, damit sie im Lebenszyklus der View erhalten bleibt. Ohne die Registrierung wird die MarkupExtension einmalig geladen, ausgeführt und dann verworfen</summary>
      <param name="extension">Die XML-MarkupExtension</param>
    </member>
    <member name="F:VisiWin.Controls.View.DynamicsProperty">
      <summary>Bezeichnet die Dynamics-Abhängigkeitseigenschaft.</summary>
    </member>
    <member name="M:VisiWin.Controls.View.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ View.</summary>
    </member>
    <member name="T:VisiWin.Controls.ViewTemplate">
      <summary>DataTemplate, das die für die VisiWin-Infrastruktur benötigten Aufrufe zum Initialisieren/ Terminieren von Adaptern und MarkupExtensions beinhaltet. </summary>
    </member>
    <member name="P:VisiWin.Controls.ViewTemplate.Name">
      <summary>Gibt den Namen der View zurück, die das Viewtemplate verwendet.</summary>
    </member>
    <member name="E:VisiWin.Controls.ViewTemplate.Loaded">
      <summary>Wird ausgelöst, nachdem das DataTemplate geladen wurde</summary>
      <param name="sender">Objekt vom Typ ViewTemplate, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWin.Controls.ViewTemplate.Unloaded">
      <summary>Wird ausgelöst, bevor das DataTemplate entladen wird</summary>
      <param name="sender">Objekt vom Typ ViewTemplate, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.ViewTemplate.OnLoaded">
      <summary>Wird aufgerufen, sobald das Loaded-Ereignis auftritt.</summary>
    </member>
    <member name="M:VisiWin.Controls.ViewTemplate.OnUnloaded">
      <summary>Geschützte Methode, die aufgerufen wird, bevor das DataTemplate entladen wird</summary>
    </member>
    <member name="M:VisiWin.Controls.ViewTemplate.RegisterMarkupExtension(VisiWin.Extensions.IMarkupExtension)">
      <summary>Methode zum Registrieren der MarkupExtensions. Die Extension muß vorgehalten werden, damit sie im Lebenszyklus der View erhalten bleibt. Ohne die Registrierung wird die MarkupExtension einmalig geladen, ausgeführt und dann verworfen</summary>
      <param name="extension">Die XML-MarkupExtension</param>
    </member>
    <member name="M:VisiWin.Controls.ViewTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>Stellt Regeln für das Element bereit, auf das diese Vorlage angewendet wird.</summary>
      <param name="templatedParent">das Element, auf das diese Vorlage angewendet wird</param>
    </member>
    <member name="M:VisiWin.Controls.ViewTemplate.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ ViewTemplate.</summary>
    </member>
    <member name="T:VisiWin.Controls.WindowsMediaExtensions">
      <summary>Beinhaltet Hilfsfunktionen zum Umrechnen von Daten aus aus der System.Windows.Media-API in die System.Drawing-API.</summary>
    </member>
    <member name="M:VisiWin.Controls.WindowsMediaExtensions.AsGdiColor(System.Windows.Media.Color)">
      <summary>Rechnet den System.Windows.Media.COlor-Wert um in einen System.Drawing.Color-Wert.</summary>
      <returns>Der umgerechnete Wert.</returns>
      <param name="color">Der umzurechnende Farbwert.</param>
    </member>
    <member name="T:VisiWin.Controls.WriteValueOperationParameter">
      <summary>Beschreibt den über "WriteValue" geänderten Prozessvariablenwert zur Weitergabe an das VerificationBehavior.</summary>
    </member>
    <member name="P:VisiWin.Controls.WriteValueOperationParameter.NewValue">
      <summary>Legt den neuen Wert der zu schreibenden Variablen fest.</summary>
    </member>
    <member name="P:VisiWin.Controls.WriteValueOperationParameter.VariableName">
      <summary>Legt den Namen der zu schreibenden Prozessvariablen fest. </summary>
    </member>
    <member name="M:VisiWin.Controls.WriteValueOperationParameter.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ WriteValueOperationParameter.</summary>
    </member>
    <member name="T:VisiWin.Controls.IBlendFacadeView">
      <summary>Unterstützung zur Designzeit. Regelt die Funktionen einer View zur Designzeit.</summary>
    </member>
    <member name="M:VisiWin.Controls.IBlendFacadeView.GetView(System.String)">
      <summary>Gibt die angegebene View zurück. </summary>
      <returns>Das View-Objekt. </returns>
      <param name="viewName">Name der angeforderten View.</param>
    </member>
    <member name="T:VisiWin.Controls.ITouchKeyboardButton">
      <summary>Beschreibt die Schnittstelle einer Schaltfläche auf der Bildschirmtastatur.</summary>
    </member>
    <member name="P:VisiWin.Controls.ITouchKeyboardButton.TouchKey">
      <summary>Referenz auf den TouchKey, der Funktion und Aussehen der Schaltfläche bestimmt. </summary>
    </member>
    <member name="P:VisiWin.Controls.ITouchKeyboardButton.TouchKeyMapping">
      <summary>Legt eine Referenz auf das TouchKeyMapping-Objekt fest, das die Funktion der Taste beschreibt.</summary>
    </member>
    <member name="P:VisiWin.Controls.ITouchKeyboardButton.TouchKeyName">
      <summary>Legt den Namen für das Objekt fest. </summary>
    </member>
    <member name="E:VisiWin.Controls.ITouchKeyboardButton.PopUp">
      <summary>Wird ausgelöst, wenn die über PopupTouchKeyMappings angegebene Hilfstastatur durch gedrückt halten der Schaltfläche zu öffnen ist.</summary>
      <param name="sender">Objekt vom Typ ITouchKeyboardButton, das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ EventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="M:VisiWin.Controls.ITouchKeyboardButton.SetContent">
      <summary>Liest die im aktuellen Tastaturkontext gültige Oberflächendefinition aus der 'TouchKey'-Eigenschaft und zeichnet damit die Oberfläche der Taste</summary>
    </member>
    <member name="T:VisiWin.Controls.IVerificationService">
      <summary>Beschreibt die Schnittstelle des Service, der vom VerificationBehavior zur Behandlung der Verifikationsunterstützung erwartet wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.AuthorizationRight">
      <summary>Legt das Recht aus der Benutzerverwaltung fest, das der zweite Benutzer für die doppelte Handlungsverifikation nach dem Vier-Augen-Prinzip benötigt.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.DescriptionText">
      <summary>Legt den Text fest, der auf den Dialogen zur Handlungsverifikation als Beschreibung angezeigt wird..</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.ForceCommentInput">
      <summary>Legt fest, ob das Kommentarfeld ausgefüllt werden muss, damit die Handlung abgeschlossen wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.HasComment">
      <summary>Legt fest, ob das Kommentarfeld auf den Dialogen anzuzeigen ist.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.LoggingCategory">
      <summary>Legt den Namen der Kategorie aus dem Protokollsystem fest, für die ein Protokolleintrag erzeugt wird, wenn die Handlung verifiziert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.LoggingEvent">
      <summary>Legt den Namen des Ereignisses aus dem Protokollsystem fest, für das ein Protokolleintrag erzeugt wird, wenn die Handlung verifiziert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.LoggingParameters">
      <summary>Legt die Werte für die zu schreibenden Protokollparameter fest, die zum Protokolleintrag gespeichert werden, wenn die Handlung verifiziert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.LoggingText">
      <summary>Legt den Text fest, der zum Protokolleintrag gespeichert wird, wenn die Handlung verifiziert wurde.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.PasswordVerification">
      <summary>Legt fest, ob der Benutzer zur Handlungsverifikation sein Passwort eingeben muss.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.SecondUserVerification">
      <summary>Legt fest, das ein zweiter Benutzer für die doppelte Handlungsverifikation nach dem Vier-Augen-Prinzip benötigt wird.</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.Silent">
      <summary>Legt fest, dass der Benutzer keine weitere Bestätigung zur Verifikation der Handlung abgeben muss (Die Handlung wird nur protokolliert).</summary>
    </member>
    <member name="P:VisiWin.Controls.IVerificationService.VerificationDialogViewName">
      <summary>Legt den Namen der View fest, die zur Handlungsverifikation angezeigt wird.</summary>
    </member>
    <member name="M:VisiWin.Controls.IVerificationService.VerifyOperation">
      <summary>Startet die Handlungsverifikation.</summary>
      <returns>True: Die Handlung wurde verifiziert und kann nun ausgeführt werden, ansonsten false.</returns>
    </member>
    <member name="T:VisiWin.Controls.AlarmLineDisplayMode">
      <summary>Beinhaltet Einstellungen zur Darstellung von Alarminformationen in der Alarmzeile.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmLineDisplayMode.Columns">
      <summary>Die Alarminformationen werden in Form von Spalten angezeigt.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmLineDisplayMode.SingleLine">
      <summary>Die Alarminformationen werden als forlaufender Text angezeigt.</summary>
    </member>
    <member name="T:VisiWin.Controls.AlarmProperty">
      <summary>Beschreibt die zur Verfügung stehenden Informationen, die in den Alarmsteuerelementen zur Anzeige angeboten werden.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.AcknowledgeTime">
      <summary>Zeigt den Quittierungszeitstempel des Alarms an (wenn er quittiert wurde). </summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.ActivationCounter">
      <summary>Zeigt an, wie oft ein Alarm seit der Auslösung den reaktivierten Zustand eingenommen hat.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.ActivationTime">
      <summary>Zeigt den Zeitpunkt des Auftretens des Alarms an (wann das Ereignisbit gesetzt wurde).</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.Class">
      <summary>Zeigt den sprachumschaltbaren Namen der Alarmklasse an, auf die der Alarm verweist.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.Count">
      <summary>Zeigt die Anzahl der im System anstehenden Alarme an (nur für AlarmLine).</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.DeactivationTime">
      <summary>Zeigt den Zeitpunkt des Zurücksetzens des Alarms an (wann der Alarm endgültig quittiert wurde).</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.Group">
      <summary>Zeigt den sprachumschaltbaren Namen der Alarmgruppe an, in der der Alarm projektiert wurde.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.Machine">
      <summary>Zeigt den Rechnernamen an, auf dem der Alarm quittiert wurde. Wenn der Alarm noch nicht quittiert wurde, bleibt das Feld leer.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.Param1">
      <summary>Zeigt den Wert des alphanumerischen Parameters "Parameter1" an.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.Param2">
      <summary>Zeigt den Wert des numerischen Parameters "Parameter2" an. </summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.Priority">
      <summary>Zeigt die Priorität des Alarms an. </summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.State">
      <summary>Zeigt den in der Alarmklasse angegebenen sprachumschaltbaren Text an, der den aktuellen Status des Alarms beschreibt.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.Symbol">
      <summary>Zeigt das in der Alarmklasse angegebene Symbol an, das den aktuellen Status des Alarms beschreibt.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.Text">
      <summary>Zeigt den sprachumschaltbaren Text an, der den Alarm beschreibt.</summary>
    </member>
    <member name="F:VisiWin.Controls.AlarmProperty.User">
      <summary>Zeigt den Anmeldenamen des Benutzers an, der den Alarm quittiert hat. Wenn der Alarm noch nicht quittiert wurde, bleibt das Feld leer.</summary>
    </member>
    <member name="T:VisiWin.Controls.BarDirection">
      <summary>Beschreibt die möglichen Verlaufsrichtungen einer Balkenanzeige</summary>
    </member>
    <member name="F:VisiWin.Controls.BarDirection.Down">
      <summary>Verlauf von oben (Minimalwert) nach unten (Maximalwert).</summary>
    </member>
    <member name="F:VisiWin.Controls.BarDirection.Left">
      <summary>Verlauf von rechts (Minimalwert) nach links (Maximalwert).</summary>
    </member>
    <member name="F:VisiWin.Controls.BarDirection.Right">
      <summary>Verlauf von links (Minimalwert) nach rechts (Maximalwert).</summary>
    </member>
    <member name="F:VisiWin.Controls.BarDirection.Up">
      <summary>Verlauf von unten (Minimalwert) nach oben (Maximalwert).</summary>
    </member>
    <member name="T:VisiWin.Controls.CheckMode">
      <summary>Beinhaltet Einstellungen zur Steuerung der IsChecked-Eigenschaft bei Bedienung eines Steuerelementes. </summary>
    </member>
    <member name="F:VisiWin.Controls.CheckMode.Auto">
      <summary>Die IsChecked-Eigenschaft wird durch Klick auf das Steuerelement geändert.</summary>
    </member>
    <member name="F:VisiWin.Controls.CheckMode.Manual">
      <summary>Die IsChecked-Eigenschaft wird durch den Aufruf der Methoden SetChecked und SetUnchecked geändert. </summary>
    </member>
    <member name="T:VisiWin.Controls.ControlPanelElement">
      <summary>Beinhaltet die Konstanten zum Aufruf der Systemsteuerungsdialoge.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.AccessibilityOptions">
      <summary>Dialog zum Festlegen von Eingabehilfen.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.AddRemove_Programs">
      <summary>Dialog zum Installieren/Deinstallieren von Programmen.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.All">
      <summary>Hauptdialog der Systemsteuerung. Von hier aus kann zu den einzelnen Dialogen gewechselt werden.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Display">
      <summary>Dialog für Anzeigeeinstellungen (Desktop, Bildschirmschoner und Grafikkarte).</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Fonts">
      <summary>Schriftartenverwaltung.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Internet">
      <summary>Dialog für die Internetoptionen.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Joystick">
      <summary>Dialog zum Einstellen eines Joystick.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Keyboard">
      <summary>Dialog für Tastaturoptionen.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Mail">
      <summary>Dialog zum Einstellen von Mail-Profilen.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Modem">
      <summary>Einstellungen für installierte Modems.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Mouse">
      <summary>Mausdialog.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Multimedia">
      <summary>Dialog zum Einstellen von Multimedia-Optionen.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Network">
      <summary>Netzwerkeinstellungen.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Printer">
      <summary>Druckerverwaltung.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.RegionalSettings">
      <summary>Dialog für Eingabegebietsschemata.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.Server">
      <summary>Servermanagement.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.System">
      <summary>Systemeigenschaftendialog.</summary>
    </member>
    <member name="F:VisiWin.Controls.ControlPanelElement.TimeDate">
      <summary>Datum und Uhrzeit des Computers.</summary>
    </member>
    <member name="T:VisiWin.Controls.DisplayMode">
      <summary>Beinhaltet Einstellmöglichkeiten zur Anzeige von Skalenbestandteilen.</summary>
    </member>
    <member name="F:VisiWin.Controls.DisplayMode.Both">
      <summary>Zeigt Skalenbalken und Skalenlinien an.</summary>
    </member>
    <member name="F:VisiWin.Controls.DisplayMode.RulerOnly">
      <summary>Zeigt den Skalenbalken an.</summary>
    </member>
    <member name="F:VisiWin.Controls.DisplayMode.ScaleOnly">
      <summary>Zeigt nur die Skalenlinien an.</summary>
    </member>
    <member name="T:VisiWin.Controls.FunctionKey">
      <summary>Beschreibt die Funktionstasten auf der Bildschirmtastatur</summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_BACK">
      <summary>Zurück-Taste (Pfeil nach links). </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_CAPITAL">
      <summary>Feststelltaste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_CAPSLOCK">
      <summary>Feststelltaste.</summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_CLOSEPOPUP">
      <summary>Funktionstaste zum Schließen der über PopupTouchKeyMapping geöffneten Hilfstastatur. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_DELETE">
      <summary>"Entf"-Taste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_DOWN">
      <summary>Cursortaste Abwärts. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_ENTER">
      <summary>Eingabetaste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_ESCAPE">
      <summary>ESC-Taste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_LEFT">
      <summary>Cursortaste Links. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_LEFTALT">
      <summary>Linke Alternativ(ALT)-Taste.</summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_LEFTCTRL">
      <summary>Linke Steuerungstaste.</summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_LEFTSHIFT">
      <summary>Linke Umschalttaste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_LWIN">
      <summary>Linke Windows-Taste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_MARKS">
      <summary>Umschalttaste Sonderzeichen.</summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_NUMS">
      <summary>Umschalttaste Ziffernblock.</summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_RETURN">
      <summary>Eingabetaste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_RIGHT">
      <summary>Cursortaste Rechts. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_RIGHTALT">
      <summary>Rechte Alternativ(ALT)-Taste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_RIGHTCTRL">
      <summary>Rechte Steuerungstaste </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_RIGHTSHIFT">
      <summary>Rechte Umschalttaste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_RWIN">
      <summary>Rechte Windows-Taste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_SPACE">
      <summary>Leertaste.</summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_UNKNOWN">
      <summary>Unbekannte Funktionstaste. </summary>
    </member>
    <member name="F:VisiWin.Controls.FunctionKey.TOUCHKEY_UP">
      <summary>Cursortaste Aufwärts. </summary>
    </member>
    <member name="T:VisiWin.Controls.KeyMode">
      <summary>Aufzählung möglicher Modi des Key-Steuerelements. </summary>
    </member>
    <member name="F:VisiWin.Controls.KeyMode.BitOff">
      <summary>Der Digitalwert wird auf 0 (false) gesetzt (Ein Zurücksetzen ist über die Schaltfläche nicht möglich). </summary>
    </member>
    <member name="F:VisiWin.Controls.KeyMode.BitOn">
      <summary>Der Digitalwert wird auf 1 (true) gesetzt (Ein Zurücksetzen ist über die Schaltfläche nicht möglich). Dieser Modus wird üblicherweise zum Setzen von Triggern verwendet, die in der SPS selbständig zurückgesetzt werden. </summary>
    </member>
    <member name="F:VisiWin.Controls.KeyMode.KeyMode">
      <summary>Der Digitalwert wird so lange gesetzt, wie die Schaltfläche heruntergedrückt wird. Nach Loslassen der Schaltfläche springt der Wert zurück auf 0 (False).</summary>
    </member>
    <member name="F:VisiWin.Controls.KeyMode.ToggleBit">
      <summary>Der Digitalwert wird bei jeder Bedienung umgesetzt. </summary>
    </member>
    <member name="T:VisiWin.Controls.LimitsVisibility">
      <summary>Beschreibt die möglichen Anzeigeverhalten von Anfangs- und Endwerten in Skalenobjekten.</summary>
    </member>
    <member name="F:VisiWin.Controls.LimitsVisibility.Always">
      <summary>Anfangs- und Endwert werden immer angezeigt.</summary>
    </member>
    <member name="F:VisiWin.Controls.LimitsVisibility.Never">
      <summary>Anfangs- und Endwert werden nie angezeigt.</summary>
    </member>
    <member name="F:VisiWin.Controls.LimitsVisibility.SpaceAvailable">
      <summary>Anfangs- und Endwert werden angezeigt, wenn entsprechend über Padding/Margin der Platz zur Anzeige eingerichtet wurde.</summary>
    </member>
    <member name="T:VisiWin.Controls.LimitVisibility">
      <summary>Diese Aufzählung definiert die Sichtbarkeit von Skalentexten: - Der Text wird nie gezeigt - Die Automatik entscheidet anhand ihrer Parameter und der aktuellen Ausstattung des Controls, ob der Text gezeigt wird</summary>
    </member>
    <member name="F:VisiWin.Controls.LimitVisibility.Automatic">
      <summary>Die Automatik entscheidet anhand ihrer Parameter und der aktuellen Ausstattung des Controls, ob das Element gezeigt wird. </summary>
    </member>
    <member name="F:VisiWin.Controls.LimitVisibility.Never">
      <summary>Das Element wird nie gezeigt. </summary>
    </member>
    <member name="T:VisiWin.Controls.LineStyle">
      <summary>Beschreibt verschiedene Linienarten/ -muster.</summary>
    </member>
    <member name="F:VisiWin.Controls.LineStyle.Dash">
      <summary>Gestrichelte Linie.</summary>
    </member>
    <member name="F:VisiWin.Controls.LineStyle.DashDot">
      <summary>Linie mit Strich-Punkt-Muster.</summary>
    </member>
    <member name="F:VisiWin.Controls.LineStyle.DashDotDot">
      <summary>Linie mit Strich-Punkt-Punkt-Muster.</summary>
    </member>
    <member name="F:VisiWin.Controls.LineStyle.Dot">
      <summary>Gepunktete Linie.</summary>
    </member>
    <member name="F:VisiWin.Controls.LineStyle.Solid">
      <summary>Durchgezogene Linie.</summary>
    </member>
    <member name="T:VisiWin.Controls.LineType">
      <summary>Beschreibt die verschiedenen Rasterlinientypen auf einer Skala.</summary>
    </member>
    <member name="F:VisiWin.Controls.LineType.Major">
      <summary>Hauptraster.</summary>
    </member>
    <member name="F:VisiWin.Controls.LineType.Minor">
      <summary>Nebenraster.</summary>
    </member>
    <member name="F:VisiWin.Controls.LineType.None">
      <summary>Kein Raster.</summary>
    </member>
    <member name="T:VisiWin.Controls.LostKeyboardFocusBehavior">
      <summary>Beschreibt das Verhalten des Steuerelementes, wenn der Fokus verloren geht. </summary>
    </member>
    <member name="F:VisiWin.Controls.LostKeyboardFocusBehavior.KeepEditing">
      <summary>Behält den bearbeiteten Wert in der Anzeige, schreibt ihn aber nicht in den Variablenkern. </summary>
    </member>
    <member name="F:VisiWin.Controls.LostKeyboardFocusBehavior.RestoreValue">
      <summary>Liest den im Variablenkern gepufferten Wert in die Anzeige.</summary>
    </member>
    <member name="F:VisiWin.Controls.LostKeyboardFocusBehavior.WriteInput">
      <summary>Schreibt den Wert in den Variablenkern. </summary>
    </member>
    <member name="T:VisiWin.Controls.NumericTextBoxMaskType">
      <summary>Auflistung möglicher Maskierungstypen für die numerische TextBox. </summary>
    </member>
    <member name="F:VisiWin.Controls.NumericTextBoxMaskType.Decimal">
      <summary>Fließkomma Wert. </summary>
    </member>
    <member name="F:VisiWin.Controls.NumericTextBoxMaskType.Integer">
      <summary>Ganzzahliger Wert. </summary>
    </member>
    <member name="T:VisiWin.Controls.RepeatWriteMode">
      <summary>Beinhaltet die möglichen Einstellungen zur Bestimmung des Zeitpunktes, wann der im UpDownNumericVarIn angezeigte Wert in den Variablenkern geschrieben wird, wenn er durch die Schaltflächen zum In-/ Dekrementieren geändert wird.</summary>
    </member>
    <member name="F:VisiWin.Controls.RepeatWriteMode.OnButtonPressed">
      <summary>Der über die Schaltflächen geänderte Wert wird bei jeder In-/ Dekrementierung gleich geschrieben. </summary>
    </member>
    <member name="F:VisiWin.Controls.RepeatWriteMode.OnButtonUp">
      <summary>Der über die Schaltflächen geänderte Wert wird erst geschrieben, wenn die entsprechende Schaltfläche losgelassen wird. </summary>
    </member>
    <member name="T:VisiWin.Controls.ScaleBarAlignment">
      <summary>Beinhaltet die möglichen Positionen einer Skala im Steuerelement.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleBarAlignment.Primary">
      <summary>Für BarDirection=Up/ Down: Die Skala wird links vom Balken positioniert.für BarDirection=Left/ Right: Die Skala wird oberhalb des Balkens positioniert.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleBarAlignment.Secondary">
      <summary>Für BarDirection=Up/ Down: Die Skala wird rechts vom Balken positioniert.für BarDirection=Left/ Right: Die Skala wird unterhalb des Balkens positioniert.</summary>
    </member>
    <member name="T:VisiWin.Controls.ScaleDirection">
      <summary>Beinhaltet die möglichen Darstellungsrichtungen einer runden Skala.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleDirection.Clockwise">
      <summary>Aufsteigende Werte im Uhrzeigersinn.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleDirection.CounterClockwise">
      <summary>Aufsteigende Werte gegen den Uhrzeigersinn.</summary>
    </member>
    <member name="T:VisiWin.Controls.ScaleDisplay">
      <summary>Beinhaltet die möglichen Einstellungen zum Parametrieren der Anzeige einzelner Skalenelemente.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleDisplay.Both">
      <summary>Skalenbalken und Skalenlinien werden angezeigt.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleDisplay.RulerOnly">
      <summary>Nur der Skalenbalken wird angezeigt.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleDisplay.ScaleOnly">
      <summary>Nur die Skalenlinien werden angezeigt.</summary>
    </member>
    <member name="T:VisiWin.Controls.ScaleDivisionType">
      <summary>Beinhaltet die möglichen Kombinationen aus Schrittweiten zur Einstellung der automatischen Skalierung.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleDivisionType.Div1_2">
      <summary>Die Skalierung mit der Schrittweite "1" oder "2" kann dargestellt werden.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleDivisionType.Div1_2_5">
      <summary>Die Skalierung mit der Schrittweite "1", "2" oder "5" kann dargestellt werden.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleDivisionType.Div1_5">
      <summary>Die Skalierung mit der Schrittweite "1" oder "5" kann dargestellt werden.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleDivisionType.Div1only">
      <summary>Nur die Skalierung mit der Schrittweite "1" kann dargestellt werden.</summary>
    </member>
    <member name="T:VisiWin.Controls.ScalePositions">
      <summary>Beinhaltet die möglichen Ausrichtungen von Skalenbalken und Skalenwerten auf einer Skala.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScalePositions.Bottom">
      <summary>Der Skalenbalken wird horizontal gezeichnet. Die Werte werden unterhalb des Skalenbalkens angezeigt.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScalePositions.Left">
      <summary>Der Skalenbalken wird vertikal gezeichnet. Die Werte werden links vom Skalenbalken angezeigt.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScalePositions.Right">
      <summary>Der Skalenbalken wird vertikal gezeichnet. Die Werte werden rechts vom Skalenbalken angezeigt.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScalePositions.Top">
      <summary>Der Skalenbalken wird horizontal gezeichnet. Die Werte werden oberhalb des Skalenbalkens angezeigt.</summary>
    </member>
    <member name="T:VisiWin.Controls.ScaleType">
      <summary>Beinhaltet die möglichen Einstellungen für Skalentypen.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleType.Linear">
      <summary>Linearer Skalentyp.</summary>
    </member>
    <member name="F:VisiWin.Controls.ScaleType.Logarithm">
      <summary>Logarithmischer Skalentyp.</summary>
    </member>
    <member name="T:VisiWin.Controls.TagType">
      <summary>Beinhaltet Kennungen, die zur Identifikation oder Filterung programmatisch erstellter Elemente benötigt werden.</summary>
    </member>
    <member name="F:VisiWin.Controls.TagType.All">
      <summary>Die Kennzeichnung des Steuerelementes wird ignoriert.</summary>
    </member>
    <member name="F:VisiWin.Controls.TagType.LimitControl">
      <summary>Als Wertebereich gekennzeichnetes Steuerelement.</summary>
    </member>
    <member name="F:VisiWin.Controls.TagType.None">
      <summary>Steuerelement ohne Kennzeichnung.</summary>
    </member>
    <member name="F:VisiWin.Controls.TagType.ScaleLine">
      <summary>Als Skalenlinie gekennzeichnetes Steuerelement.</summary>
    </member>
    <member name="F:VisiWin.Controls.TagType.ScaleText">
      <summary>Als Skalentext gekennzeichnetes Steuerelement.</summary>
    </member>
    <member name="T:VisiWin.Controls.TextMode">
      <summary>Beinhaltet Einstellungen für die Darstellung von Texten auf einer Bildschirmtastaturtaste.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextMode.HardwareKeyboard">
      <summary>Auf der Taste werden die über TouchKey.TextBottomLeft, TouchKey.TextBottomRight, TouchKey.TextTopLeft und TouchKey.TextTopRight festgelegten Texte an der entsprechenden Position dargestellt.</summary>
    </member>
    <member name="F:VisiWin.Controls.TextMode.SingleCenterText">
      <summary>Auf der Taste wird der über TouchKey.TextCenter festgelegte Text zentriert dargestellt.</summary>
    </member>
    <member name="T:VisiWin.Controls.TimeMode">
      <summary>Beinhaltet mögliche Behandlungen von Datums-/Zeitwerten.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeMode.Local">
      <summary>Ein Datums-/Zeitwert wird als Rechnerzeit geschrieben oder gelesen. Dabei werden die Zeitzone sowie die Umstellung auf Sommer-/ Winterzeit berücksichtigt.</summary>
    </member>
    <member name="F:VisiWin.Controls.TimeMode.Utc">
      <summary>Ein Datums-/Zeitwert wird als UTC-Zeitstempel (UTC = Universal time code, zeitzonenunabhängiger Wert ohne Berücksichtigung der Sommer-/ Winterzeit) geschrieben oder gelesen.</summary>
    </member>
    <member name="T:VisiWin.Controls.ValueDirections">
      <summary>Beschreibt die möglichen Verlaufsrichtung einer Skala.</summary>
    </member>
    <member name="F:VisiWin.Controls.ValueDirections.Ascending">
      <summary>Aufsteigend.</summary>
    </member>
    <member name="F:VisiWin.Controls.ValueDirections.Descending">
      <summary>Absteigend.</summary>
    </member>
    <member name="T:VisiWin.Controls.ValueType">
      <summary>Beschreibt die Interpretationsart eines numerischen Wertes, der in Relation zu einem Prozessvariablenwert steht.</summary>
    </member>
    <member name="F:VisiWin.Controls.ValueType.AbsoluteRawValue">
      <summary>Der numerische Wert wird in Relation zum RawValue (Wert der Prozessvariablen ohne Einheitenumrechnung) gesetzt. </summary>
    </member>
    <member name="F:VisiWin.Controls.ValueType.AbsoluteValue">
      <summary>Der numerische Wert wird in Relation zum Value (Wert der Prozessvariablen mit Einheitenumrechnung) gesetzt.</summary>
    </member>
    <member name="F:VisiWin.Controls.ValueType.Percentage">
      <summary>Der numerische Wert wird als Prozentwert in Relation zum Maximum (z.B. Endwert einer Skala) interpretiert. </summary>
    </member>
    <member name="T:VisiWin.Controls.VariableValueMode">
      <summary>Beschreibt die möglichen Interpretationsarten einer numerischen Prozessvariablen, wenn über deren Wert eine indizierte Umschaltung oder Auswahl eines Listenelementes erfolgt. </summary>
    </member>
    <member name="F:VisiWin.Controls.VariableValueMode.Bit">
      <summary>Im Wert der numerischen Prozessvariablen wird das oberste gesetzte Bit als Index zur Auswahl des Elementes verwendet (Das unterste Bit hat den Index 0). </summary>
    </member>
    <member name="F:VisiWin.Controls.VariableValueMode.Value">
      <summary>Der Wert der Prozessvariablen wird als Index zur Auswahl eines Elementes aus einer Liste verwendet.</summary>
    </member>
    <member name="T:VisiWin.Controls.VerificationMode">
      <summary>Beinhaltet Möglichkeiten zur Bestätigung von verifikationsunterstützten Handlungen.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.Ack">
      <summary>Der Benutzer wird durch einen Dialog aufgefordert, seine Handlung zu bestätigen.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.AckComment">
      <summary>Der Benutzer wird durch einen Dialog aufgefordert, seine Handlung zu bestätigen und optional über ein Textfeld zu kommentieren.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.AckForceComment">
      <summary>Der Benutzer wird durch einen Dialog aufgefordert, seine Handlung über ein Textfeld zu kommentieren und anschließend zu bestätigen.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.Double">
      <summary>Der aktuell am System angemeldete Benutzer wird durch einen Dialog aufgefordert, seine Handlung zu bestätigen. Ein zweiter Benutzer muss sich nach dem Vier-Augen-Prinzip zusätzlich über Benutzernamen und Passwort authentifizieren. Optional benötigt der zweite Benutzer zur Freigabe der Handlung ein spezielles Recht.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.DoubleComment">
      <summary>Der aktuell am System angemeldete Benutzer wird durch einen Dialog aufgefordert, seine Handlung zu bestätigen und optional über ein Textfeld zu kommentieren. Ein zweiter Benutzer muss sich nach dem Vier-Augen-Prinzip zusätzlich über Benutzernamen und Passwort authentifizieren. Gegebenenfalls benötigt der zweite Benutzer zur Freigabe der Handlung ein spezielles Recht.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.DoubleForceComment">
      <summary>Der aktuell am System angemeldete Benutzer wird durch einen Dialog aufgefordert, seine Handlung über ein Textfeld zu kommentieren und zu bestätigen. Ein zweiter Benutzer muss sich nach dem Vier-Augen-Prinzip zusätzlich über Benutzernamen und Passwort authentifizieren. Gegebenenfalls benötigt der zweite Benutzer zur Freigabe der Handlung ein spezielles Recht.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.Silent">
      <summary>Die Handlung wird direkt ohne weitere Bestätigungen ausgeführt.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.Single">
      <summary>Der aktuell am System angemeldete Benutzer wird durch einen Dialog aufgefordert, seine Handlung über die Eingabe seines Passwortes zu bestätigen.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.SingleComment">
      <summary>Der aktuell am System angemeldete Benutzer wird durch einen Dialog aufgefordert, seine Handlung über die Eingabe seines Passwortes zu bestätigen und optional über ein Textfeld zu kommentieren.</summary>
    </member>
    <member name="F:VisiWin.Controls.VerificationMode.SingleForceComment">
      <summary>Der aktuell am System angemeldete Benutzer wird durch einen Dialog aufgefordert, seine Handlung über ein Textfeld zu kommentieren. Anschließend muss er durch die Eingabe seines Passwortes die Handlung bestätigen.</summary>
    </member>
    <member name="T:VisiWin.ValidationRules.LengthValidationRule">
      <summary>Validator: Überprüft die Länge einer Zeichenkette. Erkennt die zu überprüfende Zeichenkette als valide an, wenn ihre Länge den in der MaxLength-Eigenschaft angegebenen Wert nicht überschreitet.</summary>
    </member>
    <member name="P:VisiWin.ValidationRules.LengthValidationRule.Hours">
      <summary>Gibt eine Fehlertext an, der ausgegeben wird, wenn die geprüfte Zeichenkette nicht als valide erkannt wird</summary>
    </member>
    <member name="P:VisiWin.ValidationRules.LengthValidationRule.MaxLength">
      <summary>Gibt die maximale Länge an, die nicht überschritten werden darf, um die Zeichenkette als valide anzuerkennen</summary>
    </member>
    <member name="M:VisiWin.ValidationRules.LengthValidationRule.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.ValidationRules.LengthValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>Führt die Überprüfung aus</summary>
      <returns>Gibt ein Objekt mit dem Prüfungsergebnis und dem Fehlertext zurück</returns>
      <param name="value">Zu prüfender Wert</param>
      <param name="cultureInfo">Informationen über die verwendete Sprache</param>
    </member>
    <member name="M:VisiWin.ValidationRules.LengthValidationRule.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ LengthValidationRule.</summary>
    </member>
    <member name="T:VisiWin.ValidationRules.MinMaxValueValidationRule">
      <summary>Validator: Überprüft, ob ein numerischer Wert im über die Eigenschaften MaxValue und MinValue angegeben Bereich liegt</summary>
    </member>
    <member name="P:VisiWin.ValidationRules.MinMaxValueValidationRule.MaxValidationErrorText">
      <summary>Gibt den Text an, der als Fehlertext angegeben wird, wenn der zu überprüfende Wert den Wert der MaxValue-Eigenschaft überschreitet</summary>
    </member>
    <member name="P:VisiWin.ValidationRules.MinMaxValueValidationRule.MaxValue">
      <summary>Gibt das Maximum an, das nicht überschritten werden darf, um den Wert als valide anzuerkennen</summary>
    </member>
    <member name="P:VisiWin.ValidationRules.MinMaxValueValidationRule.MinValidationErrorText">
      <summary>Gibt den Text an, der als Fehlertext angegeben wird, wenn der zu überprüfende Wert den Wert der MinValue-Eigenschaft unterschreitet</summary>
    </member>
    <member name="P:VisiWin.ValidationRules.MinMaxValueValidationRule.MinValue">
      <summary>Gibt das Minimum an, das nicht unterschritten werden darf, um den Wert als valide anzuerkennen</summary>
    </member>
    <member name="M:VisiWin.ValidationRules.MinMaxValueValidationRule.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.ValidationRules.MinMaxValueValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>Führt die Überprüfung aus</summary>
      <returns>Gibt ein Objekt mit dem Prüfungsergebnis und dem Fehlertext zurück</returns>
      <param name="value">Zu prüfender Wert</param>
      <param name="cultureInfo">Informationen über die verwendete Sprache</param>
    </member>
    <member name="M:VisiWin.ValidationRules.MinMaxValueValidationRule.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ MinMaxValueValidationRule.</summary>
    </member>
    <member name="T:VisiWin.ValidationRules.StringRangeValidationRule">
      <summary>Validator: Überprüft, ob die Länge einer Zeichenkette im über die Eigenschaften MinimumLength und MaximumLength angegeben Bereich liegt</summary>
    </member>
    <member name="P:VisiWin.ValidationRules.StringRangeValidationRule.ErrorMessage">
      <summary>Gibt eine Fehlertext an, der ausgegeben wird, wenn die geprüfte Zeichenkette nicht als valide erkannt wird</summary>
    </member>
    <member name="P:VisiWin.ValidationRules.StringRangeValidationRule.MaximumLength">
      <summary>Gibt die maximale Länge an, die nicht überschritten werden darf, um die Zeichenkette als valide anzuerkennen</summary>
    </member>
    <member name="P:VisiWin.ValidationRules.StringRangeValidationRule.MinimumLength">
      <summary>Gibt die minimale Länge an, die nicht unterschritten werden darf, um die Zeichenkette als valide anzuerkennen</summary>
    </member>
    <member name="M:VisiWin.ValidationRules.StringRangeValidationRule.ToString">
      <summary>Gibt eine Zeichenkette zurück, die das Objekt anhand seiner Einstellungen beschreibt.</summary>
      <returns>Die angeforderte Zeichenkette.</returns>
    </member>
    <member name="M:VisiWin.ValidationRules.StringRangeValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>Führt die Überprüfung aus</summary>
      <returns>Gibt ein Objekt mit dem Prüfungsergebnis und dem Fehlertext zurück</returns>
      <param name="value">Zu prüfender Wert</param>
      <param name="cultureInfo">Informationen über die verwendete Sprache</param>
    </member>
    <member name="M:VisiWin.ValidationRules.StringRangeValidationRule.#ctor">
      <summary>Erzeugt einen neue Instanz vom Typ StringRangeValidationRule.</summary>
    </member>
  </members>
</doc>